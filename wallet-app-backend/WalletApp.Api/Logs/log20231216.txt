2023-12-16 11:30:42.912 +01:00 [INF] User profile is available. Using 'C:\Users\maste\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-16 11:30:43.121 +01:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2023-12-16 11:30:43.123 +01:00 [INF] Quartz Scheduler created
2023-12-16 11:30:43.124 +01:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2023-12-16 11:30:43.125 +01:00 [INF] RAMJobStore initialized.
2023-12-16 11:30:43.135 +01:00 [INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2023-12-16 11:30:43.137 +01:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2023-12-16 11:30:43.138 +01:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2023-12-16 11:30:43.148 +01:00 [INF] Adding 1 jobs, 1 triggers.
2023-12-16 11:30:43.151 +01:00 [INF] Adding job: DEFAULT.NBP
2023-12-16 11:30:43.268 +01:00 [INF] Now listening on: http://localhost:5238
2023-12-16 11:30:43.270 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-16 11:30:43.271 +01:00 [INF] Hosting environment: Development
2023-12-16 11:30:43.289 +01:00 [INF] Content root path: C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Api
2023-12-16 11:30:43.367 +01:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2023-12-16 11:30:43.672 +01:00 [INF] Start processing HTTP request GET http://api.nbp.pl/api/exchangerates/tables/c
2023-12-16 11:30:43.675 +01:00 [INF] Sending HTTP request GET http://api.nbp.pl/api/exchangerates/tables/c
2023-12-16 11:30:43.836 +01:00 [INF] Received HTTP response headers after 157.1168ms - 200
2023-12-16 11:30:43.841 +01:00 [INF] End processing HTTP request after 173.0229ms - 200
2023-12-16 11:30:46.988 +01:00 [ERR] An error occurred using the connection to database 'WalletApp' on server 'localhost,1433'.
2023-12-16 11:30:47.007 +01:00 [ERR] An exception occurred while iterating over the results of a query for context type 'WalletApp.Persistance.WalletDbContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the pre-login handshake. (provider: TCP Provider, error: 0 - Istniejące połączenie zostało gwałtownie zamknięte przez zdalnego hosta.)
 ---> System.ComponentModel.Win32Exception (10054): Istniejące połączenie zostało gwałtownie zamknięte przez zdalnego hosta.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ThrowExceptionAndWarning(Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParser.ConsumePreLoginHandshake(SqlConnectionEncryptOption encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean& marsCapable, Boolean& fedAuthRequired, Boolean tlsFirst, String serverCert)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:036c944f-7352-470a-b230-730a37e6c60d
Error Number:10054,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the pre-login handshake. (provider: TCP Provider, error: 0 - Istniejące połączenie zostało gwałtownie zamknięte przez zdalnego hosta.)
 ---> System.ComponentModel.Win32Exception (10054): Istniejące połączenie zostało gwałtownie zamknięte przez zdalnego hosta.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ThrowExceptionAndWarning(Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParser.ConsumePreLoginHandshake(SqlConnectionEncryptOption encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean& marsCapable, Boolean& fedAuthRequired, Boolean tlsFirst, String serverCert)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:036c944f-7352-470a-b230-730a37e6c60d
Error Number:10054,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2023-12-16 11:30:47.522 +01:00 [ERR] Job DEFAULT.NBP threw an unhandled Exception: 
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the pre-login handshake. (provider: TCP Provider, error: 0 - Istniejące połączenie zostało gwałtownie zamknięte przez zdalnego hosta.)
 ---> System.ComponentModel.Win32Exception (10054): Istniejące połączenie zostało gwałtownie zamknięte przez zdalnego hosta.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ThrowExceptionAndWarning(Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParser.ConsumePreLoginHandshake(SqlConnectionEncryptOption encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean& marsCapable, Boolean& fedAuthRequired, Boolean tlsFirst, String serverCert)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:036c944f-7352-470a-b230-730a37e6c60d
Error Number:10054,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at WalletApp.Persistance.Repositories.CurrencyRepository.GetCurrencies(CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Persistence\Repositories\CurrencyRepository.cs:line 38
   at WalletApp.Application.Common.Currency.UpdateCurrency.UpdateCurrencyCommandHandler.Handle(UpdateCurrencyCommand request, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Common\Currency\UpdateCurrency\UpdateCurrencyCommandHandler.cs:line 22
   at WalletApp.Application.Behaviours.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Behaviours\ValidationBehaviour.cs:line 22
   at WalletApp.Infractructure.Quartz.CallToNbpApiJob.Execute(IJobExecutionContext context) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Infrastructure\Quartz\CallToNbpApiJob.cs:line 20
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
2023-12-16 11:30:47.537 +01:00 [ERR] Job DEFAULT.NBP threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the pre-login handshake. (provider: TCP Provider, error: 0 - Istniejące połączenie zostało gwałtownie zamknięte przez zdalnego hosta.)
 ---> System.ComponentModel.Win32Exception (10054): Istniejące połączenie zostało gwałtownie zamknięte przez zdalnego hosta.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ThrowExceptionAndWarning(Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParser.ConsumePreLoginHandshake(SqlConnectionEncryptOption encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean& marsCapable, Boolean& fedAuthRequired, Boolean tlsFirst, String serverCert)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:036c944f-7352-470a-b230-730a37e6c60d
Error Number:10054,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at WalletApp.Persistance.Repositories.CurrencyRepository.GetCurrencies(CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Persistence\Repositories\CurrencyRepository.cs:line 38
   at WalletApp.Application.Common.Currency.UpdateCurrency.UpdateCurrencyCommandHandler.Handle(UpdateCurrencyCommand request, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Common\Currency\UpdateCurrency\UpdateCurrencyCommandHandler.cs:line 22
   at WalletApp.Application.Behaviours.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Behaviours\ValidationBehaviour.cs:line 22
   at WalletApp.Infractructure.Quartz.CallToNbpApiJob.Execute(IJobExecutionContext context) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Infrastructure\Quartz\CallToNbpApiJob.cs:line 20
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
   --- End of inner exception stack trace --- [See nested exception: System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the pre-login handshake. (provider: TCP Provider, error: 0 - Istniejące połączenie zostało gwałtownie zamknięte przez zdalnego hosta.)
 ---> System.ComponentModel.Win32Exception (10054): Istniejące połączenie zostało gwałtownie zamknięte przez zdalnego hosta.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ThrowExceptionAndWarning(Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParser.ConsumePreLoginHandshake(SqlConnectionEncryptOption encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean& marsCapable, Boolean& fedAuthRequired, Boolean tlsFirst, String serverCert)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
ClientConnectionId:036c944f-7352-470a-b230-730a37e6c60d
Error Number:10054,State:0,Class:20
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at WalletApp.Persistance.Repositories.CurrencyRepository.GetCurrencies(CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Persistence\Repositories\CurrencyRepository.cs:line 38
   at WalletApp.Application.Common.Currency.UpdateCurrency.UpdateCurrencyCommandHandler.Handle(UpdateCurrencyCommand request, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Common\Currency\UpdateCurrency\UpdateCurrencyCommandHandler.cs:line 22
   at WalletApp.Application.Behaviours.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Behaviours\ValidationBehaviour.cs:line 22
   at WalletApp.Infractructure.Quartz.CallToNbpApiJob.Execute(IJobExecutionContext context) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Infrastructure\Quartz\CallToNbpApiJob.cs:line 20
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)]
2023-12-16 11:33:14.995 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/token/RKndvbNUtz69mPnu0TFuzrpivBFOKWRn6u21kIdqC+QH6f7KHWUTqeuzlxshIb6ModffiXkeX5+378tvFMI3Q== - -
2023-12-16 11:33:15.075 +01:00 [WRN] Failed to determine the https port for redirect.
2023-12-16 11:33:15.077 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:15.098 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/token/RKndvbNUtz69mPnu0TFuzrpivBFOKWRn6u21kIdqC+QH6f7KHWUTqeuzlxshIb6ModffiXkeX5+378tvFMI3Q== - - - 204 - - 105.4798ms
2023-12-16 11:33:15.137 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/RKndvbNUtz69mPnu0TFuzrpivBFOKWRn6u21kIdqC+QH6f7KHWUTqeuzlxshIb6ModffiXkeX5+378tvFMI3Q== - -
2023-12-16 11:33:15.148 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:15.474 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '15.12.2023 21:03:41', Current time: '16.12.2023 10:33:15'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-16 11:33:15.480 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '15.12.2023 21:03:41', Current time: '16.12.2023 10:33:15'.
2023-12-16 11:33:15.486 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-16 11:33:15.532 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-16 11:33:15.903 +01:00 [INF] Executed DbCommand (72ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-16 11:33:16.058 +01:00 [INF] Executed DbCommand (7ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__get_Item_0
2023-12-16 11:33:16.359 +01:00 [INF] Executed DbCommand (12ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Tokens] SET [RefreshToken] = @p0, [RefreshTokenExpiryTime] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2023-12-16 11:33:16.416 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-12-16 11:33:16.472 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:33:16.528 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 985.974ms
2023-12-16 11:33:16.556 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-16 11:33:16.569 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/RKndvbNUtz69mPnu0TFuzrpivBFOKWRn6u21kIdqC+QH6f7KHWUTqeuzlxshIb6ModffiXkeX5+378tvFMI3Q== - - - 200 - application/json;+charset=utf-8 1431.6784ms
2023-12-16 11:33:16.621 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 11:33:16.623 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 11:33:16.624 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-16 11:33:16.629 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:16.630 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:16.630 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-16 11:33:16.630 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:16.631 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 10.2978ms
2023-12-16 11:33:16.634 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 12.8467ms
2023-12-16 11:33:16.633 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-16 11:33:16.633 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:16.632 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 8.1462ms
2023-12-16 11:33:16.641 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 11:33:16.647 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:16.647 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 17.2988ms
2023-12-16 11:33:16.641 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 11:33:16.649 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-16 11:33:16.649 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:16.652 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:16.653 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:16.686 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:33:16.686 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 11:33:16.686 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 11:33:16.686 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 11:33:16.690 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-16 11:33:16.691 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-16 11:33:16.692 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:33:16.698 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:33:16.738 +01:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 11:33:16.762 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 11:33:16.789 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:33:16.805 +01:00 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-16 11:33:16.808 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 115.5908ms
2023-12-16 11:33:16.810 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 11:33:16.812 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 179.4079ms
2023-12-16 11:33:16.814 +01:00 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 11:33:16.833 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:33:16.834 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:33:16.834 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:16.835 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:16.836 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 2.9524ms
2023-12-16 11:33:16.837 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 3.1698ms
2023-12-16 11:33:16.839 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:33:16.839 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:33:16.840 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:16.841 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:16.846 +01:00 [INF] Executed DbCommand (21ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:33:16.850 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 11:33:16.850 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 11:33:16.855 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:33:16.856 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:33:16.860 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:33:16.877 +01:00 [INF] Executed DbCommand (16ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 11:33:16.954 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 259.317ms
2023-12-16 11:33:16.955 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 11:33:16.957 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 307.5243ms
2023-12-16 11:33:16.983 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:33:16.990 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:33:16.995 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:33:17.001 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:33:17.004 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:33:17.010 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 11:33:17.016 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:33:17.017 +01:00 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 11:33:17.019 +01:00 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 11:33:17.023 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:33:17.024 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:33:17.025 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 328.3123ms
2023-12-16 11:33:17.028 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 11:33:17.028 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 140.0008ms
2023-12-16 11:33:17.029 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 387.8765ms
2023-12-16 11:33:17.029 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 169.1508ms
2023-12-16 11:33:17.031 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 11:33:17.033 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 11:33:17.035 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 195.5971ms
2023-12-16 11:33:17.036 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 197.6735ms
2023-12-16 11:33:17.044 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 343.0644ms
2023-12-16 11:33:17.046 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:33:17.047 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 406.5899ms
2023-12-16 11:33:24.459 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=331a4fd2-b4dc-43cd-8eed-6dd7f7192091 - -
2023-12-16 11:33:24.460 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:24.461 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=331a4fd2-b4dc-43cd-8eed-6dd7f7192091 - - - 204 - - 2.0679ms
2023-12-16 11:33:24.465 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=331a4fd2-b4dc-43cd-8eed-6dd7f7192091 - -
2023-12-16 11:33:24.465 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:24.467 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 11:33:24.468 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:33:24.473 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 11:33:24.475 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:33:24.476 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 7.0922ms
2023-12-16 11:33:24.478 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 11:33:24.479 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=331a4fd2-b4dc-43cd-8eed-6dd7f7192091 - - - 200 - application/json;+charset=utf-8 14.1208ms
2023-12-16 11:33:25.395 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:33:25.396 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:25.397 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 1.5876ms
2023-12-16 11:33:25.397 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:33:25.398 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:25.399 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 11:33:25.400 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:33:25.405 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 11:33:25.406 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:33:25.407 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 6.2706ms
2023-12-16 11:33:25.409 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 11:33:25.410 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 12.3016ms
2023-12-16 11:33:46.372 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-16 11:33:46.373 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 11:33:46.376 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:46.379 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:46.385 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 11.5526ms
2023-12-16 11:33:46.390 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 14.2225ms
2023-12-16 11:33:46.373 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 11:33:46.381 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-16 11:33:46.387 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-16 11:33:46.397 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 11:33:46.398 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:46.399 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:46.400 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:46.399 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:46.403 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-16 11:33:46.405 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 11:33:46.401 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 27.6577ms
2023-12-16 11:33:46.402 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 22.0938ms
2023-12-16 11:33:46.402 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 11:33:46.407 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 11:33:46.408 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:46.409 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:33:46.410 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:46.411 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-16 11:33:46.413 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 11:33:46.415 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:33:46.417 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 11:33:46.418 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-16 11:33:46.422 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-16 11:33:46.419 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:33:46.425 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:33:46.428 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 11:33:46.428 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:33:46.433 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 11:33:46.434 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:33:46.436 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:33:46.435 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 18.3197ms
2023-12-16 11:33:46.440 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 16.161ms
2023-12-16 11:33:46.440 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 11:33:46.443 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 11:33:46.444 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 11:33:46.444 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:33:46.448 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 60.6563ms
2023-12-16 11:33:46.449 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 45.9047ms
2023-12-16 11:33:46.450 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 11:33:46.456 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:33:46.457 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:33:46.460 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 31.7036ms
2023-12-16 11:33:46.461 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:33:46.462 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:33:46.463 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:33:46.463 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:33:46.465 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:33:46.466 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 64.1941ms
2023-12-16 11:33:46.466 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:46.467 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:46.469 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 55.4954ms
2023-12-16 11:33:46.471 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 7.6867ms
2023-12-16 11:33:46.471 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 8.5187ms
2023-12-16 11:33:46.472 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:33:46.472 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:33:46.472 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 11:33:46.475 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:46.475 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:33:46.477 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 80.9220ms
2023-12-16 11:33:46.478 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 11:33:46.479 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 11:33:46.480 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:33:46.480 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:33:46.485 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 11:33:46.488 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 11:33:46.489 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:33:46.491 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:33:46.492 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 10.1145ms
2023-12-16 11:33:46.493 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 10.0364ms
2023-12-16 11:33:46.494 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 11:33:46.495 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 11:33:46.496 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 24.2584ms
2023-12-16 11:33:46.498 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 25.0201ms
2023-12-16 11:34:14.191 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser - -
2023-12-16 11:34:14.192 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:14.193 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser - - - 204 - - 2.1419ms
2023-12-16 11:34:14.195 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/notesUser - -
2023-12-16 11:34:14.200 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:14.203 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api)'
2023-12-16 11:34:14.205 +01:00 [INF] Route matched with {action = "GetAllUserNotes", controller = "NotesUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IReadOnlyCollection`1[WalletApp.Application.Common.Note.GetUserNotes.GetUserNotesResponseDto]]]] GetAllUserNotes(System.Threading.CancellationToken) on controller WalletApp.Controllers.NotesUserController (WalletApp.Api).
2023-12-16 11:34:14.223 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[BackgroundColor], [n].[CratedBy], [n].[CreatedTime], [n].[DeletedBy], [n].[DeletedTime], [n].[GroupId], [n].[IsDeleted], [n].[IsDone], [n].[ModifiedBy], [n].[ModifiedTime], [n].[Text], [n].[TextColor], [n].[Title], [n].[UserIdentityId]
FROM [Notes] AS [n]
WHERE [n].[UserIdentityId] = @__userId_0
2023-12-16 11:34:14.240 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IReadOnlyCollection`1[[WalletApp.Application.Common.Note.GetUserNotes.GetUserNotesResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:34:14.244 +01:00 [INF] Executed action WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api) in 37.5061ms
2023-12-16 11:34:14.246 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api)'
2023-12-16 11:34:14.247 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/notesUser - - - 200 - application/json;+charset=utf-8 51.9200ms
2023-12-16 11:34:19.573 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/defaultUserTransactions - -
2023-12-16 11:34:19.574 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:19.575 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/defaultUserTransactions - - - 204 - - 1.9626ms
2023-12-16 11:34:19.576 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/defaultUserTransactions - -
2023-12-16 11:34:19.577 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:19.579 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.DefaultUserTransactionsController.GetDefaultUserTransactions (WalletApp.Api)'
2023-12-16 11:34:19.583 +01:00 [INF] Route matched with {action = "GetDefaultUserTransactions", controller = "DefaultUserTransactions"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IReadOnlyCollection`1[WalletApp.Application.Common.DefaultTransaction.GetDefaultUserTransactions.GetDefaultUserTransactionResponseDto]]]] GetDefaultUserTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.DefaultUserTransactionsController (WalletApp.Api).
2023-12-16 11:34:19.609 +01:00 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[BackgroundColor], [d].[CategoryId], [d].[CratedBy], [d].[CreatedTime], [d].[CurrencyId], [d].[DeletedBy], [d].[DeletedTime], [d].[Description], [d].[GroupId], [d].[IsDeleted], [d].[ModifiedBy], [d].[ModifiedTime], [d].[Price], [d].[TextColor], [d].[Title], [d].[UserIdentityId], [c].[Id], [c].[CratedBy], [c].[CreatedTime], [c].[DeletedBy], [c].[DeletedTime], [c].[GroupId], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[Name], [c].[UserIdentityId], [c0].[Id], [c0].[Ask], [c0].[Bid], [c0].[Code], [c0].[CratedBy], [c0].[CreatedTime], [c0].[CurrencyName], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[TradingDate]
FROM [DefaultTransactions] AS [d]
INNER JOIN [Categories] AS [c] ON [d].[CategoryId] = [c].[Id]
INNER JOIN [Currencies] AS [c0] ON [d].[CurrencyId] = [c0].[Id]
WHERE [d].[UserIdentityId] = @__userId_0
2023-12-16 11:34:19.631 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IReadOnlyCollection`1[[WalletApp.Application.Common.DefaultTransaction.GetDefaultUserTransactions.GetDefaultUserTransactionResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:34:19.635 +01:00 [INF] Executed action WalletApp.Controllers.DefaultUserTransactionsController.GetDefaultUserTransactions (WalletApp.Api) in 50.9508ms
2023-12-16 11:34:19.637 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.DefaultUserTransactionsController.GetDefaultUserTransactions (WalletApp.Api)'
2023-12-16 11:34:19.639 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/defaultUserTransactions - - - 200 - application/json;+charset=utf-8 63.1223ms
2023-12-16 11:34:22.392 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-16 11:34:22.393 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-16 11:34:22.392 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 11:34:22.392 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 11:34:22.397 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:22.399 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:22.400 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:22.406 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 13.1202ms
2023-12-16 11:34:22.411 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 17.7772ms
2023-12-16 11:34:22.401 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:22.402 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 9.9646ms
2023-12-16 11:34:22.406 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-16 11:34:22.409 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-16 11:34:22.414 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 11:34:22.419 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 26.4120ms
2023-12-16 11:34:22.420 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 11:34:22.420 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:22.421 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:22.421 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:22.422 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:22.424 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 11:34:22.424 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 11:34:22.425 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:34:22.426 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 11:34:22.426 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-16 11:34:22.427 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-16 11:34:22.429 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:34:22.428 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:34:22.434 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-16 11:34:22.436 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 11:34:22.439 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 11:34:22.440 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:34:22.443 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:34:22.445 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 15.1811ms
2023-12-16 11:34:22.447 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:34:22.448 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 14.9905ms
2023-12-16 11:34:22.449 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 11:34:22.452 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 11:34:22.453 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 47.0000ms
2023-12-16 11:34:22.454 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 45.1005ms
2023-12-16 11:34:22.456 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:34:22.461 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:34:22.463 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 11:34:22.467 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:34:22.468 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:34:22.467 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:34:22.471 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 11:34:22.470 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:22.474 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:22.475 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:34:22.478 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 10.9384ms
2023-12-16 11:34:22.479 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 11.6587ms
2023-12-16 11:34:22.479 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:34:22.480 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 11:34:22.480 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:34:22.481 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:34:22.483 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:22.485 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:34:22.485 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:22.486 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 51.6699ms
2023-12-16 11:34:22.487 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 11:34:22.488 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 50.6158ms
2023-12-16 11:34:22.489 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 11:34:22.490 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 11:34:22.491 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:34:22.492 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:34:22.492 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:34:22.493 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 73.5124ms
2023-12-16 11:34:22.496 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 82.7554ms
2023-12-16 11:34:22.499 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 11:34:22.505 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 11:34:22.506 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:34:22.509 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:34:22.510 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 14.4573ms
2023-12-16 11:34:22.511 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 12.061ms
2023-12-16 11:34:22.513 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 11:34:22.514 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 11:34:22.515 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 35.8857ms
2023-12-16 11:34:22.516 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 36.0775ms
2023-12-16 11:34:23.114 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - -
2023-12-16 11:34:23.115 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:23.116 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - - - 204 - - 1.8321ms
2023-12-16 11:34:23.117 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - -
2023-12-16 11:34:23.117 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:23.118 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:34:23.119 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:34:23.124 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 11:34:23.128 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 11:34:23.133 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 11:34:23.135 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:34:23.136 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 15.162ms
2023-12-16 11:34:23.137 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:34:23.138 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - - - 200 - application/json;+charset=utf-8 21.2453ms
2023-12-16 11:34:24.535 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-16 11:34:24.535 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 11:34:24.535 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 11:34:24.535 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-16 11:34:24.536 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:24.537 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:24.537 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:24.538 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:24.539 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 11:34:24.539 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 11:34:24.540 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:34:24.540 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 11:34:24.541 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-16 11:34:24.541 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:34:24.542 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:34:24.547 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-16 11:34:24.543 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-16 11:34:24.549 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 11:34:24.551 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:34:24.552 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 11:34:24.555 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 11:34:24.559 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:34:24.557 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 12.9454ms
2023-12-16 11:34:24.564 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 11:34:24.564 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:34:24.568 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 11:34:24.571 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:34:24.572 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 19.5043ms
2023-12-16 11:34:24.573 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 37.9184ms
2023-12-16 11:34:24.573 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 11:34:24.576 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 11:34:24.577 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:34:24.578 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:34:24.580 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 44.7516ms
2023-12-16 11:34:24.584 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 35.2281ms
2023-12-16 11:34:24.585 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:34:24.586 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:34:24.588 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:34:24.588 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:34:24.589 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 54.3854ms
2023-12-16 11:34:24.590 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:24.590 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:34:24.590 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:34:24.592 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 11:34:24.594 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:34:24.594 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 11:34:24.595 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:34:24.596 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 50.7119ms
2023-12-16 11:34:24.597 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:34:24.600 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 11:34:24.603 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 11:34:24.604 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 68.8935ms
2023-12-16 11:34:24.606 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:34:24.606 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 11:34:24.608 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 8.9686ms
2023-12-16 11:34:24.610 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:34:24.611 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 11:34:24.616 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 13.3519ms
2023-12-16 11:34:24.617 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 28.6951ms
2023-12-16 11:34:24.618 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 11:34:24.620 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 31.4466ms
2023-12-16 11:38:08.460 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - -
2023-12-16 11:38:08.467 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:08.468 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - - - 204 - - 8.2698ms
2023-12-16 11:38:08.469 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - -
2023-12-16 11:38:08.470 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:08.471 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:38:08.472 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:38:08.476 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 11:38:08.480 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 11:38:08.484 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 11:38:08.487 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:38:08.488 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 15.3633ms
2023-12-16 11:38:08.490 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:38:08.491 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - - - 200 - application/json;+charset=utf-8 21.7338ms
2023-12-16 11:38:10.410 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=3&PaginationParamsDto.PageSize=5 - -
2023-12-16 11:38:10.411 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:10.412 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=3&PaginationParamsDto.PageSize=5 - - - 204 - - 1.9854ms
2023-12-16 11:38:10.414 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=3&PaginationParamsDto.PageSize=5 - -
2023-12-16 11:38:10.415 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:10.416 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:38:10.417 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:38:10.422 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 11:38:10.427 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 11:38:10.430 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 11:38:10.432 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:38:10.433 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 13.8016ms
2023-12-16 11:38:10.434 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:38:10.435 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=3&PaginationParamsDto.PageSize=5 - - - 200 - application/json;+charset=utf-8 21.6686ms
2023-12-16 11:38:11.611 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/defaultUserTransactions - -
2023-12-16 11:38:11.612 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:11.614 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/defaultUserTransactions - - - 204 - - 3.2033ms
2023-12-16 11:38:11.615 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/defaultUserTransactions - -
2023-12-16 11:38:11.622 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:11.623 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.DefaultUserTransactionsController.GetDefaultUserTransactions (WalletApp.Api)'
2023-12-16 11:38:11.624 +01:00 [INF] Route matched with {action = "GetDefaultUserTransactions", controller = "DefaultUserTransactions"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IReadOnlyCollection`1[WalletApp.Application.Common.DefaultTransaction.GetDefaultUserTransactions.GetDefaultUserTransactionResponseDto]]]] GetDefaultUserTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.DefaultUserTransactionsController (WalletApp.Api).
2023-12-16 11:38:11.629 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[BackgroundColor], [d].[CategoryId], [d].[CratedBy], [d].[CreatedTime], [d].[CurrencyId], [d].[DeletedBy], [d].[DeletedTime], [d].[Description], [d].[GroupId], [d].[IsDeleted], [d].[ModifiedBy], [d].[ModifiedTime], [d].[Price], [d].[TextColor], [d].[Title], [d].[UserIdentityId], [c].[Id], [c].[CratedBy], [c].[CreatedTime], [c].[DeletedBy], [c].[DeletedTime], [c].[GroupId], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[Name], [c].[UserIdentityId], [c0].[Id], [c0].[Ask], [c0].[Bid], [c0].[Code], [c0].[CratedBy], [c0].[CreatedTime], [c0].[CurrencyName], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[TradingDate]
FROM [DefaultTransactions] AS [d]
INNER JOIN [Categories] AS [c] ON [d].[CategoryId] = [c].[Id]
INNER JOIN [Currencies] AS [c0] ON [d].[CurrencyId] = [c0].[Id]
WHERE [d].[UserIdentityId] = @__userId_0
2023-12-16 11:38:11.631 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IReadOnlyCollection`1[[WalletApp.Application.Common.DefaultTransaction.GetDefaultUserTransactions.GetDefaultUserTransactionResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:38:11.632 +01:00 [INF] Executed action WalletApp.Controllers.DefaultUserTransactionsController.GetDefaultUserTransactions (WalletApp.Api) in 7.0858ms
2023-12-16 11:38:11.634 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.DefaultUserTransactionsController.GetDefaultUserTransactions (WalletApp.Api)'
2023-12-16 11:38:11.635 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/defaultUserTransactions - - - 200 - application/json;+charset=utf-8 19.6884ms
2023-12-16 11:38:12.257 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-16 11:38:12.258 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 11:38:12.258 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 11:38:12.258 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-16 11:38:12.262 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:12.265 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:12.265 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:12.271 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 12.2055ms
2023-12-16 11:38:12.277 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 16.6273ms
2023-12-16 11:38:12.280 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 11:38:12.266 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:12.267 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 9.3933ms
2023-12-16 11:38:12.268 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-16 11:38:12.274 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 11:38:12.285 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:12.286 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 28.2052ms
2023-12-16 11:38:12.290 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:38:12.288 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:12.289 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:12.287 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-16 11:38:12.291 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:38:12.292 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 11:38:12.292 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 11:38:12.292 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:12.295 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-16 11:38:12.296 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:38:12.297 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 11:38:12.297 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 11:38:12.301 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-16 11:38:12.303 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 11:38:12.306 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 11:38:12.309 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 11:38:12.301 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-16 11:38:12.311 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:38:12.312 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:38:12.313 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 11:38:12.316 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 10.2261ms
2023-12-16 11:38:12.314 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:38:12.318 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:38:12.319 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 11:38:12.319 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:38:12.320 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 22.6771ms
2023-12-16 11:38:12.321 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 27.1434ms
2023-12-16 11:38:12.322 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 35.1026ms
2023-12-16 11:38:12.325 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 11:38:12.326 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:38:12.327 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:38:12.327 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:38:12.327 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:38:12.329 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 48.5158ms
2023-12-16 11:38:12.328 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 60.1657ms
2023-12-16 11:38:12.331 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:12.332 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:12.333 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:38:12.335 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 7.2352ms
2023-12-16 11:38:12.335 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 7.8154ms
2023-12-16 11:38:12.336 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:38:12.337 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:38:12.339 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:12.339 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:38:12.340 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:12.341 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 11:38:12.342 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:38:12.345 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 11:38:12.346 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:38:12.348 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 47.9102ms
2023-12-16 11:38:12.348 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:38:12.351 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 11:38:12.354 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 11:38:12.355 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 80.1868ms
2023-12-16 11:38:12.357 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 11:38:12.358 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:38:12.360 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:38:12.361 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 11.2681ms
2023-12-16 11:38:12.364 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 10.0137ms
2023-12-16 11:38:12.365 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 11:38:12.367 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 11:38:12.368 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 32.2597ms
2023-12-16 11:38:12.369 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 32.5386ms
2023-12-16 11:38:20.463 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser - -
2023-12-16 11:38:20.464 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:20.465 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser - - - 204 - - 2.1452ms
2023-12-16 11:38:20.466 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/notesUser - -
2023-12-16 11:38:20.467 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:20.469 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api)'
2023-12-16 11:38:20.470 +01:00 [INF] Route matched with {action = "GetAllUserNotes", controller = "NotesUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IReadOnlyCollection`1[WalletApp.Application.Common.Note.GetUserNotes.GetUserNotesResponseDto]]]] GetAllUserNotes(System.Threading.CancellationToken) on controller WalletApp.Controllers.NotesUserController (WalletApp.Api).
2023-12-16 11:38:20.476 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[BackgroundColor], [n].[CratedBy], [n].[CreatedTime], [n].[DeletedBy], [n].[DeletedTime], [n].[GroupId], [n].[IsDeleted], [n].[IsDone], [n].[ModifiedBy], [n].[ModifiedTime], [n].[Text], [n].[TextColor], [n].[Title], [n].[UserIdentityId]
FROM [Notes] AS [n]
WHERE [n].[UserIdentityId] = @__userId_0
2023-12-16 11:38:20.478 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IReadOnlyCollection`1[[WalletApp.Application.Common.Note.GetUserNotes.GetUserNotesResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:38:20.479 +01:00 [INF] Executed action WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api) in 7.4099ms
2023-12-16 11:38:20.480 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api)'
2023-12-16 11:38:20.481 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/notesUser - - - 200 - application/json;+charset=utf-8 14.5191ms
2023-12-16 11:38:35.580 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-16 11:38:35.580 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 11:38:35.580 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 11:38:35.580 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-16 11:38:35.581 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:35.582 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:35.583 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:35.586 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 5.4834ms
2023-12-16 11:38:35.587 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 11:38:35.589 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 7.0980ms
2023-12-16 11:38:35.592 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 11:38:35.586 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-16 11:38:35.584 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:35.585 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 5.0703ms
2023-12-16 11:38:35.597 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:35.598 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:35.601 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 11:38:35.599 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 18.5923ms
2023-12-16 11:38:35.600 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-16 11:38:35.598 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:35.601 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:38:35.602 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:38:35.603 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:35.605 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 11:38:35.605 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:38:35.609 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 11:38:35.609 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-16 11:38:35.609 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 11:38:35.612 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-16 11:38:35.614 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 11:38:35.619 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:38:35.621 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 11:38:35.616 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-16 11:38:35.626 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:38:35.624 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 11:38:35.629 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:38:35.629 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:38:35.630 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 12.1172ms
2023-12-16 11:38:35.633 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 20.1391ms
2023-12-16 11:38:35.636 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 11:38:35.634 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 11:38:35.638 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 11:38:35.638 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:38:35.639 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 38.9564ms
2023-12-16 11:38:35.641 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:38:35.642 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 55.2867ms
2023-12-16 11:38:35.646 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 35.3122ms
2023-12-16 11:38:35.647 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:38:35.648 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:38:35.652 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 59.8352ms
2023-12-16 11:38:35.653 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:38:35.655 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:38:35.657 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 49.8611ms
2023-12-16 11:38:35.658 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 11:38:35.659 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 71.6752ms
2023-12-16 11:38:35.725 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:38:35.727 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:35.728 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 3.0977ms
2023-12-16 11:38:35.729 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:38:35.730 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:35.731 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 11:38:35.732 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:38:35.737 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 11:38:35.739 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:38:35.741 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 6.7293ms
2023-12-16 11:38:35.742 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 11:38:35.744 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 14.5150ms
2023-12-16 11:38:35.752 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:38:35.752 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:35.757 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 5.9452ms
2023-12-16 11:38:35.758 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:38:35.760 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:38:35.761 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 11:38:35.763 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:38:35.770 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 11:38:35.773 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:38:35.775 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 10.0542ms
2023-12-16 11:38:35.776 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 11:38:35.778 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 19.0984ms
2023-12-16 11:45:37.044 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/defaultUserTransactions - -
2023-12-16 11:45:37.048 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:37.049 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/defaultUserTransactions - - - 204 - - 6.4090ms
2023-12-16 11:45:37.051 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/defaultUserTransactions - -
2023-12-16 11:45:37.052 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:37.053 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '16.12.2023 10:34:16', Current time: '16.12.2023 10:45:37'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-16 11:45:37.055 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '16.12.2023 10:34:16', Current time: '16.12.2023 10:45:37'.
2023-12-16 11:45:37.057 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-16 11:45:37.125 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/defaultUserTransactions - - - 401 - application/json 74.0952ms
2023-12-16 11:45:37.129 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/token/CG1hAPwftcNNiJY+RfeEpwKbjvpJ7S3SFfd+ChrGnAPTkk+2m5mKcz+SDP1fEv4uUK9SG7IFXoF2AKnAfwIA== - -
2023-12-16 11:45:37.130 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:37.130 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/token/CG1hAPwftcNNiJY+RfeEpwKbjvpJ7S3SFfd+ChrGnAPTkk+2m5mKcz+SDP1fEv4uUK9SG7IFXoF2AKnAfwIA== - - - 204 - - 1.5054ms
2023-12-16 11:45:37.131 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/CG1hAPwftcNNiJY+RfeEpwKbjvpJ7S3SFfd+ChrGnAPTkk+2m5mKcz+SDP1fEv4uUK9SG7IFXoF2AKnAfwIA== - -
2023-12-16 11:45:37.132 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:37.133 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '16.12.2023 10:34:16', Current time: '16.12.2023 10:45:37'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-16 11:45:37.135 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '16.12.2023 10:34:16', Current time: '16.12.2023 10:45:37'.
2023-12-16 11:45:37.136 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-16 11:45:37.137 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-16 11:45:37.162 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-16 11:45:37.166 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__get_Item_0
2023-12-16 11:45:37.176 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Tokens] SET [RefreshToken] = @p0, [RefreshTokenExpiryTime] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2023-12-16 11:45:37.180 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-12-16 11:45:37.182 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:45:37.183 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 44.1266ms
2023-12-16 11:45:37.184 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-16 11:45:37.185 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/CG1hAPwftcNNiJY+RfeEpwKbjvpJ7S3SFfd+ChrGnAPTkk+2m5mKcz+SDP1fEv4uUK9SG7IFXoF2AKnAfwIA== - - - 200 - application/json;+charset=utf-8 54.0569ms
2023-12-16 11:45:37.187 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/defaultUserTransactions - -
2023-12-16 11:45:37.188 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:37.189 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.DefaultUserTransactionsController.GetDefaultUserTransactions (WalletApp.Api)'
2023-12-16 11:45:37.190 +01:00 [INF] Route matched with {action = "GetDefaultUserTransactions", controller = "DefaultUserTransactions"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IReadOnlyCollection`1[WalletApp.Application.Common.DefaultTransaction.GetDefaultUserTransactions.GetDefaultUserTransactionResponseDto]]]] GetDefaultUserTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.DefaultUserTransactionsController (WalletApp.Api).
2023-12-16 11:45:37.194 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[BackgroundColor], [d].[CategoryId], [d].[CratedBy], [d].[CreatedTime], [d].[CurrencyId], [d].[DeletedBy], [d].[DeletedTime], [d].[Description], [d].[GroupId], [d].[IsDeleted], [d].[ModifiedBy], [d].[ModifiedTime], [d].[Price], [d].[TextColor], [d].[Title], [d].[UserIdentityId], [c].[Id], [c].[CratedBy], [c].[CreatedTime], [c].[DeletedBy], [c].[DeletedTime], [c].[GroupId], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[Name], [c].[UserIdentityId], [c0].[Id], [c0].[Ask], [c0].[Bid], [c0].[Code], [c0].[CratedBy], [c0].[CreatedTime], [c0].[CurrencyName], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[TradingDate]
FROM [DefaultTransactions] AS [d]
INNER JOIN [Categories] AS [c] ON [d].[CategoryId] = [c].[Id]
INNER JOIN [Currencies] AS [c0] ON [d].[CurrencyId] = [c0].[Id]
WHERE [d].[UserIdentityId] = @__userId_0
2023-12-16 11:45:37.197 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IReadOnlyCollection`1[[WalletApp.Application.Common.DefaultTransaction.GetDefaultUserTransactions.GetDefaultUserTransactionResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:45:37.198 +01:00 [INF] Executed action WalletApp.Controllers.DefaultUserTransactionsController.GetDefaultUserTransactions (WalletApp.Api) in 6.8027ms
2023-12-16 11:45:37.200 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.DefaultUserTransactionsController.GetDefaultUserTransactions (WalletApp.Api)'
2023-12-16 11:45:37.201 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/defaultUserTransactions - - - 200 - application/json;+charset=utf-8 13.5140ms
2023-12-16 11:45:38.820 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-16 11:45:38.820 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 11:45:38.822 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 11:45:38.822 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-16 11:45:38.822 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:38.823 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:38.827 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:38.827 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:38.829 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 7.5018ms
2023-12-16 11:45:38.830 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 11:45:38.836 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-16 11:45:38.831 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 8.2388ms
2023-12-16 11:45:38.828 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 8.5617ms
2023-12-16 11:45:38.829 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 8.1057ms
2023-12-16 11:45:38.829 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-16 11:45:38.841 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:38.841 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:38.836 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 11:45:38.843 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:38.844 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 11:45:38.845 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 11:45:38.845 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:38.846 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 11:45:38.846 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-16 11:45:38.847 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:45:38.848 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-16 11:45:38.852 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 11:45:38.848 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:45:38.859 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:45:38.859 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:45:38.861 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 11.7326ms
2023-12-16 11:45:38.864 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 11:45:38.865 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 29.3937ms
2023-12-16 11:45:38.865 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 11:45:38.871 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 11:45:38.872 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:45:38.872 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:45:38.875 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:38.875 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:38.876 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 11:45:38.878 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:45:38.879 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:45:38.877 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 5.1305ms
2023-12-16 11:45:38.876 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 11:45:38.876 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 4.5946ms
2023-12-16 11:45:38.880 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:38.881 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:38.882 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:45:38.884 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:45:38.886 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 11:45:38.886 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 11:45:38.891 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:45:38.890 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 27.9191ms
2023-12-16 11:45:38.894 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:45:38.895 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:45:38.899 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 11:45:38.903 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:45:38.906 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:45:38.911 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 11:45:38.895 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-16 11:45:38.897 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:45:38.913 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 16.7221ms
2023-12-16 11:45:38.915 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:45:38.916 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:45:38.920 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 11:45:38.919 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:45:38.919 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 83.2043ms
2023-12-16 11:45:38.923 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 20.9871ms
2023-12-16 11:45:38.924 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 46.1348ms
2023-12-16 11:45:38.924 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:45:38.925 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 72.4388ms
2023-12-16 11:45:38.927 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 11:45:38.930 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:45:38.931 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 11:45:38.933 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 54.5013ms
2023-12-16 11:45:38.935 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 83.2213ms
2023-12-16 11:45:38.936 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 106.8553ms
2023-12-16 11:45:38.938 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 11:45:38.940 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 109.5646ms
2023-12-16 11:45:39.733 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - -
2023-12-16 11:45:39.734 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:39.735 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - - - 204 - - 2.2647ms
2023-12-16 11:45:39.737 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - -
2023-12-16 11:45:39.737 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:39.739 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:45:39.740 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:45:39.743 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 11:45:39.747 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 11:45:39.752 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 11:45:39.753 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:45:39.754 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 13.3102ms
2023-12-16 11:45:39.755 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:45:39.756 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - - - 200 - application/json;+charset=utf-8 19.4934ms
2023-12-16 11:45:41.437 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser - -
2023-12-16 11:45:41.438 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:41.440 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser - - - 204 - - 2.4238ms
2023-12-16 11:45:41.441 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/notesUser - -
2023-12-16 11:45:41.441 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:41.443 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api)'
2023-12-16 11:45:41.443 +01:00 [INF] Route matched with {action = "GetAllUserNotes", controller = "NotesUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IReadOnlyCollection`1[WalletApp.Application.Common.Note.GetUserNotes.GetUserNotesResponseDto]]]] GetAllUserNotes(System.Threading.CancellationToken) on controller WalletApp.Controllers.NotesUserController (WalletApp.Api).
2023-12-16 11:45:41.448 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[BackgroundColor], [n].[CratedBy], [n].[CreatedTime], [n].[DeletedBy], [n].[DeletedTime], [n].[GroupId], [n].[IsDeleted], [n].[IsDone], [n].[ModifiedBy], [n].[ModifiedTime], [n].[Text], [n].[TextColor], [n].[Title], [n].[UserIdentityId]
FROM [Notes] AS [n]
WHERE [n].[UserIdentityId] = @__userId_0
2023-12-16 11:45:41.450 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IReadOnlyCollection`1[[WalletApp.Application.Common.Note.GetUserNotes.GetUserNotesResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:45:41.451 +01:00 [INF] Executed action WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api) in 6.7767ms
2023-12-16 11:45:41.453 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api)'
2023-12-16 11:45:41.453 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/notesUser - - - 200 - application/json;+charset=utf-8 12.9686ms
2023-12-16 11:45:51.484 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/defaultUserTransactions - -
2023-12-16 11:45:51.485 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:51.486 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/defaultUserTransactions - - - 204 - - 1.7581ms
2023-12-16 11:45:51.487 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/defaultUserTransactions - -
2023-12-16 11:45:51.488 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:51.489 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.DefaultUserTransactionsController.GetDefaultUserTransactions (WalletApp.Api)'
2023-12-16 11:45:51.490 +01:00 [INF] Route matched with {action = "GetDefaultUserTransactions", controller = "DefaultUserTransactions"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IReadOnlyCollection`1[WalletApp.Application.Common.DefaultTransaction.GetDefaultUserTransactions.GetDefaultUserTransactionResponseDto]]]] GetDefaultUserTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.DefaultUserTransactionsController (WalletApp.Api).
2023-12-16 11:45:51.495 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[BackgroundColor], [d].[CategoryId], [d].[CratedBy], [d].[CreatedTime], [d].[CurrencyId], [d].[DeletedBy], [d].[DeletedTime], [d].[Description], [d].[GroupId], [d].[IsDeleted], [d].[ModifiedBy], [d].[ModifiedTime], [d].[Price], [d].[TextColor], [d].[Title], [d].[UserIdentityId], [c].[Id], [c].[CratedBy], [c].[CreatedTime], [c].[DeletedBy], [c].[DeletedTime], [c].[GroupId], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[Name], [c].[UserIdentityId], [c0].[Id], [c0].[Ask], [c0].[Bid], [c0].[Code], [c0].[CratedBy], [c0].[CreatedTime], [c0].[CurrencyName], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[TradingDate]
FROM [DefaultTransactions] AS [d]
INNER JOIN [Categories] AS [c] ON [d].[CategoryId] = [c].[Id]
INNER JOIN [Currencies] AS [c0] ON [d].[CurrencyId] = [c0].[Id]
WHERE [d].[UserIdentityId] = @__userId_0
2023-12-16 11:45:51.498 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IReadOnlyCollection`1[[WalletApp.Application.Common.DefaultTransaction.GetDefaultUserTransactions.GetDefaultUserTransactionResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:45:51.499 +01:00 [INF] Executed action WalletApp.Controllers.DefaultUserTransactionsController.GetDefaultUserTransactions (WalletApp.Api) in 7.149ms
2023-12-16 11:45:51.500 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.DefaultUserTransactionsController.GetDefaultUserTransactions (WalletApp.Api)'
2023-12-16 11:45:51.501 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/defaultUserTransactions - - - 200 - application/json;+charset=utf-8 13.8224ms
2023-12-16 11:45:52.314 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-16 11:45:52.316 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:52.316 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 11:45:52.316 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 11:45:52.316 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-16 11:45:52.317 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 2.2355ms
2023-12-16 11:45:52.317 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:52.318 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-16 11:45:52.318 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:52.319 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:52.320 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 4.2162ms
2023-12-16 11:45:52.321 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:52.321 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 11:45:52.324 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 11:45:52.322 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 5.6060ms
2023-12-16 11:45:52.322 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 11:45:52.322 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-16 11:45:52.321 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 5.0805ms
2023-12-16 11:45:52.324 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:52.325 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-16 11:45:52.326 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:52.326 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:52.328 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 11:45:52.330 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:45:52.331 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-16 11:45:52.331 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 11:45:52.331 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:45:52.332 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:45:52.334 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-16 11:45:52.338 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 11:45:52.341 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 11:45:52.342 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 11:45:52.344 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:45:52.334 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:45:52.346 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 11:45:52.346 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:45:52.349 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 20.3434ms
2023-12-16 11:45:52.353 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:45:52.353 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 14.5531ms
2023-12-16 11:45:52.354 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 11:45:52.354 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 11:45:52.357 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 11:45:52.359 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:45:52.359 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:45:52.361 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 38.1326ms
2023-12-16 11:45:52.360 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 42.0114ms
2023-12-16 11:45:52.364 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 26.2735ms
2023-12-16 11:45:52.365 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:45:52.366 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:45:52.367 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:45:52.367 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:45:52.372 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 49.7929ms
2023-12-16 11:45:52.372 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:52.373 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:52.373 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 11:45:52.375 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 7.8274ms
2023-12-16 11:45:52.375 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 8.1223ms
2023-12-16 11:45:52.377 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:45:52.377 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 11:45:52.378 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:45:52.380 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:52.380 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:52.382 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 46.261ms
2023-12-16 11:45:52.383 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 11:45:52.383 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 11:45:52.384 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 11:45:52.386 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:45:52.387 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:45:52.388 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 66.7580ms
2023-12-16 11:45:52.393 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 11:45:52.396 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 11:45:52.396 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:45:52.398 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:45:52.399 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 9.9659ms
2023-12-16 11:45:52.400 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 9.4534ms
2023-12-16 11:45:52.402 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 11:45:52.404 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 26.7583ms
2023-12-16 11:45:52.401 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 11:45:52.405 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 28.7003ms
2023-12-16 11:45:54.991 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - -
2023-12-16 11:45:54.992 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:54.994 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - - - 204 - - 3.5265ms
2023-12-16 11:45:54.995 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - -
2023-12-16 11:45:54.997 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:54.998 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:45:54.999 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:45:55.002 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 11:45:55.006 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 11:45:55.010 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 11:45:55.012 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:45:55.014 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 13.5562ms
2023-12-16 11:45:55.016 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:45:55.017 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - - - 200 - application/json;+charset=utf-8 21.1782ms
2023-12-16 11:45:55.547 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/defaultUserTransactions - -
2023-12-16 11:45:55.548 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:45:55.549 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.DefaultUserTransactionsController.GetDefaultUserTransactions (WalletApp.Api)'
2023-12-16 11:45:55.550 +01:00 [INF] Route matched with {action = "GetDefaultUserTransactions", controller = "DefaultUserTransactions"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IReadOnlyCollection`1[WalletApp.Application.Common.DefaultTransaction.GetDefaultUserTransactions.GetDefaultUserTransactionResponseDto]]]] GetDefaultUserTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.DefaultUserTransactionsController (WalletApp.Api).
2023-12-16 11:45:55.554 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[BackgroundColor], [d].[CategoryId], [d].[CratedBy], [d].[CreatedTime], [d].[CurrencyId], [d].[DeletedBy], [d].[DeletedTime], [d].[Description], [d].[GroupId], [d].[IsDeleted], [d].[ModifiedBy], [d].[ModifiedTime], [d].[Price], [d].[TextColor], [d].[Title], [d].[UserIdentityId], [c].[Id], [c].[CratedBy], [c].[CreatedTime], [c].[DeletedBy], [c].[DeletedTime], [c].[GroupId], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[Name], [c].[UserIdentityId], [c0].[Id], [c0].[Ask], [c0].[Bid], [c0].[Code], [c0].[CratedBy], [c0].[CreatedTime], [c0].[CurrencyName], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[TradingDate]
FROM [DefaultTransactions] AS [d]
INNER JOIN [Categories] AS [c] ON [d].[CategoryId] = [c].[Id]
INNER JOIN [Currencies] AS [c0] ON [d].[CurrencyId] = [c0].[Id]
WHERE [d].[UserIdentityId] = @__userId_0
2023-12-16 11:45:55.557 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IReadOnlyCollection`1[[WalletApp.Application.Common.DefaultTransaction.GetDefaultUserTransactions.GetDefaultUserTransactionResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:45:55.558 +01:00 [INF] Executed action WalletApp.Controllers.DefaultUserTransactionsController.GetDefaultUserTransactions (WalletApp.Api) in 6.4641ms
2023-12-16 11:45:55.559 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.DefaultUserTransactionsController.GetDefaultUserTransactions (WalletApp.Api)'
2023-12-16 11:45:55.560 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/defaultUserTransactions - - - 200 - application/json;+charset=utf-8 13.1367ms
2023-12-16 11:46:05.036 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser - -
2023-12-16 11:46:05.037 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:46:05.038 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser - - - 204 - - 1.6901ms
2023-12-16 11:46:05.039 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/notesUser - -
2023-12-16 11:46:05.039 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:46:05.041 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api)'
2023-12-16 11:46:05.041 +01:00 [INF] Route matched with {action = "GetAllUserNotes", controller = "NotesUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IReadOnlyCollection`1[WalletApp.Application.Common.Note.GetUserNotes.GetUserNotesResponseDto]]]] GetAllUserNotes(System.Threading.CancellationToken) on controller WalletApp.Controllers.NotesUserController (WalletApp.Api).
2023-12-16 11:46:05.045 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[BackgroundColor], [n].[CratedBy], [n].[CreatedTime], [n].[DeletedBy], [n].[DeletedTime], [n].[GroupId], [n].[IsDeleted], [n].[IsDone], [n].[ModifiedBy], [n].[ModifiedTime], [n].[Text], [n].[TextColor], [n].[Title], [n].[UserIdentityId]
FROM [Notes] AS [n]
WHERE [n].[UserIdentityId] = @__userId_0
2023-12-16 11:46:05.048 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IReadOnlyCollection`1[[WalletApp.Application.Common.Note.GetUserNotes.GetUserNotesResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 11:46:05.049 +01:00 [INF] Executed action WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api) in 6.0046ms
2023-12-16 11:46:05.050 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api)'
2023-12-16 11:46:05.051 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/notesUser - - - 200 - application/json;+charset=utf-8 12.0691ms
2023-12-16 11:46:08.534 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - -
2023-12-16 11:46:08.535 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:46:08.536 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - - - 204 - - 2.3380ms
2023-12-16 11:46:08.537 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - -
2023-12-16 11:46:08.538 +01:00 [INF] CORS policy execution successful.
2023-12-16 11:46:08.540 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:46:08.540 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 11:46:08.544 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 11:46:08.549 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 11:46:08.553 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 11:46:08.555 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 11:46:08.556 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 14.6875ms
2023-12-16 11:46:08.557 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 11:46:08.558 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - - - 200 - application/json;+charset=utf-8 20.6981ms
2023-12-16 12:52:57.584 +01:00 [INF] User profile is available. Using 'C:\Users\maste\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-16 12:52:57.777 +01:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2023-12-16 12:52:57.787 +01:00 [INF] Quartz Scheduler created
2023-12-16 12:52:57.788 +01:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2023-12-16 12:52:57.790 +01:00 [INF] RAMJobStore initialized.
2023-12-16 12:52:57.793 +01:00 [INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2023-12-16 12:52:57.794 +01:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2023-12-16 12:52:57.795 +01:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2023-12-16 12:52:57.812 +01:00 [INF] Adding 1 jobs, 1 triggers.
2023-12-16 12:52:57.817 +01:00 [INF] Adding job: DEFAULT.NBP
2023-12-16 12:52:58.007 +01:00 [INF] Now listening on: http://localhost:5238
2023-12-16 12:52:58.009 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-16 12:52:58.017 +01:00 [INF] Hosting environment: Development
2023-12-16 12:52:58.018 +01:00 [INF] Content root path: C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Api
2023-12-16 12:52:58.022 +01:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2023-12-16 12:52:58.299 +01:00 [INF] Start processing HTTP request GET http://api.nbp.pl/api/exchangerates/tables/c
2023-12-16 12:52:58.303 +01:00 [INF] Sending HTTP request GET http://api.nbp.pl/api/exchangerates/tables/c
2023-12-16 12:52:58.481 +01:00 [INF] Received HTTP response headers after 175.2303ms - 200
2023-12-16 12:52:58.486 +01:00 [INF] End processing HTTP request after 191.8456ms - 200
2023-12-16 12:53:00.506 +01:00 [INF] Executed DbCommand (63ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 12:53:01.268 +01:00 [ERR] Job DEFAULT.NBP threw an unhandled Exception: 
System.NullReferenceException: Object reference not set to an instance of an object.
   at WalletApp.Application.Common.Currency.UpdateCurrency.UpdateCurrencyCommandHandler.Handle(UpdateCurrencyCommand request, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Common\Currency\UpdateCurrency\UpdateCurrencyCommandHandler.cs:line 27
   at WalletApp.Application.Behaviours.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Behaviours\ValidationBehaviour.cs:line 22
   at WalletApp.Infractructure.Quartz.CallToNbpApiJob.Execute(IJobExecutionContext context) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Infrastructure\Quartz\CallToNbpApiJob.cs:line 20
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
2023-12-16 12:53:01.284 +01:00 [ERR] Job DEFAULT.NBP threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> System.NullReferenceException: Object reference not set to an instance of an object.
   at WalletApp.Application.Common.Currency.UpdateCurrency.UpdateCurrencyCommandHandler.Handle(UpdateCurrencyCommand request, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Common\Currency\UpdateCurrency\UpdateCurrencyCommandHandler.cs:line 27
   at WalletApp.Application.Behaviours.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Behaviours\ValidationBehaviour.cs:line 22
   at WalletApp.Infractructure.Quartz.CallToNbpApiJob.Execute(IJobExecutionContext context) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Infrastructure\Quartz\CallToNbpApiJob.cs:line 20
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
   --- End of inner exception stack trace --- [See nested exception: System.NullReferenceException: Object reference not set to an instance of an object.
   at WalletApp.Application.Common.Currency.UpdateCurrency.UpdateCurrencyCommandHandler.Handle(UpdateCurrencyCommand request, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Common\Currency\UpdateCurrency\UpdateCurrencyCommandHandler.cs:line 27
   at WalletApp.Application.Behaviours.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Behaviours\ValidationBehaviour.cs:line 22
   at WalletApp.Infractructure.Quartz.CallToNbpApiJob.Execute(IJobExecutionContext context) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Infrastructure\Quartz\CallToNbpApiJob.cs:line 20
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)]
2023-12-16 12:53:27.392 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/token/4Mew+xqJBBMM5p18KxOY01o6KtWAnKIR99wQnHBjFQ0M6PseJx1GhXnHe1joFnMuKsbGyrlbio55h9R29k7g== - -
2023-12-16 12:53:27.449 +01:00 [WRN] Failed to determine the https port for redirect.
2023-12-16 12:53:27.453 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:27.471 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/token/4Mew+xqJBBMM5p18KxOY01o6KtWAnKIR99wQnHBjFQ0M6PseJx1GhXnHe1joFnMuKsbGyrlbio55h9R29k7g== - - - 204 - - 83.1757ms
2023-12-16 12:53:27.480 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/4Mew+xqJBBMM5p18KxOY01o6KtWAnKIR99wQnHBjFQ0M6PseJx1GhXnHe1joFnMuKsbGyrlbio55h9R29k7g== - -
2023-12-16 12:53:27.487 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:27.785 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '16.12.2023 10:46:37', Current time: '16.12.2023 11:53:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-16 12:53:27.790 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '16.12.2023 10:46:37', Current time: '16.12.2023 11:53:27'.
2023-12-16 12:53:27.794 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-16 12:53:27.815 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-16 12:53:28.032 +01:00 [INF] Executed DbCommand (30ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-16 12:53:28.101 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__get_Item_0
2023-12-16 12:53:28.286 +01:00 [INF] Executed DbCommand (7ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Tokens] SET [RefreshToken] = @p0, [RefreshTokenExpiryTime] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2023-12-16 12:53:28.335 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-12-16 12:53:28.380 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 12:53:28.403 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 582.6716ms
2023-12-16 12:53:28.405 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-16 12:53:28.416 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/4Mew+xqJBBMM5p18KxOY01o6KtWAnKIR99wQnHBjFQ0M6PseJx1GhXnHe1joFnMuKsbGyrlbio55h9R29k7g== - - - 200 - application/json;+charset=utf-8 936.0133ms
2023-12-16 12:53:28.449 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 12:53:28.449 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 12:53:28.455 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-16 12:53:28.459 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:28.462 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:28.462 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:28.463 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-16 12:53:28.463 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 13.8530ms
2023-12-16 12:53:28.467 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:28.464 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 8.4160ms
2023-12-16 12:53:28.473 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 10.5436ms
2023-12-16 12:53:28.466 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 16.3046ms
2023-12-16 12:53:28.484 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 12:53:28.484 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-16 12:53:28.480 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 12:53:28.492 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-16 12:53:28.493 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:28.494 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:28.494 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:28.496 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:28.613 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 12:53:28.613 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 12:53:28.613 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 12:53:28.613 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 12:53:28.618 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:53:28.624 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-16 12:53:28.626 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-16 12:53:28.630 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:53:28.668 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 12:53:28.677 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:53:28.696 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 69.1239ms
2023-12-16 12:53:28.698 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 12:53:28.700 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 215.7059ms
2023-12-16 12:53:28.706 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 12:53:28.713 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 12:53:28.713 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 12:53:28.715 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:28.716 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:28.717 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 12:53:28.719 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 12:53:28.717 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 4.0307ms
2023-12-16 12:53:28.718 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 4.5635ms
2023-12-16 12:53:28.727 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:28.724 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 12:53:28.731 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-16 12:53:28.732 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:28.739 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 12:53:28.739 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 12:53:28.744 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:53:28.745 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:53:28.749 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:53:28.781 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 12:53:28.791 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 12:53:28.817 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 188.2802ms
2023-12-16 12:53:28.818 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 12:53:28.820 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 327.8743ms
2023-12-16 12:53:28.824 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:53:28.841 +01:00 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:53:28.855 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:53:28.857 +01:00 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 12:53:28.858 +01:00 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 12:53:28.862 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:53:28.864 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:53:28.865 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:53:28.867 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:53:28.872 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 123.8163ms
2023-12-16 12:53:28.872 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 125.8863ms
2023-12-16 12:53:28.874 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 12:53:28.875 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 12:53:28.876 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 155.2462ms
2023-12-16 12:53:28.878 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 158.8055ms
2023-12-16 12:53:28.882 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 12:53:28.884 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 258.9072ms
2023-12-16 12:53:28.885 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 12:53:28.887 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 402.5462ms
2023-12-16 12:53:28.887 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 12:53:28.914 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 281.4386ms
2023-12-16 12:53:28.916 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 12:53:28.917 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 436.8560ms
2023-12-16 12:53:33.635 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-16 12:53:33.635 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 12:53:33.636 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:33.636 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:33.637 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 2.0446ms
2023-12-16 12:53:33.637 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 2.0605ms
2023-12-16 12:53:33.638 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-16 12:53:33.639 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 12:53:33.639 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 12:53:33.639 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-16 12:53:33.640 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:33.640 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:33.641 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:33.642 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:33.643 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 12:53:33.644 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 12:53:33.644 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 4.8140ms
2023-12-16 12:53:33.645 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 5.5729ms
2023-12-16 12:53:33.645 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 12:53:33.646 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-16 12:53:33.646 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-16 12:53:33.646 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:53:33.649 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:33.651 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:33.655 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 12:53:33.656 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 12:53:33.655 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-16 12:53:33.658 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 12:53:33.659 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:53:33.659 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-16 12:53:33.662 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 12:53:33.666 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:53:33.669 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 18.9342ms
2023-12-16 12:53:33.670 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 12:53:33.674 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 12:53:33.670 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 12:53:33.678 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 40.3434ms
2023-12-16 12:53:33.681 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:53:33.681 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 12:53:33.682 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:53:33.686 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:53:33.688 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 20.6948ms
2023-12-16 12:53:33.689 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 12:53:33.692 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 12:53:33.693 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:53:33.694 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 12:53:33.695 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 49.4411ms
2023-12-16 12:53:33.700 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 34.9589ms
2023-12-16 12:53:33.701 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:53:33.702 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 12:53:33.703 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 12:53:33.703 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 12:53:33.704 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:53:33.705 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 59.7095ms
2023-12-16 12:53:33.705 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:33.706 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:33.708 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 55.2301ms
2023-12-16 12:53:33.709 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 12:53:33.710 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 12:53:33.711 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 12:53:33.711 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:53:33.712 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:53:33.713 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 74.4701ms
2023-12-16 12:53:33.720 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 12:53:33.722 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 12:53:33.724 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:53:33.727 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:53:33.727 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 12.5627ms
2023-12-16 12:53:33.729 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 12.1845ms
2023-12-16 12:53:33.730 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 12:53:33.731 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 12:53:33.732 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 28.9362ms
2023-12-16 12:53:33.733 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 29.9513ms
2023-12-16 12:53:38.097 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - -
2023-12-16 12:53:38.098 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:38.100 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - - - 204 - - 2.8045ms
2023-12-16 12:53:38.101 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - -
2023-12-16 12:53:38.101 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:38.103 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 12:53:38.105 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:53:38.112 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 12:53:38.124 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 12:53:38.130 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 12:53:38.131 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 12:53:38.133 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 25.6217ms
2023-12-16 12:53:38.134 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 12:53:38.135 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - - - 200 - application/json;+charset=utf-8 34.1453ms
2023-12-16 12:53:39.764 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-16 12:53:39.764 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 12:53:39.764 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-16 12:53:39.764 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 12:53:39.765 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:39.765 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:39.766 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:39.767 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:39.768 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 3.8003ms
2023-12-16 12:53:39.768 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 3.9255ms
2023-12-16 12:53:39.769 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-16 12:53:39.769 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 4.5525ms
2023-12-16 12:53:39.770 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 12:53:39.770 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 5.3342ms
2023-12-16 12:53:39.771 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-16 12:53:39.771 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 12:53:39.772 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:39.773 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:39.775 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:39.776 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:39.777 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 12:53:39.777 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 12:53:39.778 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 12:53:39.779 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 12:53:39.779 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-16 12:53:39.780 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:53:39.781 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-16 12:53:39.781 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:53:39.787 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-16 12:53:39.790 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 12:53:39.793 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 12:53:39.796 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 12:53:39.796 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 12:53:39.799 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:53:39.800 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 17.1609ms
2023-12-16 12:53:39.804 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 15.861ms
2023-12-16 12:53:39.800 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:53:39.805 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 12:53:39.806 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 12:53:39.807 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 12:53:39.813 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 43.8158ms
2023-12-16 12:53:39.814 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 43.5564ms
2023-12-16 12:53:39.815 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 12:53:39.816 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:53:39.818 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 12:53:39.821 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 28.3673ms
2023-12-16 12:53:39.822 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:53:39.822 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 12:53:39.826 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 55.2075ms
2023-12-16 12:53:39.828 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:53:39.838 +01:00 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:53:39.842 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:53:39.844 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 58.3648ms
2023-12-16 12:53:39.845 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 12:53:39.847 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 76.8984ms
2023-12-16 12:53:39.872 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 12:53:39.872 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 12:53:39.872 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:39.873 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:39.874 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 2.1669ms
2023-12-16 12:53:39.874 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 2.6279ms
2023-12-16 12:53:39.875 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 12:53:39.876 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 12:53:39.877 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:39.877 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:39.879 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 12:53:39.880 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 12:53:39.880 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:53:39.880 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:53:39.886 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 12:53:39.889 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 12:53:39.889 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:53:39.891 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:53:39.893 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 10.5265ms
2023-12-16 12:53:39.895 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 11.3854ms
2023-12-16 12:53:39.896 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 12:53:39.897 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 12:53:39.898 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 23.0679ms
2023-12-16 12:53:39.899 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 23.3018ms
2023-12-16 12:53:40.528 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/defaultUserTransactions - -
2023-12-16 12:53:40.529 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:40.530 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/defaultUserTransactions - - - 204 - - 2.0090ms
2023-12-16 12:53:40.531 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/defaultUserTransactions - -
2023-12-16 12:53:40.532 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:40.533 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.DefaultUserTransactionsController.GetDefaultUserTransactions (WalletApp.Api)'
2023-12-16 12:53:40.536 +01:00 [INF] Route matched with {action = "GetDefaultUserTransactions", controller = "DefaultUserTransactions"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IReadOnlyCollection`1[WalletApp.Application.Common.DefaultTransaction.GetDefaultUserTransactions.GetDefaultUserTransactionResponseDto]]]] GetDefaultUserTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.DefaultUserTransactionsController (WalletApp.Api).
2023-12-16 12:53:40.561 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[BackgroundColor], [d].[CategoryId], [d].[CratedBy], [d].[CreatedTime], [d].[CurrencyId], [d].[DeletedBy], [d].[DeletedTime], [d].[Description], [d].[GroupId], [d].[IsDeleted], [d].[ModifiedBy], [d].[ModifiedTime], [d].[Price], [d].[TextColor], [d].[Title], [d].[UserIdentityId], [c].[Id], [c].[CratedBy], [c].[CreatedTime], [c].[DeletedBy], [c].[DeletedTime], [c].[GroupId], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[Name], [c].[UserIdentityId], [c0].[Id], [c0].[Ask], [c0].[Bid], [c0].[Code], [c0].[CratedBy], [c0].[CreatedTime], [c0].[CurrencyName], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[TradingDate]
FROM [DefaultTransactions] AS [d]
INNER JOIN [Categories] AS [c] ON [d].[CategoryId] = [c].[Id]
INNER JOIN [Currencies] AS [c0] ON [d].[CurrencyId] = [c0].[Id]
WHERE [d].[UserIdentityId] = @__userId_0
2023-12-16 12:53:40.581 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IReadOnlyCollection`1[[WalletApp.Application.Common.DefaultTransaction.GetDefaultUserTransactions.GetDefaultUserTransactionResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:53:40.586 +01:00 [INF] Executed action WalletApp.Controllers.DefaultUserTransactionsController.GetDefaultUserTransactions (WalletApp.Api) in 48.0972ms
2023-12-16 12:53:40.587 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.DefaultUserTransactionsController.GetDefaultUserTransactions (WalletApp.Api)'
2023-12-16 12:53:40.588 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/defaultUserTransactions - - - 200 - application/json;+charset=utf-8 56.6349ms
2023-12-16 12:53:42.343 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-16 12:53:42.344 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 12:53:42.344 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:42.344 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 12:53:42.344 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-16 12:53:42.345 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:42.346 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 12:53:42.346 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:42.347 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:42.349 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 12:53:42.349 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-16 12:53:42.351 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 12:53:42.352 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 12:53:42.352 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:53:42.355 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:53:42.357 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-16 12:53:42.357 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-16 12:53:42.365 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 12:53:42.361 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 12:53:42.366 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 12:53:42.371 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 12:53:42.367 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 12:53:42.374 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:53:42.375 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:53:42.379 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 24.8328ms
2023-12-16 12:53:42.380 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 12:53:42.381 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 18.4164ms
2023-12-16 12:53:42.387 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 12:53:42.385 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 12:53:42.389 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 12:53:42.390 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:53:42.391 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 29.8603ms
2023-12-16 12:53:42.392 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 49.4571ms
2023-12-16 12:53:42.394 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 49.3215ms
2023-12-16 12:53:42.397 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 12:53:42.406 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 61.8985ms
2023-12-16 12:53:42.401 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:53:42.413 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:53:42.419 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:53:42.422 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:53:42.424 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 65.8543ms
2023-12-16 12:53:42.426 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 12:53:42.427 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 83.6409ms
2023-12-16 12:53:42.445 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 12:53:42.445 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 12:53:42.446 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:42.447 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:42.449 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 12:53:42.449 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 12:53:42.450 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:53:42.450 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:53:42.455 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 12:53:42.459 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 12:53:42.461 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:53:42.462 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:53:42.463 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 11.5081ms
2023-12-16 12:53:42.465 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 11.4685ms
2023-12-16 12:53:42.466 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 12:53:42.467 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 12:53:42.468 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 23.0923ms
2023-12-16 12:53:42.469 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 23.9181ms
2023-12-16 12:53:42.991 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - -
2023-12-16 12:53:42.992 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:42.994 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 12:53:42.995 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:53:43.000 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 12:53:43.005 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 12:53:43.008 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 12:53:43.010 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 12:53:43.011 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 13.4806ms
2023-12-16 12:53:43.012 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 12:53:43.013 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - - - 200 - application/json;+charset=utf-8 21.7062ms
2023-12-16 12:53:44.491 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser - -
2023-12-16 12:53:44.492 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:44.493 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser - - - 204 - - 2.1079ms
2023-12-16 12:53:44.494 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/notesUser - -
2023-12-16 12:53:44.495 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:44.496 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api)'
2023-12-16 12:53:44.499 +01:00 [INF] Route matched with {action = "GetAllUserNotes", controller = "NotesUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IReadOnlyCollection`1[WalletApp.Application.Common.Note.GetUserNotes.GetUserNotesResponseDto]]]] GetAllUserNotes(System.Threading.CancellationToken) on controller WalletApp.Controllers.NotesUserController (WalletApp.Api).
2023-12-16 12:53:44.510 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[BackgroundColor], [n].[CratedBy], [n].[CreatedTime], [n].[DeletedBy], [n].[DeletedTime], [n].[GroupId], [n].[IsDeleted], [n].[IsDone], [n].[ModifiedBy], [n].[ModifiedTime], [n].[Text], [n].[TextColor], [n].[Title], [n].[UserIdentityId]
FROM [Notes] AS [n]
WHERE [n].[UserIdentityId] = @__userId_0
2023-12-16 12:53:44.529 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IReadOnlyCollection`1[[WalletApp.Application.Common.Note.GetUserNotes.GetUserNotesResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:53:44.533 +01:00 [INF] Executed action WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api) in 32.5455ms
2023-12-16 12:53:44.535 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api)'
2023-12-16 12:53:44.536 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/notesUser - - - 200 - application/json;+charset=utf-8 41.9441ms
2023-12-16 12:53:45.055 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser/bee63547-f31d-4ac6-c841-08dbfd7d5172 - -
2023-12-16 12:53:45.056 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:45.057 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser/bee63547-f31d-4ac6-c841-08dbfd7d5172 - - - 204 - - 2.0289ms
2023-12-16 12:53:45.058 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/notesUser/bee63547-f31d-4ac6-c841-08dbfd7d5172 - -
2023-12-16 12:53:45.059 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:53:45.060 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.NotesUserController.GetUserNoteDetails (WalletApp.Api)'
2023-12-16 12:53:45.063 +01:00 [INF] Route matched with {action = "GetUserNoteDetails", controller = "NotesUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Note.GetUserNoteDetails.GetUserNoteDetailsResponseDto]]] GetUserNoteDetails(System.Guid, System.Threading.CancellationToken) on controller WalletApp.Controllers.NotesUserController (WalletApp.Api).
2023-12-16 12:53:45.076 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__noteId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[BackgroundColor], [n].[CratedBy], [n].[CreatedTime], [n].[DeletedBy], [n].[DeletedTime], [n].[GroupId], [n].[IsDeleted], [n].[IsDone], [n].[ModifiedBy], [n].[ModifiedTime], [n].[Text], [n].[TextColor], [n].[Title], [n].[UserIdentityId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__noteId_0
2023-12-16 12:53:45.078 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Note.GetUserNoteDetails.GetUserNoteDetailsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 12:53:45.081 +01:00 [INF] Executed action WalletApp.Controllers.NotesUserController.GetUserNoteDetails (WalletApp.Api) in 16.1816ms
2023-12-16 12:53:45.083 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.NotesUserController.GetUserNoteDetails (WalletApp.Api)'
2023-12-16 12:53:45.084 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/notesUser/bee63547-f31d-4ac6-c841-08dbfd7d5172 - - - 200 - application/json;+charset=utf-8 25.7887ms
2023-12-16 12:54:44.176 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser - -
2023-12-16 12:54:44.181 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:54:44.182 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser - - - 204 - - 6.8484ms
2023-12-16 12:54:44.186 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/notesUser - -
2023-12-16 12:54:44.189 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:54:44.190 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api)'
2023-12-16 12:54:44.192 +01:00 [INF] Route matched with {action = "GetAllUserNotes", controller = "NotesUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IReadOnlyCollection`1[WalletApp.Application.Common.Note.GetUserNotes.GetUserNotesResponseDto]]]] GetAllUserNotes(System.Threading.CancellationToken) on controller WalletApp.Controllers.NotesUserController (WalletApp.Api).
2023-12-16 12:54:44.199 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[BackgroundColor], [n].[CratedBy], [n].[CreatedTime], [n].[DeletedBy], [n].[DeletedTime], [n].[GroupId], [n].[IsDeleted], [n].[IsDone], [n].[ModifiedBy], [n].[ModifiedTime], [n].[Text], [n].[TextColor], [n].[Title], [n].[UserIdentityId]
FROM [Notes] AS [n]
WHERE [n].[UserIdentityId] = @__userId_0
2023-12-16 12:54:44.203 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IReadOnlyCollection`1[[WalletApp.Application.Common.Note.GetUserNotes.GetUserNotesResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:54:44.205 +01:00 [INF] Executed action WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api) in 10.5383ms
2023-12-16 12:54:44.206 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api)'
2023-12-16 12:54:44.208 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/notesUser - - - 200 - application/json;+charset=utf-8 21.7118ms
2023-12-16 12:54:47.238 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - -
2023-12-16 12:54:47.239 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:54:47.240 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - - - 204 - - 2.4665ms
2023-12-16 12:54:47.242 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - -
2023-12-16 12:54:47.247 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:54:47.248 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 12:54:47.249 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:54:47.252 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 12:54:47.257 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 12:54:47.263 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 12:54:47.265 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 12:54:47.266 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 16.0911ms
2023-12-16 12:54:47.267 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 12:54:47.268 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - - - 200 - application/json;+charset=utf-8 26.4649ms
2023-12-16 12:54:48.519 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-16 12:54:48.520 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-16 12:54:48.519 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 12:54:48.522 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:54:48.519 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 12:54:48.526 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:54:48.527 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:54:48.533 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 13.5761ms
2023-12-16 12:54:48.536 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 16.5505ms
2023-12-16 12:54:48.528 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 9.0193ms
2023-12-16 12:54:48.529 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:54:48.530 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-16 12:54:48.536 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-16 12:54:48.539 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 12:54:48.547 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 27.8873ms
2023-12-16 12:54:48.548 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:54:48.548 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 12:54:48.549 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:54:48.549 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:54:48.551 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 12:54:48.551 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:54:48.552 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 12:54:48.553 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 12:54:48.553 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-16 12:54:48.554 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 12:54:48.555 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-16 12:54:48.559 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:54:48.561 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-16 12:54:48.556 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:54:48.564 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 12:54:48.567 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 12:54:48.567 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 12:54:48.571 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 12:54:48.571 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:54:48.576 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 12:54:48.574 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 16.8465ms
2023-12-16 12:54:48.579 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 17.2363ms
2023-12-16 12:54:48.580 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:54:48.582 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 12:54:48.583 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 12:54:48.583 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 12:54:48.587 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 50.1498ms
2023-12-16 12:54:48.586 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 56.5480ms
2023-12-16 12:54:48.589 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 12:54:48.589 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:54:48.592 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 27.5589ms
2023-12-16 12:54:48.595 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 12:54:48.596 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 47.8894ms
2023-12-16 12:54:48.596 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:54:48.602 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:54:48.607 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:54:48.610 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:54:48.611 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 43.5521ms
2023-12-16 12:54:48.612 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 12:54:48.614 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 75.1843ms
2023-12-16 12:54:48.614 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 12:54:48.615 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:54:48.616 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 1.6906ms
2023-12-16 12:54:48.617 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 12:54:48.618 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:54:48.619 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 12:54:48.620 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:54:48.620 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 12:54:48.621 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 1.7758ms
2023-12-16 12:54:48.622 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 12:54:48.622 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:54:48.624 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:54:48.628 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 12:54:48.630 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:54:48.631 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 12:54:48.635 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:54:48.638 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 12:54:48.639 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 13.0955ms
2023-12-16 12:54:48.641 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:54:48.642 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 12:54:48.643 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 11.0968ms
2023-12-16 12:54:48.644 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 26.8186ms
2023-12-16 12:54:48.645 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 12:54:48.647 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 24.8288ms
2023-12-16 12:54:49.038 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/defaultUserTransactions - -
2023-12-16 12:54:49.039 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:54:49.039 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/defaultUserTransactions - - - 204 - - 1.8595ms
2023-12-16 12:54:49.041 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/defaultUserTransactions - -
2023-12-16 12:54:49.042 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:54:49.043 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.DefaultUserTransactionsController.GetDefaultUserTransactions (WalletApp.Api)'
2023-12-16 12:54:49.045 +01:00 [INF] Route matched with {action = "GetDefaultUserTransactions", controller = "DefaultUserTransactions"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IReadOnlyCollection`1[WalletApp.Application.Common.DefaultTransaction.GetDefaultUserTransactions.GetDefaultUserTransactionResponseDto]]]] GetDefaultUserTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.DefaultUserTransactionsController (WalletApp.Api).
2023-12-16 12:54:49.050 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[BackgroundColor], [d].[CategoryId], [d].[CratedBy], [d].[CreatedTime], [d].[CurrencyId], [d].[DeletedBy], [d].[DeletedTime], [d].[Description], [d].[GroupId], [d].[IsDeleted], [d].[ModifiedBy], [d].[ModifiedTime], [d].[Price], [d].[TextColor], [d].[Title], [d].[UserIdentityId], [c].[Id], [c].[CratedBy], [c].[CreatedTime], [c].[DeletedBy], [c].[DeletedTime], [c].[GroupId], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[Name], [c].[UserIdentityId], [c0].[Id], [c0].[Ask], [c0].[Bid], [c0].[Code], [c0].[CratedBy], [c0].[CreatedTime], [c0].[CurrencyName], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[TradingDate]
FROM [DefaultTransactions] AS [d]
INNER JOIN [Categories] AS [c] ON [d].[CategoryId] = [c].[Id]
INNER JOIN [Currencies] AS [c0] ON [d].[CurrencyId] = [c0].[Id]
WHERE [d].[UserIdentityId] = @__userId_0
2023-12-16 12:54:49.052 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IReadOnlyCollection`1[[WalletApp.Application.Common.DefaultTransaction.GetDefaultUserTransactions.GetDefaultUserTransactionResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:54:49.053 +01:00 [INF] Executed action WalletApp.Controllers.DefaultUserTransactionsController.GetDefaultUserTransactions (WalletApp.Api) in 7.0359ms
2023-12-16 12:54:49.055 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.DefaultUserTransactionsController.GetDefaultUserTransactions (WalletApp.Api)'
2023-12-16 12:54:49.055 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/defaultUserTransactions - - - 200 - application/json;+charset=utf-8 14.7845ms
2023-12-16 12:55:20.518 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/category/userCategories - -
2023-12-16 12:55:20.524 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:55:20.526 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/category/userCategories - - - 204 - - 7.3890ms
2023-12-16 12:55:20.527 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/category/userCategories - -
2023-12-16 12:55:20.533 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:55:20.535 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CategoryController.GetUserCategories (WalletApp.Api)'
2023-12-16 12:55:20.537 +01:00 [INF] Route matched with {action = "GetUserCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Category.GetUserCategories.GetUserCategoriesResponseDto]]]] GetUserCategories(System.Threading.CancellationToken) on controller WalletApp.Controllers.CategoryController (WalletApp.Api).
2023-12-16 12:55:20.561 +01:00 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CratedBy], [c].[CreatedTime], [c].[DeletedBy], [c].[DeletedTime], [c].[GroupId], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[Name], [c].[UserIdentityId]
FROM [Categories] AS [c]
WHERE [c].[UserIdentityId] = @__id_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2023-12-16 12:55:20.565 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Category.GetUserCategories.GetUserCategoriesResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:55:20.567 +01:00 [INF] Executed action WalletApp.Controllers.CategoryController.GetUserCategories (WalletApp.Api) in 28.2462ms
2023-12-16 12:55:20.569 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CategoryController.GetUserCategories (WalletApp.Api)'
2023-12-16 12:55:20.570 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/category/userCategories - - - 200 - application/json;+charset=utf-8 42.9845ms
2023-12-16 12:56:19.798 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-16 12:56:19.802 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 12:56:19.806 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:56:19.812 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:56:19.816 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 17.4673ms
2023-12-16 12:56:19.819 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 15.8858ms
2023-12-16 12:56:19.806 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 12:56:19.812 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-16 12:56:19.820 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-16 12:56:19.823 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-16 12:56:19.829 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:56:19.829 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:56:19.830 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:56:19.831 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:56:19.835 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-16 12:56:19.835 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-16 12:56:19.833 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 27.0503ms
2023-12-16 12:56:19.834 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 22.4700ms
2023-12-16 12:56:19.835 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 12:56:19.840 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 12:56:19.842 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:56:19.843 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:56:19.846 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-16 12:56:19.847 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:56:19.850 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 12:56:19.849 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 12:56:19.856 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-16 12:56:19.854 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-16 12:56:19.858 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:56:19.865 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 12:56:19.868 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 17.8861ms
2023-12-16 12:56:19.871 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-16 12:56:19.872 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 52.4152ms
2023-12-16 12:56:19.875 +01:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 12:56:19.876 +01:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-16 12:56:19.876 +01:00 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-16 12:56:19.881 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:56:19.882 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:56:19.885 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 25.0881ms
2023-12-16 12:56:19.887 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-16 12:56:19.889 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-16 12:56:19.892 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:56:19.893 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 58.0364ms
2023-12-16 12:56:19.895 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-16 12:56:19.898 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:56:19.899 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-16 12:56:19.903 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 36.8851ms
2023-12-16 12:56:19.904 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:56:19.905 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-16 12:56:19.908 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 73.4467ms
2023-12-16 12:56:19.909 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-16 12:56:19.911 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:56:19.913 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 59.9387ms
2023-12-16 12:56:19.914 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-16 12:56:19.915 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 93.0924ms
2023-12-16 12:56:19.938 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 12:56:19.939 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:56:19.939 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 12:56:19.939 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 1.9595ms
2023-12-16 12:56:19.940 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:56:19.941 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 12:56:19.941 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 2.4967ms
2023-12-16 12:56:19.942 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:56:19.943 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-16 12:56:19.944 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 12:56:19.944 +01:00 [INF] CORS policy execution successful.
2023-12-16 12:56:19.945 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:56:19.946 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 12:56:19.948 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-16 12:56:19.950 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 12:56:19.954 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-16 12:56:19.954 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:56:19.956 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-16 12:56:19.957 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 10.0445ms
2023-12-16 12:56:19.958 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 7.1751ms
2023-12-16 12:56:19.959 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-16 12:56:19.960 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-16 12:56:19.961 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 20.0230ms
2023-12-16 12:56:19.961 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 18.6620ms

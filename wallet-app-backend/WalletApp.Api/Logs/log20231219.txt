2023-12-19 13:28:35.162 +01:00 [INF] User profile is available. Using 'C:\Users\maste\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-19 13:28:35.286 +01:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2023-12-19 13:28:35.287 +01:00 [INF] Quartz Scheduler created
2023-12-19 13:28:35.288 +01:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2023-12-19 13:28:35.289 +01:00 [INF] RAMJobStore initialized.
2023-12-19 13:28:35.290 +01:00 [INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2023-12-19 13:28:35.291 +01:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2023-12-19 13:28:35.292 +01:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2023-12-19 13:28:35.301 +01:00 [INF] Adding 1 jobs, 1 triggers.
2023-12-19 13:28:35.304 +01:00 [INF] Adding job: DEFAULT.NBP
2023-12-19 13:28:35.347 +01:00 [INF] Now listening on: http://localhost:5238
2023-12-19 13:28:35.349 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-19 13:28:35.350 +01:00 [INF] Hosting environment: Development
2023-12-19 13:28:35.350 +01:00 [INF] Content root path: C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Api
2023-12-19 13:28:35.352 +01:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2023-12-19 13:28:35.485 +01:00 [INF] Start processing HTTP request GET http://api.nbp.pl/api/exchangerates/tables/c
2023-12-19 13:28:35.488 +01:00 [INF] Sending HTTP request GET http://api.nbp.pl/api/exchangerates/tables/c
2023-12-19 13:28:35.614 +01:00 [INF] Received HTTP response headers after 122.0382ms - 200
2023-12-19 13:28:35.618 +01:00 [INF] End processing HTTP request after 139.0029ms - 200
2023-12-19 13:28:36.877 +01:00 [INF] Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 13:28:36.970 +01:00 [ERR] Job DEFAULT.NBP threw an unhandled Exception: 
System.NullReferenceException: Object reference not set to an instance of an object.
   at WalletApp.Application.Common.Currency.UpdateCurrency.UpdateCurrencyCommandHandler.Handle(UpdateCurrencyCommand request, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Common\Currency\UpdateCurrency\UpdateCurrencyCommandHandler.cs:line 27
   at WalletApp.Application.Behaviours.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Behaviours\ValidationBehaviour.cs:line 22
   at WalletApp.Infractructure.Quartz.CallToNbpApiJob.Execute(IJobExecutionContext context) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Infrastructure\Quartz\CallToNbpApiJob.cs:line 20
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
2023-12-19 13:28:36.981 +01:00 [ERR] Job DEFAULT.NBP threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> System.NullReferenceException: Object reference not set to an instance of an object.
   at WalletApp.Application.Common.Currency.UpdateCurrency.UpdateCurrencyCommandHandler.Handle(UpdateCurrencyCommand request, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Common\Currency\UpdateCurrency\UpdateCurrencyCommandHandler.cs:line 27
   at WalletApp.Application.Behaviours.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Behaviours\ValidationBehaviour.cs:line 22
   at WalletApp.Infractructure.Quartz.CallToNbpApiJob.Execute(IJobExecutionContext context) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Infrastructure\Quartz\CallToNbpApiJob.cs:line 20
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
   --- End of inner exception stack trace --- [See nested exception: System.NullReferenceException: Object reference not set to an instance of an object.
   at WalletApp.Application.Common.Currency.UpdateCurrency.UpdateCurrencyCommandHandler.Handle(UpdateCurrencyCommand request, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Common\Currency\UpdateCurrency\UpdateCurrencyCommandHandler.cs:line 27
   at WalletApp.Application.Behaviours.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Behaviours\ValidationBehaviour.cs:line 22
   at WalletApp.Infractructure.Quartz.CallToNbpApiJob.Execute(IJobExecutionContext context) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Infrastructure\Quartz\CallToNbpApiJob.cs:line 20
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)]
2023-12-19 13:29:05.291 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/token/RfF7LDJSG0hd2hmGtMpk1aWPqV5XnuiEHBtFdjq0jUdiv8RWs5AjUBjG+pVshyzJKvLLJr69BzzW1nB6s0xpQg== - -
2023-12-19 13:29:05.326 +01:00 [WRN] Failed to determine the https port for redirect.
2023-12-19 13:29:05.329 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:29:05.336 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/token/RfF7LDJSG0hd2hmGtMpk1aWPqV5XnuiEHBtFdjq0jUdiv8RWs5AjUBjG+pVshyzJKvLLJr69BzzW1nB6s0xpQg== - - - 204 - - 46.2112ms
2023-12-19 13:29:05.338 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/RfF7LDJSG0hd2hmGtMpk1aWPqV5XnuiEHBtFdjq0jUdiv8RWs5AjUBjG+pVshyzJKvLLJr69BzzW1nB6s0xpQg== - -
2023-12-19 13:29:05.343 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:29:05.454 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '18.12.2023 09:48:05', Current time: '19.12.2023 12:29:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 13:29:05.460 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '18.12.2023 09:48:05', Current time: '19.12.2023 12:29:05'.
2023-12-19 13:29:05.464 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 13:29:05.481 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 13:29:05.608 +01:00 [INF] Executed DbCommand (13ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 13:29:05.619 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 13:29:05.641 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 153.0724ms
2023-12-19 13:29:05.644 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 13:29:05.651 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/RfF7LDJSG0hd2hmGtMpk1aWPqV5XnuiEHBtFdjq0jUdiv8RWs5AjUBjG+pVshyzJKvLLJr69BzzW1nB6s0xpQg== - - - 404 - application/json;+charset=utf-8 313.7301ms
2023-12-19 13:29:55.174 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/authenticate - -
2023-12-19 13:29:55.179 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:29:55.181 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/authenticate - - - 204 - - 7.7929ms
2023-12-19 13:29:55.183 +01:00 [INF] Request starting HTTP/1.1 POST http://localhost:5238/api/account/authenticate application/json 47
2023-12-19 13:29:55.185 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:29:55.187 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.Authentication (WalletApp.Api)'
2023-12-19 13:29:55.192 +01:00 [INF] Route matched with {action = "Authentication", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Account.Authenticate.AuthenticateResponseDto]]] Authentication(WalletApp.Application.Account.Authenticate.AuthenticateDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-19 13:29:55.267 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-12-19 13:29:55.450 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__user_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE [a].[UserId] = @__user_Id_0
2023-12-19 13:29:55.473 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-12-19 13:29:55.485 +01:00 [INF] AuthenticationScheme: Identity.Application signed in.
2023-12-19 13:29:55.492 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-12-19 13:29:55.498 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-12-19 13:29:55.522 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__ipAddress_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0 AND [t].[IpAddress] = @__ipAddress_1
2023-12-19 13:29:55.552 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-12-19 13:29:55.651 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[@p15='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p16='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Int32), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTimeOffset), @p7='?' (Size = 256), @p8='?' (Size = 256), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (DbType = Boolean), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 256), @p19='?' (DbType = Guid), @p17='?' (Size = 4000), @p18='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [IconType] = @p4, [LockoutEnabled] = @p5, [LockoutEnd] = @p6, [NormalizedEmail] = @p7, [NormalizedUserName] = @p8, [PasswordHash] = @p9, [PhoneNumber] = @p10, [PhoneNumberConfirmed] = @p11, [SecurityStamp] = @p12, [TwoFactorEnabled] = @p13, [UserName] = @p14
OUTPUT 1
WHERE [Id] = @p15 AND [ConcurrencyStamp] = @p16;
UPDATE [Tokens] SET [RefreshToken] = @p17, [RefreshTokenExpiryTime] = @p18
OUTPUT 1
WHERE [Id] = @p19;
2023-12-19 13:29:55.675 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Account.Authenticate.AuthenticateResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 13:29:55.679 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.Authentication (WalletApp.Api) in 485.0515ms
2023-12-19 13:29:55.680 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.Authentication (WalletApp.Api)'
2023-12-19 13:29:55.682 +01:00 [INF] Request finished HTTP/1.1 POST http://localhost:5238/api/account/authenticate application/json 47 - 200 - application/json;+charset=utf-8 499.1088ms
2023-12-19 13:29:55.715 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-19 13:29:55.716 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 13:29:55.716 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:29:55.716 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 13:29:55.717 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:29:55.717 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-19 13:29:55.718 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 2.2967ms
2023-12-19 13:29:55.719 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 3.5602ms
2023-12-19 13:29:55.720 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:29:55.719 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-19 13:29:55.720 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:29:55.721 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 13:29:55.722 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 5.1579ms
2023-12-19 13:29:55.723 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:29:55.724 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 7.1962ms
2023-12-19 13:29:55.724 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 13:29:55.724 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:29:55.725 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 13:29:55.726 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:29:55.727 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:29:55.749 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 13:29:55.749 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 13:29:55.749 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 13:29:55.749 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 13:29:55.752 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-19 13:29:55.753 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-19 13:29:55.754 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 13:29:55.757 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 13:29:55.758 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 13:29:55.763 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 13:29:55.774 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 20.2852ms
2023-12-19 13:29:55.775 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 13:29:55.777 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 52.9702ms
2023-12-19 13:29:55.783 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 13:29:55.788 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 13:29:55.788 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 13:29:55.789 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:29:55.790 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:29:55.791 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 3.1977ms
2023-12-19 13:29:55.792 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 3.8068ms
2023-12-19 13:29:55.792 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 13:29:55.793 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 13:29:55.794 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:29:55.796 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:29:55.798 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 13:29:55.798 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 13:29:55.802 +01:00 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-19 13:29:55.802 +01:00 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-19 13:29:55.803 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 13:29:55.803 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 13:29:55.838 +01:00 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 13:29:55.839 +01:00 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-19 13:29:55.859 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 13:29:55.874 +01:00 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 13:29:55.878 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 13:29:55.880 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 125.7944ms
2023-12-19 13:29:55.882 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 13:29:55.883 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 72.4744ms
2023-12-19 13:29:55.883 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 164.6343ms
2023-12-19 13:29:55.884 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 13:29:55.887 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 93.0906ms
2023-12-19 13:29:55.895 +01:00 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 13:29:55.899 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 13:29:55.903 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 94.3702ms
2023-12-19 13:29:55.905 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 13:29:55.906 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 113.9846ms
2023-12-19 13:29:55.931 +01:00 [INF] Executed DbCommand (17ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 13:29:55.932 +01:00 [INF] Executed DbCommand (16ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-19 13:29:55.937 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 13:29:55.937 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 13:29:55.942 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 13:29:55.946 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 13:29:55.948 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 13:29:55.952 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 193.1364ms
2023-12-19 13:29:55.954 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 13:29:55.955 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 230.2230ms
2023-12-19 13:29:55.956 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 200.0219ms
2023-12-19 13:29:55.957 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 13:29:55.958 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 237.5872ms
2023-12-19 13:29:59.324 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser - -
2023-12-19 13:29:59.325 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:29:59.326 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser - - - 204 - - 1.9583ms
2023-12-19 13:29:59.328 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/notesUser - -
2023-12-19 13:29:59.329 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:29:59.330 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api)'
2023-12-19 13:29:59.334 +01:00 [INF] Route matched with {action = "GetAllUserNotes", controller = "NotesUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IReadOnlyCollection`1[WalletApp.Application.Common.Note.GetUserNotes.GetUserNotesResponseDto]]]] GetAllUserNotes(System.Threading.CancellationToken) on controller WalletApp.Controllers.NotesUserController (WalletApp.Api).
2023-12-19 13:29:59.361 +01:00 [INF] Executed DbCommand (14ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[BackgroundColor], [n].[CratedBy], [n].[CreatedTime], [n].[DeletedBy], [n].[DeletedTime], [n].[GroupId], [n].[IsDeleted], [n].[IsDone], [n].[ModifiedBy], [n].[ModifiedTime], [n].[Text], [n].[TextColor], [n].[Title], [n].[UserIdentityId]
FROM [Notes] AS [n]
WHERE [n].[UserIdentityId] = @__userId_0 AND [n].[IsDone] = CAST(0 AS bit)
2023-12-19 13:29:59.388 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IReadOnlyCollection`1[[WalletApp.Application.Common.Note.GetUserNotes.GetUserNotesResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 13:29:59.392 +01:00 [INF] Executed action WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api) in 55.6746ms
2023-12-19 13:29:59.394 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api)'
2023-12-19 13:29:59.395 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/notesUser - - - 200 - application/json;+charset=utf-8 67.2354ms
2023-12-19 13:30:00.774 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser/bee63547-f31d-4ac6-c841-08dbfd7d5172 - -
2023-12-19 13:30:00.775 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:30:00.776 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser/bee63547-f31d-4ac6-c841-08dbfd7d5172 - - - 204 - - 1.5988ms
2023-12-19 13:30:00.779 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/notesUser/bee63547-f31d-4ac6-c841-08dbfd7d5172 - -
2023-12-19 13:30:00.780 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:30:00.781 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.NotesUserController.GetUserNoteDetails (WalletApp.Api)'
2023-12-19 13:30:00.784 +01:00 [INF] Route matched with {action = "GetUserNoteDetails", controller = "NotesUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Note.GetUserNoteDetails.GetUserNoteDetailsResponseDto]]] GetUserNoteDetails(System.Guid, System.Threading.CancellationToken) on controller WalletApp.Controllers.NotesUserController (WalletApp.Api).
2023-12-19 13:30:00.795 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__noteId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[BackgroundColor], [n].[CratedBy], [n].[CreatedTime], [n].[DeletedBy], [n].[DeletedTime], [n].[GroupId], [n].[IsDeleted], [n].[IsDone], [n].[ModifiedBy], [n].[ModifiedTime], [n].[Text], [n].[TextColor], [n].[Title], [n].[UserIdentityId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__noteId_0
2023-12-19 13:30:00.797 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Note.GetUserNoteDetails.GetUserNoteDetailsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 13:30:00.800 +01:00 [INF] Executed action WalletApp.Controllers.NotesUserController.GetUserNoteDetails (WalletApp.Api) in 13.2746ms
2023-12-19 13:30:00.801 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.NotesUserController.GetUserNoteDetails (WalletApp.Api)'
2023-12-19 13:30:00.802 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/notesUser/bee63547-f31d-4ac6-c841-08dbfd7d5172 - - - 200 - application/json;+charset=utf-8 23.0161ms
2023-12-19 13:30:32.786 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser/bee63547-f31d-4ac6-c841-08dbfd7d5172 - -
2023-12-19 13:30:32.787 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:30:32.788 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser/bee63547-f31d-4ac6-c841-08dbfd7d5172 - - - 204 - - 1.8914ms
2023-12-19 13:30:32.789 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/notesUser/bee63547-f31d-4ac6-c841-08dbfd7d5172 - -
2023-12-19 13:30:32.790 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:30:32.791 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.NotesUserController.GetUserNoteDetails (WalletApp.Api)'
2023-12-19 13:30:32.793 +01:00 [INF] Route matched with {action = "GetUserNoteDetails", controller = "NotesUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Note.GetUserNoteDetails.GetUserNoteDetailsResponseDto]]] GetUserNoteDetails(System.Guid, System.Threading.CancellationToken) on controller WalletApp.Controllers.NotesUserController (WalletApp.Api).
2023-12-19 13:30:32.798 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__noteId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[BackgroundColor], [n].[CratedBy], [n].[CreatedTime], [n].[DeletedBy], [n].[DeletedTime], [n].[GroupId], [n].[IsDeleted], [n].[IsDone], [n].[ModifiedBy], [n].[ModifiedTime], [n].[Text], [n].[TextColor], [n].[Title], [n].[UserIdentityId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__noteId_0
2023-12-19 13:30:32.799 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Note.GetUserNoteDetails.GetUserNoteDetailsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 13:30:32.800 +01:00 [INF] Executed action WalletApp.Controllers.NotesUserController.GetUserNoteDetails (WalletApp.Api) in 6.1494ms
2023-12-19 13:30:32.801 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.NotesUserController.GetUserNoteDetails (WalletApp.Api)'
2023-12-19 13:30:32.802 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/notesUser/bee63547-f31d-4ac6-c841-08dbfd7d5172 - - - 200 - application/json;+charset=utf-8 12.7607ms
2023-12-19 13:31:02.261 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser/bee63547-f31d-4ac6-c841-08dbfd7d5172 - -
2023-12-19 13:31:02.262 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:31:02.263 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser/bee63547-f31d-4ac6-c841-08dbfd7d5172 - - - 204 - - 2.0379ms
2023-12-19 13:31:02.265 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/notesUser/bee63547-f31d-4ac6-c841-08dbfd7d5172 - -
2023-12-19 13:31:02.266 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:31:02.267 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.NotesUserController.GetUserNoteDetails (WalletApp.Api)'
2023-12-19 13:31:02.268 +01:00 [INF] Route matched with {action = "GetUserNoteDetails", controller = "NotesUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Note.GetUserNoteDetails.GetUserNoteDetailsResponseDto]]] GetUserNoteDetails(System.Guid, System.Threading.CancellationToken) on controller WalletApp.Controllers.NotesUserController (WalletApp.Api).
2023-12-19 13:31:02.274 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__noteId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[BackgroundColor], [n].[CratedBy], [n].[CreatedTime], [n].[DeletedBy], [n].[DeletedTime], [n].[GroupId], [n].[IsDeleted], [n].[IsDone], [n].[ModifiedBy], [n].[ModifiedTime], [n].[Text], [n].[TextColor], [n].[Title], [n].[UserIdentityId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__noteId_0
2023-12-19 13:31:02.277 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Note.GetUserNoteDetails.GetUserNoteDetailsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 13:31:02.279 +01:00 [INF] Executed action WalletApp.Controllers.NotesUserController.GetUserNoteDetails (WalletApp.Api) in 8.7375ms
2023-12-19 13:31:02.280 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.NotesUserController.GetUserNoteDetails (WalletApp.Api)'
2023-12-19 13:31:02.281 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/notesUser/bee63547-f31d-4ac6-c841-08dbfd7d5172 - - - 200 - application/json;+charset=utf-8 16.8220ms
2023-12-19 13:31:04.309 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser/markAsNote - -
2023-12-19 13:31:04.310 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:31:04.311 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser/markAsNote - - - 204 - - 1.3519ms
2023-12-19 13:31:04.311 +01:00 [INF] Request starting HTTP/1.1 PATCH http://localhost:5238/api/notesUser/markAsNote application/json 49
2023-12-19 13:31:04.312 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:31:04.313 +01:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2023-12-19 13:31:04.313 +01:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2023-12-19 13:31:04.314 +01:00 [INF] Request finished HTTP/1.1 PATCH http://localhost:5238/api/notesUser/markAsNote application/json 49 - 405 0 - 2.9609ms
2023-12-19 13:32:14.661 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser/markAsNote - -
2023-12-19 13:32:14.662 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:32:14.662 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser/markAsNote - - - 204 - - 1.4292ms
2023-12-19 13:32:14.663 +01:00 [INF] Request starting HTTP/1.1 PATCH http://localhost:5238/api/notesUser/markAsNote application/json 49
2023-12-19 13:32:14.664 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:32:14.665 +01:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2023-12-19 13:32:14.665 +01:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2023-12-19 13:32:14.666 +01:00 [INF] Request finished HTTP/1.1 PATCH http://localhost:5238/api/notesUser/markAsNote application/json 49 - 405 0 - 2.9739ms
2023-12-19 13:34:55.204 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/token/c+vrYIAF1TMEIKx+bjGCKBzvb5oU+APYIicp0gKHGAVZFG0mArD9dsztGSab+WQkuEGszPaYk89w+AGgIXyw== - -
2023-12-19 13:34:55.205 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:34:55.206 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/token/c+vrYIAF1TMEIKx+bjGCKBzvb5oU+APYIicp0gKHGAVZFG0mArD9dsztGSab+WQkuEGszPaYk89w+AGgIXyw== - - - 204 - - 1.9424ms
2023-12-19 13:34:55.207 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/c+vrYIAF1TMEIKx+bjGCKBzvb5oU+APYIicp0gKHGAVZFG0mArD9dsztGSab+WQkuEGszPaYk89w+AGgIXyw== - -
2023-12-19 13:34:55.208 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:34:55.209 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 13:34:55.210 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 13:34:55.215 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 13:34:55.230 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__get_Item_0
2023-12-19 13:34:55.243 +01:00 [INF] Executed DbCommand (9ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Tokens] SET [RefreshToken] = @p0, [RefreshTokenExpiryTime] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2023-12-19 13:34:55.249 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-12-19 13:34:55.251 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 13:34:55.253 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 41.497ms
2023-12-19 13:34:55.254 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 13:34:55.255 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/c+vrYIAF1TMEIKx+bjGCKBzvb5oU+APYIicp0gKHGAVZFG0mArD9dsztGSab+WQkuEGszPaYk89w+AGgIXyw== - - - 200 - application/json;+charset=utf-8 47.5124ms
2023-12-19 13:34:55.293 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser/bee63547-f31d-4ac6-c841-08dbfd7d5172 - -
2023-12-19 13:34:55.293 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:34:55.294 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser/bee63547-f31d-4ac6-c841-08dbfd7d5172 - - - 204 - - 1.2953ms
2023-12-19 13:34:55.295 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/notesUser/bee63547-f31d-4ac6-c841-08dbfd7d5172 - -
2023-12-19 13:34:55.295 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:34:55.296 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.NotesUserController.GetUserNoteDetails (WalletApp.Api)'
2023-12-19 13:34:55.297 +01:00 [INF] Route matched with {action = "GetUserNoteDetails", controller = "NotesUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Note.GetUserNoteDetails.GetUserNoteDetailsResponseDto]]] GetUserNoteDetails(System.Guid, System.Threading.CancellationToken) on controller WalletApp.Controllers.NotesUserController (WalletApp.Api).
2023-12-19 13:34:55.302 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__noteId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[BackgroundColor], [n].[CratedBy], [n].[CreatedTime], [n].[DeletedBy], [n].[DeletedTime], [n].[GroupId], [n].[IsDeleted], [n].[IsDone], [n].[ModifiedBy], [n].[ModifiedTime], [n].[Text], [n].[TextColor], [n].[Title], [n].[UserIdentityId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__noteId_0
2023-12-19 13:34:55.303 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Note.GetUserNoteDetails.GetUserNoteDetailsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 13:34:55.304 +01:00 [INF] Executed action WalletApp.Controllers.NotesUserController.GetUserNoteDetails (WalletApp.Api) in 4.9181ms
2023-12-19 13:34:55.305 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.NotesUserController.GetUserNoteDetails (WalletApp.Api)'
2023-12-19 13:34:55.306 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/notesUser/bee63547-f31d-4ac6-c841-08dbfd7d5172 - - - 200 - application/json;+charset=utf-8 11.1535ms
2023-12-19 13:34:56.367 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser/markAsDone - -
2023-12-19 13:34:56.368 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:34:56.369 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser/markAsDone - - - 204 - - 2.0563ms
2023-12-19 13:34:56.370 +01:00 [INF] Request starting HTTP/1.1 PATCH http://localhost:5238/api/notesUser/markAsDone application/json 49
2023-12-19 13:34:56.370 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:34:56.371 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.NotesUserController.MarkAsDone (WalletApp.Api)'
2023-12-19 13:34:56.375 +01:00 [INF] Route matched with {action = "MarkAsDone", controller = "NotesUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult]] MarkAsDone(WalletApp.Application.Common.Note.MarkNoteAsDone.MarkNoteAsDoneDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.NotesUserController (WalletApp.Api).
2023-12-19 13:34:56.385 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__noteId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[BackgroundColor], [n].[CratedBy], [n].[CreatedTime], [n].[DeletedBy], [n].[DeletedTime], [n].[GroupId], [n].[IsDeleted], [n].[IsDone], [n].[ModifiedBy], [n].[ModifiedTime], [n].[Text], [n].[TextColor], [n].[Title], [n].[UserIdentityId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__noteId_0
2023-12-19 13:34:56.411 +01:00 [INF] Executed DbCommand (17ms) [Parameters=[@p3='?' (DbType = Guid), @p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsDone] = @p0, [ModifiedBy] = @p1, [ModifiedTime] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2023-12-19 13:34:56.417 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult'.
2023-12-19 13:34:56.420 +01:00 [INF] Executed action WalletApp.Controllers.NotesUserController.MarkAsDone (WalletApp.Api) in 42.6664ms
2023-12-19 13:34:56.421 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.NotesUserController.MarkAsDone (WalletApp.Api)'
2023-12-19 13:34:56.422 +01:00 [INF] Request finished HTTP/1.1 PATCH http://localhost:5238/api/notesUser/markAsDone application/json 49 - 200 - application/json;+charset=utf-8 52.2523ms
2023-12-19 13:34:56.440 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser - -
2023-12-19 13:34:56.441 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:34:56.442 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser - - - 204 - - 2.0457ms
2023-12-19 13:34:56.443 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/notesUser - -
2023-12-19 13:34:56.444 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:34:56.445 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api)'
2023-12-19 13:34:56.445 +01:00 [INF] Route matched with {action = "GetAllUserNotes", controller = "NotesUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IReadOnlyCollection`1[WalletApp.Application.Common.Note.GetUserNotes.GetUserNotesResponseDto]]]] GetAllUserNotes(System.Threading.CancellationToken) on controller WalletApp.Controllers.NotesUserController (WalletApp.Api).
2023-12-19 13:34:56.450 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[BackgroundColor], [n].[CratedBy], [n].[CreatedTime], [n].[DeletedBy], [n].[DeletedTime], [n].[GroupId], [n].[IsDeleted], [n].[IsDone], [n].[ModifiedBy], [n].[ModifiedTime], [n].[Text], [n].[TextColor], [n].[Title], [n].[UserIdentityId]
FROM [Notes] AS [n]
WHERE [n].[UserIdentityId] = @__userId_0 AND [n].[IsDone] = CAST(0 AS bit)
2023-12-19 13:34:56.454 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IReadOnlyCollection`1[[WalletApp.Application.Common.Note.GetUserNotes.GetUserNotesResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 13:34:56.455 +01:00 [INF] Executed action WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api) in 7.7808ms
2023-12-19 13:34:56.456 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api)'
2023-12-19 13:34:56.457 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/notesUser - - - 200 - application/json;+charset=utf-8 14.4049ms
2023-12-19 13:38:33.067 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser/a4cf13fa-fef4-48fb-fdc7-08dbfd66d9f9 - -
2023-12-19 13:38:33.068 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:38:33.069 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser/a4cf13fa-fef4-48fb-fdc7-08dbfd66d9f9 - - - 204 - - 1.6282ms
2023-12-19 13:38:33.073 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/notesUser/a4cf13fa-fef4-48fb-fdc7-08dbfd66d9f9 - -
2023-12-19 13:38:33.074 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:38:33.076 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.NotesUserController.GetUserNoteDetails (WalletApp.Api)'
2023-12-19 13:38:33.076 +01:00 [INF] Route matched with {action = "GetUserNoteDetails", controller = "NotesUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Note.GetUserNoteDetails.GetUserNoteDetailsResponseDto]]] GetUserNoteDetails(System.Guid, System.Threading.CancellationToken) on controller WalletApp.Controllers.NotesUserController (WalletApp.Api).
2023-12-19 13:38:33.096 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__noteId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[BackgroundColor], [n].[CratedBy], [n].[CreatedTime], [n].[DeletedBy], [n].[DeletedTime], [n].[GroupId], [n].[IsDeleted], [n].[IsDone], [n].[ModifiedBy], [n].[ModifiedTime], [n].[Text], [n].[TextColor], [n].[Title], [n].[UserIdentityId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__noteId_0
2023-12-19 13:38:33.097 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Note.GetUserNoteDetails.GetUserNoteDetailsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 13:38:33.099 +01:00 [INF] Executed action WalletApp.Controllers.NotesUserController.GetUserNoteDetails (WalletApp.Api) in 21.1975ms
2023-12-19 13:38:33.100 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.NotesUserController.GetUserNoteDetails (WalletApp.Api)'
2023-12-19 13:38:33.101 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/notesUser/a4cf13fa-fef4-48fb-fdc7-08dbfd66d9f9 - - - 200 - application/json;+charset=utf-8 27.8759ms
2023-12-19 13:38:33.899 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser/markAsDone - -
2023-12-19 13:38:33.900 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:38:33.900 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser/markAsDone - - - 204 - - 1.2732ms
2023-12-19 13:38:33.901 +01:00 [INF] Request starting HTTP/1.1 PATCH http://localhost:5238/api/notesUser/markAsDone application/json 49
2023-12-19 13:38:33.902 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:38:33.903 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.NotesUserController.MarkAsDone (WalletApp.Api)'
2023-12-19 13:38:33.903 +01:00 [INF] Route matched with {action = "MarkAsDone", controller = "NotesUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult]] MarkAsDone(WalletApp.Application.Common.Note.MarkNoteAsDone.MarkNoteAsDoneDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.NotesUserController (WalletApp.Api).
2023-12-19 13:38:33.908 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__noteId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [n].[Id], [n].[BackgroundColor], [n].[CratedBy], [n].[CreatedTime], [n].[DeletedBy], [n].[DeletedTime], [n].[GroupId], [n].[IsDeleted], [n].[IsDone], [n].[ModifiedBy], [n].[ModifiedTime], [n].[Text], [n].[TextColor], [n].[Title], [n].[UserIdentityId]
FROM [Notes] AS [n]
WHERE [n].[Id] = @__noteId_0
2023-12-19 13:38:33.915 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p3='?' (DbType = Guid), @p0='?' (DbType = Boolean), @p1='?' (DbType = Guid), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Notes] SET [IsDone] = @p0, [ModifiedBy] = @p1, [ModifiedTime] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2023-12-19 13:38:33.916 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult'.
2023-12-19 13:38:33.917 +01:00 [INF] Executed action WalletApp.Controllers.NotesUserController.MarkAsDone (WalletApp.Api) in 12.5523ms
2023-12-19 13:38:33.919 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.NotesUserController.MarkAsDone (WalletApp.Api)'
2023-12-19 13:38:33.919 +01:00 [INF] Request finished HTTP/1.1 PATCH http://localhost:5238/api/notesUser/markAsDone application/json 49 - 200 - application/json;+charset=utf-8 18.3559ms
2023-12-19 13:38:33.929 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser - -
2023-12-19 13:38:33.930 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:38:33.930 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser - - - 204 - - 1.5283ms
2023-12-19 13:38:33.931 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/notesUser - -
2023-12-19 13:38:33.932 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:38:33.933 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api)'
2023-12-19 13:38:33.933 +01:00 [INF] Route matched with {action = "GetAllUserNotes", controller = "NotesUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IReadOnlyCollection`1[WalletApp.Application.Common.Note.GetUserNotes.GetUserNotesResponseDto]]]] GetAllUserNotes(System.Threading.CancellationToken) on controller WalletApp.Controllers.NotesUserController (WalletApp.Api).
2023-12-19 13:38:33.938 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[BackgroundColor], [n].[CratedBy], [n].[CreatedTime], [n].[DeletedBy], [n].[DeletedTime], [n].[GroupId], [n].[IsDeleted], [n].[IsDone], [n].[ModifiedBy], [n].[ModifiedTime], [n].[Text], [n].[TextColor], [n].[Title], [n].[UserIdentityId]
FROM [Notes] AS [n]
WHERE [n].[UserIdentityId] = @__userId_0 AND [n].[IsDone] = CAST(0 AS bit)
2023-12-19 13:38:33.940 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IReadOnlyCollection`1[[WalletApp.Application.Common.Note.GetUserNotes.GetUserNotesResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 13:38:33.941 +01:00 [INF] Executed action WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api) in 6.5793ms
2023-12-19 13:38:33.942 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api)'
2023-12-19 13:38:33.943 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/notesUser - - - 200 - application/json;+charset=utf-8 12.1388ms
2023-12-19 13:41:04.937 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser - -
2023-12-19 13:41:04.938 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:41:04.939 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/notesUser - - - 204 - - 2.4585ms
2023-12-19 13:41:04.941 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/notesUser - -
2023-12-19 13:41:04.942 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:41:04.943 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 12:35:55', Current time: '19.12.2023 12:41:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 13:41:04.944 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 12:35:55', Current time: '19.12.2023 12:41:04'.
2023-12-19 13:41:04.946 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-19 13:41:04.993 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/notesUser - - - 401 - application/json 52.8487ms
2023-12-19 13:41:04.997 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/token/uw4JpfNxbGKpXw4yj5wZ8ExXe2RMT73rAHuDE2Kod6W3aOjs+A8fYcCY3IUns6O9sLpG4EwLYxtBMYTlv54g== - -
2023-12-19 13:41:04.998 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:41:04.998 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/token/uw4JpfNxbGKpXw4yj5wZ8ExXe2RMT73rAHuDE2Kod6W3aOjs+A8fYcCY3IUns6O9sLpG4EwLYxtBMYTlv54g== - - - 204 - - 1.4563ms
2023-12-19 13:41:04.999 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/uw4JpfNxbGKpXw4yj5wZ8ExXe2RMT73rAHuDE2Kod6W3aOjs+A8fYcCY3IUns6O9sLpG4EwLYxtBMYTlv54g== - -
2023-12-19 13:41:05.000 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:41:05.000 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 12:35:55', Current time: '19.12.2023 12:41:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 13:41:05.002 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 12:35:55', Current time: '19.12.2023 12:41:05'.
2023-12-19 13:41:05.003 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 13:41:05.004 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 13:41:05.010 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 13:41:05.015 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__get_Item_0
2023-12-19 13:41:05.022 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Tokens] SET [RefreshToken] = @p0, [RefreshTokenExpiryTime] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2023-12-19 13:41:05.025 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-12-19 13:41:05.027 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 13:41:05.028 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 22.8902ms
2023-12-19 13:41:05.029 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 13:41:05.029 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/uw4JpfNxbGKpXw4yj5wZ8ExXe2RMT73rAHuDE2Kod6W3aOjs+A8fYcCY3IUns6O9sLpG4EwLYxtBMYTlv54g== - - - 200 - application/json;+charset=utf-8 30.2114ms
2023-12-19 13:41:05.031 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/notesUser - -
2023-12-19 13:41:05.032 +01:00 [INF] CORS policy execution successful.
2023-12-19 13:41:05.033 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api)'
2023-12-19 13:41:05.034 +01:00 [INF] Route matched with {action = "GetAllUserNotes", controller = "NotesUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IReadOnlyCollection`1[WalletApp.Application.Common.Note.GetUserNotes.GetUserNotesResponseDto]]]] GetAllUserNotes(System.Threading.CancellationToken) on controller WalletApp.Controllers.NotesUserController (WalletApp.Api).
2023-12-19 13:41:05.037 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [n].[Id], [n].[BackgroundColor], [n].[CratedBy], [n].[CreatedTime], [n].[DeletedBy], [n].[DeletedTime], [n].[GroupId], [n].[IsDeleted], [n].[IsDone], [n].[ModifiedBy], [n].[ModifiedTime], [n].[Text], [n].[TextColor], [n].[Title], [n].[UserIdentityId]
FROM [Notes] AS [n]
WHERE [n].[UserIdentityId] = @__userId_0 AND [n].[IsDone] = CAST(0 AS bit)
2023-12-19 13:41:05.039 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IReadOnlyCollection`1[[WalletApp.Application.Common.Note.GetUserNotes.GetUserNotesResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 13:41:05.040 +01:00 [INF] Executed action WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api) in 5.0892ms
2023-12-19 13:41:05.041 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.NotesUserController.GetAllUserNotes (WalletApp.Api)'
2023-12-19 13:41:05.042 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/notesUser - - - 200 - application/json;+charset=utf-8 10.3863ms
2023-12-19 14:55:54.267 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-19 14:55:54.267 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 14:55:54.269 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-19 14:55:54.268 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:55:54.268 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 14:55:54.269 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:55:54.271 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 3.8726ms
2023-12-19 14:55:54.271 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:55:54.270 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:55:54.273 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-19 14:55:54.273 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 6.0987ms
2023-12-19 14:55:54.275 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 7.6096ms
2023-12-19 14:55:54.275 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 14:55:54.277 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 8.0234ms
2023-12-19 14:55:54.277 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:55:54.278 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 14:55:54.278 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 14:55:54.281 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:55:54.282 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 12:42:05', Current time: '19.12.2023 13:55:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 14:55:54.283 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:55:54.283 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:55:54.284 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 12:42:05', Current time: '19.12.2023 13:55:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 14:55:54.286 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 12:42:05', Current time: '19.12.2023 13:55:54'.
2023-12-19 14:55:54.287 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 12:42:05', Current time: '19.12.2023 13:55:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 14:55:54.287 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 12:42:05', Current time: '19.12.2023 13:55:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 14:55:54.290 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 12:42:05', Current time: '19.12.2023 13:55:54'.
2023-12-19 14:55:54.292 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-19 14:55:54.294 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 12:42:05', Current time: '19.12.2023 13:55:54'.
2023-12-19 14:55:54.297 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 12:42:05', Current time: '19.12.2023 13:55:54'.
2023-12-19 14:55:54.298 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-19 14:55:54.299 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 401 - application/json 26.0983ms
2023-12-19 14:55:54.299 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-19 14:55:54.300 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-19 14:55:54.301 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 401 - application/json 25.2302ms
2023-12-19 14:55:54.302 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/token/v7EYJvH3I46BvyIA6UGdC7FANY+9SCSyrsVvnKa87rO0vGXvcDHit4ZP+D4oVAX+RrxLL1Dd8eeKawT36QcQ== - -
2023-12-19 14:55:54.302 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 401 - application/json 24.9081ms
2023-12-19 14:55:54.303 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 401 - application/json 25.0781ms
2023-12-19 14:55:54.304 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/token/v7EYJvH3I46BvyIA6UGdC7FANY+9SCSyrsVvnKa87rO0vGXvcDHit4ZP+D4oVAX+RrxLL1Dd8eeKawT36QcQ== - -
2023-12-19 14:55:54.305 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:55:54.306 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/token/v7EYJvH3I46BvyIA6UGdC7FANY+9SCSyrsVvnKa87rO0vGXvcDHit4ZP+D4oVAX+RrxLL1Dd8eeKawT36QcQ== - -
2023-12-19 14:55:54.307 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:55:54.307 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/token/v7EYJvH3I46BvyIA6UGdC7FANY+9SCSyrsVvnKa87rO0vGXvcDHit4ZP+D4oVAX+RrxLL1Dd8eeKawT36QcQ== - -
2023-12-19 14:55:54.307 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/token/v7EYJvH3I46BvyIA6UGdC7FANY+9SCSyrsVvnKa87rO0vGXvcDHit4ZP+D4oVAX+RrxLL1Dd8eeKawT36QcQ== - - - 204 - - 5.1368ms
2023-12-19 14:55:54.308 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:55:54.308 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/v7EYJvH3I46BvyIA6UGdC7FANY+9SCSyrsVvnKa87rO0vGXvcDHit4ZP+D4oVAX+RrxLL1Dd8eeKawT36QcQ== - -
2023-12-19 14:55:54.310 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/token/v7EYJvH3I46BvyIA6UGdC7FANY+9SCSyrsVvnKa87rO0vGXvcDHit4ZP+D4oVAX+RrxLL1Dd8eeKawT36QcQ== - - - 204 - - 5.0915ms
2023-12-19 14:55:54.310 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:55:54.312 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/token/v7EYJvH3I46BvyIA6UGdC7FANY+9SCSyrsVvnKa87rO0vGXvcDHit4ZP+D4oVAX+RrxLL1Dd8eeKawT36QcQ== - - - 204 - - 5.9487ms
2023-12-19 14:55:54.313 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:55:54.314 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/token/v7EYJvH3I46BvyIA6UGdC7FANY+9SCSyrsVvnKa87rO0vGXvcDHit4ZP+D4oVAX+RrxLL1Dd8eeKawT36QcQ== - - - 204 - - 6.5746ms
2023-12-19 14:55:54.316 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 12:42:05', Current time: '19.12.2023 13:55:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 14:55:54.319 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 12:42:05', Current time: '19.12.2023 13:55:54'.
2023-12-19 14:55:54.320 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 14:55:54.321 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 14:55:54.354 +01:00 [INF] Executed DbCommand (11ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 14:55:54.358 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__get_Item_0
2023-12-19 14:55:54.366 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Tokens] SET [RefreshToken] = @p0, [RefreshTokenExpiryTime] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2023-12-19 14:55:54.369 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-12-19 14:55:54.371 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 14:55:54.372 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 49.9564ms
2023-12-19 14:55:54.373 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/v7EYJvH3I46BvyIA6UGdC7FANY+9SCSyrsVvnKa87rO0vGXvcDHit4ZP+D4oVAX+RrxLL1Dd8eeKawT36QcQ== - -
2023-12-19 14:55:54.373 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 14:55:54.374 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:55:54.375 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/v7EYJvH3I46BvyIA6UGdC7FANY+9SCSyrsVvnKa87rO0vGXvcDHit4ZP+D4oVAX+RrxLL1Dd8eeKawT36QcQ== - - - 200 - application/json;+charset=utf-8 67.1091ms
2023-12-19 14:55:54.376 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 12:42:05', Current time: '19.12.2023 13:55:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 14:55:54.378 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-19 14:55:54.379 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 12:42:05', Current time: '19.12.2023 13:55:54'.
2023-12-19 14:55:54.379 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:55:54.380 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 14:55:54.381 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 14:55:54.381 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 14:55:54.382 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-19 14:55:54.385 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 14:55:54.387 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 14:55:54.388 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 4.7919ms
2023-12-19 14:55:54.388 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/v7EYJvH3I46BvyIA6UGdC7FANY+9SCSyrsVvnKa87rO0vGXvcDHit4ZP+D4oVAX+RrxLL1Dd8eeKawT36QcQ== - -
2023-12-19 14:55:54.389 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 14:55:54.389 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:55:54.390 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/v7EYJvH3I46BvyIA6UGdC7FANY+9SCSyrsVvnKa87rO0vGXvcDHit4ZP+D4oVAX+RrxLL1Dd8eeKawT36QcQ== - - - 404 - application/json;+charset=utf-8 17.3063ms
2023-12-19 14:55:54.391 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 12:42:05', Current time: '19.12.2023 13:55:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 14:55:54.393 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 12:42:05', Current time: '19.12.2023 13:55:54'.
2023-12-19 14:55:54.394 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 14:55:54.395 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 14:55:54.399 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 14:55:54.400 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 14:55:54.402 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 5.5469ms
2023-12-19 14:55:54.402 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-19 14:55:54.402 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/v7EYJvH3I46BvyIA6UGdC7FANY+9SCSyrsVvnKa87rO0vGXvcDHit4ZP+D4oVAX+RrxLL1Dd8eeKawT36QcQ== - -
2023-12-19 14:55:54.403 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 14:55:54.406 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:55:54.406 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 14:55:54.406 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/v7EYJvH3I46BvyIA6UGdC7FANY+9SCSyrsVvnKa87rO0vGXvcDHit4ZP+D4oVAX+RrxLL1Dd8eeKawT36QcQ== - - - 404 - application/json;+charset=utf-8 17.7983ms
2023-12-19 14:55:54.407 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 12:42:05', Current time: '19.12.2023 13:55:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 14:55:54.408 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 24.2689ms
2023-12-19 14:55:54.411 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 12:42:05', Current time: '19.12.2023 13:55:54'.
2023-12-19 14:55:54.413 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 14:55:54.412 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 14:55:54.414 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 14:55:54.414 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 36.4249ms
2023-12-19 14:55:54.418 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 14:55:54.420 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 14:55:54.422 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 6.3775ms
2023-12-19 14:55:54.423 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 14:55:54.424 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/v7EYJvH3I46BvyIA6UGdC7FANY+9SCSyrsVvnKa87rO0vGXvcDHit4ZP+D4oVAX+RrxLL1Dd8eeKawT36QcQ== - - - 404 - application/json;+charset=utf-8 21.7406ms
2023-12-19 14:56:18.224 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-19 14:56:18.224 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 14:56:18.224 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 14:56:18.225 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-19 14:56:18.225 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:56:18.225 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:56:18.226 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:56:18.227 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:56:18.228 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 3.6609ms
2023-12-19 14:56:18.228 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 4.0184ms
2023-12-19 14:56:18.229 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-19 14:56:18.229 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 14:56:18.229 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 5.1001ms
2023-12-19 14:56:18.230 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 14:56:18.230 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 5.8332ms
2023-12-19 14:56:18.233 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:56:18.234 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:56:18.234 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 14:56:18.235 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:56:18.238 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 14:56:18.238 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 14:56:18.238 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:56:18.239 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 14:56:18.239 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-19 14:56:18.240 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 14:56:18.241 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 14:56:18.241 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 14:56:18.244 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-19 14:56:18.245 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-19 14:56:18.245 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 14:56:18.249 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 14:56:18.250 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 14:56:18.252 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 10.3343ms
2023-12-19 14:56:18.254 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 14:56:18.254 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 14:56:18.255 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 14:56:18.258 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 11.4593ms
2023-12-19 14:56:18.259 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 29.8217ms
2023-12-19 14:56:18.260 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 14:56:18.261 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 14:56:18.261 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 26.8081ms
2023-12-19 14:56:18.265 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 14:56:18.266 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-19 14:56:18.270 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 14:56:18.273 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-19 14:56:18.274 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 14:56:18.276 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 14:56:18.276 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 14:56:18.278 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-19 14:56:18.278 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 14:56:18.279 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:56:18.279 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:56:18.281 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 14:56:18.282 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 38.7357ms
2023-12-19 14:56:18.282 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 6.4352ms
2023-12-19 14:56:18.283 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 6.7017ms
2023-12-19 14:56:18.284 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 14:56:18.284 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 14:56:18.284 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 38.6566ms
2023-12-19 14:56:18.285 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 14:56:18.288 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:56:18.288 +01:00 [INF] CORS policy execution successful.
2023-12-19 14:56:18.289 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 14:56:18.290 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 60.5530ms
2023-12-19 14:56:18.291 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 14:56:18.291 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 14:56:18.292 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 61.7063ms
2023-12-19 14:56:18.293 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 14:56:18.294 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 14:56:18.300 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 14:56:18.300 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 14:56:18.302 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 14:56:18.304 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 14:56:18.306 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 9.4966ms
2023-12-19 14:56:18.307 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 9.0703ms
2023-12-19 14:56:18.308 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 14:56:18.309 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 14:56:18.309 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 25.7686ms
2023-12-19 14:56:18.310 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 26.4910ms
2023-12-19 15:06:50.742 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-19 15:06:50.743 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 15:06:50.743 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:06:50.744 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:06:50.745 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 2.5300ms
2023-12-19 15:06:50.745 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 15:06:50.745 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-19 15:06:50.746 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 2.9406ms
2023-12-19 15:06:50.746 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 15:06:50.746 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 15:06:50.747 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/token/0nEFvFtVBPVKy2vw4L7qsrMTdaerBZnPs4Lv9FcsiHLOfiaGkrC9+znoRbdTbAWZ1AbJB+o8q5b5T7sF5nzg== - -
2023-12-19 15:06:50.747 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:06:50.747 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-19 15:06:50.748 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 15:06:50.748 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:06:50.749 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:06:50.750 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:06:50.750 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:06:50.751 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 6.2275ms
2023-12-19 15:06:50.752 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:06:50.753 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:06:50.753 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 15:06:50.753 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 7.9139ms
2023-12-19 15:06:50.754 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 8.1086ms
2023-12-19 15:06:50.755 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 8.4943ms
2023-12-19 15:06:50.755 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/token/0nEFvFtVBPVKy2vw4L7qsrMTdaerBZnPs4Lv9FcsiHLOfiaGkrC9+znoRbdTbAWZ1AbJB+o8q5b5T7sF5nzg== - - - 204 - - 8.9416ms
2023-12-19 15:06:50.757 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 15:06:50.757 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 15:06:50.758 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 15:06:50.758 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/0nEFvFtVBPVKy2vw4L7qsrMTdaerBZnPs4Lv9FcsiHLOfiaGkrC9+znoRbdTbAWZ1AbJB+o8q5b5T7sF5nzg== - -
2023-12-19 15:06:50.759 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 15:06:50.759 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:06:50.763 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:06:50.763 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:06:50.765 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
2023-12-19 15:06:50.766 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:06:50.768 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
2023-12-19 15:06:50.769 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 15:06:50.769 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 15:06:50.770 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 15:06:50.772 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-19 15:06:50.772 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 15:06:50.773 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-19 15:06:50.775 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
2023-12-19 15:06:50.777 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
2023-12-19 15:06:50.778 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
2023-12-19 15:06:50.779 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 401 - application/json 31.7704ms
2023-12-19 15:06:50.781 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
2023-12-19 15:06:50.782 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 401 - application/json 34.5011ms
2023-12-19 15:06:50.783 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-19 15:06:50.784 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-19 15:06:50.785 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-19 15:06:50.786 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 15:06:50.787 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 15:06:50.788 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 401 - application/json 35.2881ms
2023-12-19 15:06:50.789 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 401 - application/json 32.6849ms
2023-12-19 15:06:50.790 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 401 - application/json 33.1183ms
2023-12-19 15:06:50.791 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:06:50.792 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 15:06:50.795 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 15:06:50.799 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
2023-12-19 15:06:50.800 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-19 15:06:50.802 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 401 - application/json 15.5765ms
2023-12-19 15:06:50.844 +01:00 [INF] Executed DbCommand (10ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 15:06:50.848 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__get_Item_0
2023-12-19 15:06:50.856 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Tokens] SET [RefreshToken] = @p0, [RefreshTokenExpiryTime] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2023-12-19 15:06:50.872 +01:00 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-12-19 15:06:50.874 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 15:06:50.876 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 79.2515ms
2023-12-19 15:06:50.876 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/0nEFvFtVBPVKy2vw4L7qsrMTdaerBZnPs4Lv9FcsiHLOfiaGkrC9+znoRbdTbAWZ1AbJB+o8q5b5T7sF5nzg== - -
2023-12-19 15:06:50.877 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 15:06:50.878 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:06:50.879 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/0nEFvFtVBPVKy2vw4L7qsrMTdaerBZnPs4Lv9FcsiHLOfiaGkrC9+znoRbdTbAWZ1AbJB+o8q5b5T7sF5nzg== - - - 200 - application/json;+charset=utf-8 120.5145ms
2023-12-19 15:06:50.880 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 15:06:50.883 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
2023-12-19 15:06:50.884 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 15:06:50.885 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 15:06:50.889 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 15:06:50.892 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 15:06:50.893 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 7.0894ms
2023-12-19 15:06:50.894 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/0nEFvFtVBPVKy2vw4L7qsrMTdaerBZnPs4Lv9FcsiHLOfiaGkrC9+znoRbdTbAWZ1AbJB+o8q5b5T7sF5nzg== - -
2023-12-19 15:06:50.895 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 15:06:50.895 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:06:50.897 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/0nEFvFtVBPVKy2vw4L7qsrMTdaerBZnPs4Lv9FcsiHLOfiaGkrC9+znoRbdTbAWZ1AbJB+o8q5b5T7sF5nzg== - - - 404 - application/json;+charset=utf-8 20.2135ms
2023-12-19 15:06:50.898 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 15:06:50.900 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
2023-12-19 15:06:50.901 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 15:06:50.902 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 15:06:50.907 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 15:06:50.909 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 15:06:50.910 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 5.7141ms
2023-12-19 15:06:50.911 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/0nEFvFtVBPVKy2vw4L7qsrMTdaerBZnPs4Lv9FcsiHLOfiaGkrC9+znoRbdTbAWZ1AbJB+o8q5b5T7sF5nzg== - -
2023-12-19 15:06:50.911 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 15:06:50.912 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:06:50.912 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/0nEFvFtVBPVKy2vw4L7qsrMTdaerBZnPs4Lv9FcsiHLOfiaGkrC9+znoRbdTbAWZ1AbJB+o8q5b5T7sF5nzg== - - - 404 - application/json;+charset=utf-8 18.4011ms
2023-12-19 15:06:50.913 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 15:06:50.916 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
2023-12-19 15:06:50.917 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 15:06:50.918 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 15:06:50.922 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 15:06:50.924 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 15:06:50.925 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 5.7886ms
2023-12-19 15:06:50.926 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/0nEFvFtVBPVKy2vw4L7qsrMTdaerBZnPs4Lv9FcsiHLOfiaGkrC9+znoRbdTbAWZ1AbJB+o8q5b5T7sF5nzg== - -
2023-12-19 15:06:50.926 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 15:06:50.927 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:06:50.928 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/0nEFvFtVBPVKy2vw4L7qsrMTdaerBZnPs4Lv9FcsiHLOfiaGkrC9+znoRbdTbAWZ1AbJB+o8q5b5T7sF5nzg== - - - 404 - application/json;+charset=utf-8 17.2339ms
2023-12-19 15:06:50.929 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 15:06:50.932 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
2023-12-19 15:06:50.932 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 15:06:50.933 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 15:06:50.937 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 15:06:50.938 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 15:06:50.940 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 5.1545ms
2023-12-19 15:06:50.940 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/0nEFvFtVBPVKy2vw4L7qsrMTdaerBZnPs4Lv9FcsiHLOfiaGkrC9+znoRbdTbAWZ1AbJB+o8q5b5T7sF5nzg== - -
2023-12-19 15:06:50.941 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 15:06:50.941 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:06:50.942 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/0nEFvFtVBPVKy2vw4L7qsrMTdaerBZnPs4Lv9FcsiHLOfiaGkrC9+znoRbdTbAWZ1AbJB+o8q5b5T7sF5nzg== - - - 404 - application/json;+charset=utf-8 16.5573ms
2023-12-19 15:06:50.943 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 15:06:50.945 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
2023-12-19 15:06:50.946 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 15:06:50.947 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 15:06:50.950 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 15:06:50.952 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 15:06:50.953 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 4.8258ms
2023-12-19 15:06:50.954 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/0nEFvFtVBPVKy2vw4L7qsrMTdaerBZnPs4Lv9FcsiHLOfiaGkrC9+znoRbdTbAWZ1AbJB+o8q5b5T7sF5nzg== - -
2023-12-19 15:06:50.954 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 15:06:50.955 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:06:50.956 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/0nEFvFtVBPVKy2vw4L7qsrMTdaerBZnPs4Lv9FcsiHLOfiaGkrC9+znoRbdTbAWZ1AbJB+o8q5b5T7sF5nzg== - - - 404 - application/json;+charset=utf-8 15.4002ms
2023-12-19 15:06:50.957 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 15:06:50.959 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 13:56:54', Current time: '19.12.2023 14:06:50'.
2023-12-19 15:06:50.960 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 15:06:50.961 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 15:06:50.965 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 15:06:50.966 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 15:06:50.967 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 4.7638ms
2023-12-19 15:06:50.968 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 15:06:50.969 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/0nEFvFtVBPVKy2vw4L7qsrMTdaerBZnPs4Lv9FcsiHLOfiaGkrC9+znoRbdTbAWZ1AbJB+o8q5b5T7sF5nzg== - - - 404 - application/json;+charset=utf-8 15.4050ms
2023-12-19 15:07:18.746 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-19 15:07:18.747 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-19 15:07:18.747 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 15:07:18.747 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 15:07:18.747 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:07:18.747 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 15:07:18.748 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 15:07:18.748 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:07:18.748 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:07:18.749 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:07:18.755 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 15:07:18.751 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:07:18.751 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-19 15:07:18.751 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:07:18.753 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 5.6238ms
2023-12-19 15:07:18.754 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 15:07:18.754 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 6.7854ms
2023-12-19 15:07:18.750 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 3.4129ms
2023-12-19 15:07:18.755 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 8.3082ms
2023-12-19 15:07:18.756 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 15:07:18.756 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:07:18.757 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 9.1469ms
2023-12-19 15:07:18.757 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:07:18.757 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 15:07:18.758 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 10.0977ms
2023-12-19 15:07:18.759 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 15:07:18.759 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:07:18.762 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:07:18.763 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 15:07:18.763 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 15:07:18.764 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:07:18.765 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:07:18.766 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 15:07:18.766 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 15:07:18.767 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 15:07:18.768 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-19 15:07:18.769 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 15:07:18.769 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 15:07:18.770 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-19 15:07:18.770 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 15:07:18.773 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 15:07:18.774 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 15:07:18.774 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-19 15:07:18.783 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-19 15:07:18.788 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-19 15:07:18.789 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 15:07:18.790 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-19 15:07:18.791 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 19.1849ms
2023-12-19 15:07:18.793 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 15:07:18.793 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 15:07:18.794 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 21.5066ms
2023-12-19 15:07:18.795 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 40.1058ms
2023-12-19 15:07:18.796 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 15:07:18.797 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 46.0582ms
2023-12-19 15:07:18.806 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 15:07:18.807 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 15:07:18.808 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 15:07:18.811 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 15:07:18.812 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 15:07:18.813 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 15:07:18.814 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 35.7547ms
2023-12-19 15:07:18.817 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 41.3433ms
2023-12-19 15:07:18.818 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 15:07:18.819 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 15:07:18.820 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 15:07:18.820 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 62.9923ms
2023-12-19 15:07:18.821 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 67.3486ms
2023-12-19 15:07:18.825 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 15:07:18.826 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 15:07:18.830 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 15:07:18.830 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 15:07:18.831 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 51.7236ms
2023-12-19 15:07:18.833 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 15:07:18.834 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 75.5001ms
2023-12-19 15:07:18.835 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 15:07:18.837 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 15:07:18.838 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 61.0744ms
2023-12-19 15:07:18.839 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 15:07:18.839 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 83.7876ms
2023-12-19 15:07:18.841 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 15:07:18.841 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 15:07:18.842 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:07:18.842 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:07:18.843 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 15:07:18.844 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 15:07:18.845 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 15:07:18.846 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 15:07:18.851 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 15:07:18.854 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 15:07:18.854 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 15:07:18.856 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 15:07:18.857 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 9.1708ms
2023-12-19 15:07:18.858 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 7.7232ms
2023-12-19 15:07:18.860 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 15:07:18.861 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 15:07:18.862 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 21.1097ms
2023-12-19 15:07:18.863 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 21.9444ms
2023-12-19 15:11:16.358 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/confirmEmail?token=gfdsfgd&email=dsa - -
2023-12-19 15:11:16.361 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:11:16.362 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.EmailConfirmation (WalletApp.Api)'
2023-12-19 15:11:16.368 +01:00 [INF] Route matched with {action = "EmailConfirmation", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult]] EmailConfirmation(System.String, System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-19 15:11:16.390 +01:00 [INF] Executed DbCommand (11ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2023-12-19 15:11:16.394 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult'.
2023-12-19 15:11:16.395 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.EmailConfirmation (WalletApp.Api) in 25.3633ms
2023-12-19 15:11:16.396 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.EmailConfirmation (WalletApp.Api)'
2023-12-19 15:11:16.396 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/confirmEmail?token=gfdsfgd&email=dsa - - - 404 - application/json;+charset=utf-8 37.9848ms
2023-12-19 15:11:52.760 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/confirmEmail?token=gfdsfgd&email=dsa - -
2023-12-19 15:11:52.760 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:11:52.761 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.EmailConfirmation (WalletApp.Api)'
2023-12-19 15:11:52.762 +01:00 [INF] Route matched with {action = "EmailConfirmation", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult]] EmailConfirmation(System.String, System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-19 15:11:52.766 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2023-12-19 15:11:52.768 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult'.
2023-12-19 15:11:52.768 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.EmailConfirmation (WalletApp.Api) in 5.3419ms
2023-12-19 15:11:52.769 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.EmailConfirmation (WalletApp.Api)'
2023-12-19 15:11:52.770 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/confirmEmail?token=gfdsfgd&email=dsa - - - 404 - application/json;+charset=utf-8 10.6135ms
2023-12-19 15:11:55.820 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/confirmEmail?token=gfdsfgd&email=dsa - -
2023-12-19 15:11:55.821 +01:00 [INF] CORS policy execution successful.
2023-12-19 15:11:55.822 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.EmailConfirmation (WalletApp.Api)'
2023-12-19 15:11:55.822 +01:00 [INF] Route matched with {action = "EmailConfirmation", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult]] EmailConfirmation(System.String, System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-19 15:11:55.827 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2023-12-19 15:11:55.829 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult'.
2023-12-19 15:11:55.830 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.EmailConfirmation (WalletApp.Api) in 5.7676ms
2023-12-19 15:11:55.831 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.EmailConfirmation (WalletApp.Api)'
2023-12-19 15:11:55.833 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/confirmEmail?token=gfdsfgd&email=dsa - - - 404 - application/json;+charset=utf-8 13.0939ms
2023-12-19 16:51:09.736 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/confirmEmail?token=gfdsfgd&email=dsa - -
2023-12-19 16:51:09.738 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:51:09.739 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.EmailConfirmation (WalletApp.Api)'
2023-12-19 16:51:09.740 +01:00 [INF] Route matched with {action = "EmailConfirmation", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult]] EmailConfirmation(System.String, System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-19 16:51:09.794 +01:00 [INF] Executed DbCommand (12ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2023-12-19 16:51:09.796 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult'.
2023-12-19 16:51:09.797 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.EmailConfirmation (WalletApp.Api) in 55.6743ms
2023-12-19 16:51:09.798 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.EmailConfirmation (WalletApp.Api)'
2023-12-19 16:51:09.800 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/confirmEmail?token=gfdsfgd&email=dsa - - - 404 - application/json;+charset=utf-8 63.3174ms
2023-12-19 16:51:12.735 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/confirmEmail?token=gfdsfgd&email=dsa - -
2023-12-19 16:51:12.735 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:51:12.736 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.EmailConfirmation (WalletApp.Api)'
2023-12-19 16:51:12.737 +01:00 [INF] Route matched with {action = "EmailConfirmation", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult]] EmailConfirmation(System.String, System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-19 16:51:12.742 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2023-12-19 16:51:12.744 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult'.
2023-12-19 16:51:12.746 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.EmailConfirmation (WalletApp.Api) in 6.5034ms
2023-12-19 16:51:12.747 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.EmailConfirmation (WalletApp.Api)'
2023-12-19 16:51:12.748 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/confirmEmail?token=gfdsfgd&email=dsa - - - 404 - application/json;+charset=utf-8 13.6357ms
2023-12-19 16:54:28.038 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/confirmEmail?token=gfdsfgd&email=dsa - -
2023-12-19 16:54:28.039 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:54:28.040 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.EmailConfirmation (WalletApp.Api)'
2023-12-19 16:54:28.041 +01:00 [INF] Route matched with {action = "EmailConfirmation", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult]] EmailConfirmation(System.String, System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-19 16:54:28.046 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2023-12-19 16:54:28.049 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult'.
2023-12-19 16:54:28.050 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.EmailConfirmation (WalletApp.Api) in 7.0636ms
2023-12-19 16:54:28.051 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.EmailConfirmation (WalletApp.Api)'
2023-12-19 16:54:28.052 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/confirmEmail?token=gfdsfgd&email=dsa - - - 404 - application/json;+charset=utf-8 13.8559ms
2023-12-19 16:54:29.937 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/token/LZTQFAQhre1SyOD+24q3hpD2826dLWKajpQvUqScVWLUPl+1boNfapV9TQ2KNbOl+UbNMLLWReOroKS3wIznAg== - -
2023-12-19 16:54:29.938 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:54:29.939 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/token/LZTQFAQhre1SyOD+24q3hpD2826dLWKajpQvUqScVWLUPl+1boNfapV9TQ2KNbOl+UbNMLLWReOroKS3wIznAg== - - - 204 - - 1.5177ms
2023-12-19 16:54:29.939 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/LZTQFAQhre1SyOD+24q3hpD2826dLWKajpQvUqScVWLUPl+1boNfapV9TQ2KNbOl+UbNMLLWReOroKS3wIznAg== - -
2023-12-19 16:54:29.941 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:54:29.942 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 14:07:50', Current time: '19.12.2023 15:54:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 16:54:29.944 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 14:07:50', Current time: '19.12.2023 15:54:29'.
2023-12-19 16:54:29.945 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 16:54:29.946 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 16:54:29.950 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 16:54:29.956 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__get_Item_0
2023-12-19 16:54:29.966 +01:00 [INF] Executed DbCommand (8ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Tokens] SET [RefreshToken] = @p0, [RefreshTokenExpiryTime] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2023-12-19 16:54:29.973 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-12-19 16:54:29.977 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 16:54:29.978 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 30.9758ms
2023-12-19 16:54:29.979 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 16:54:29.980 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/LZTQFAQhre1SyOD+24q3hpD2826dLWKajpQvUqScVWLUPl+1boNfapV9TQ2KNbOl+UbNMLLWReOroKS3wIznAg== - - - 200 - application/json;+charset=utf-8 40.0981ms
2023-12-19 16:54:30.008 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 16:54:30.008 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-19 16:54:30.009 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:54:30.009 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:54:30.010 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 1.9630ms
2023-12-19 16:54:30.010 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 2.0059ms
2023-12-19 16:54:30.011 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 16:54:30.012 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 16:54:30.012 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:54:30.013 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:54:30.014 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 16:54:30.014 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 16:54:30.015 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 16:54:30.016 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-19 16:54:30.020 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 16:54:30.026 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 16:54:30.031 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 16:54:30.036 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 16:54:30.038 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 16:54:30.040 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 16:54:30.040 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 16:54:30.041 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 22.8284ms
2023-12-19 16:54:30.043 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 16:54:30.044 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 32.7118ms
2023-12-19 16:54:30.044 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 16:54:30.047 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 16:54:30.048 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 30.9707ms
2023-12-19 16:54:30.049 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 16:54:30.049 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 38.5913ms
2023-12-19 16:54:30.052 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-19 16:54:30.052 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 16:54:30.053 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:54:30.053 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 16:54:30.053 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:54:30.054 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 2.1966ms
2023-12-19 16:54:30.055 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:54:30.054 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 16:54:30.056 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-19 16:54:30.056 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 16:54:30.057 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 4.0100ms
2023-12-19 16:54:30.058 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:54:30.058 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:54:30.058 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 16:54:30.059 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 16:54:30.060 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 16:54:30.061 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 16:54:30.061 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:54:30.063 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-19 16:54:30.063 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-19 16:54:30.064 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 16:54:30.064 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 16:54:30.066 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 16:54:30.068 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 16:54:30.069 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 16:54:30.070 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 16:54:30.074 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 8.8054ms
2023-12-19 16:54:30.074 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-19 16:54:30.075 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 16:54:30.076 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 16:54:30.077 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 23.5177ms
2023-12-19 16:54:30.080 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-19 16:54:30.081 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 16:54:30.084 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-19 16:54:30.086 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 16:54:30.086 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 16:54:30.087 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-19 16:54:30.087 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 16:54:30.087 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 16:54:30.089 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 18.1132ms
2023-12-19 16:54:30.090 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 16:54:30.092 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 16:54:30.092 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:54:30.093 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:54:30.093 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 16:54:30.095 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 16:54:30.096 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 29.4394ms
2023-12-19 16:54:30.096 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 9.2344ms
2023-12-19 16:54:30.097 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 9.4424ms
2023-12-19 16:54:30.097 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 16:54:30.098 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 39.1251ms
2023-12-19 16:54:30.098 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 16:54:30.099 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 37.1776ms
2023-12-19 16:54:30.100 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 16:54:30.102 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:54:30.103 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:54:30.104 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 16:54:30.104 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 48.8790ms
2023-12-19 16:54:30.105 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 16:54:30.106 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 16:54:30.106 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 53.8565ms
2023-12-19 16:54:30.107 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 16:54:30.108 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 16:54:30.114 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 16:54:30.114 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 16:54:30.116 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 16:54:30.117 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 16:54:30.118 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 7.9169ms
2023-12-19 16:54:30.119 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 7.5233ms
2023-12-19 16:54:30.120 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 16:54:30.121 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 16:54:30.121 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 24.4923ms
2023-12-19 16:54:30.122 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 24.2709ms
2023-12-19 16:58:17.166 +01:00 [INF] Application is shutting down...
2023-12-19 16:58:17.174 +01:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED shutting down.
2023-12-19 16:58:17.176 +01:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED paused.
2023-12-19 16:58:17.180 +01:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED Shutdown complete.
2023-12-19 16:59:21.654 +01:00 [INF] User profile is available. Using 'C:\Users\maste\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-19 16:59:21.864 +01:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2023-12-19 16:59:21.865 +01:00 [INF] Quartz Scheduler created
2023-12-19 16:59:21.866 +01:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2023-12-19 16:59:21.869 +01:00 [INF] RAMJobStore initialized.
2023-12-19 16:59:21.870 +01:00 [INF] Quartz Scheduler 3.7.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2023-12-19 16:59:21.872 +01:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2023-12-19 16:59:21.873 +01:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2023-12-19 16:59:21.883 +01:00 [INF] Adding 1 jobs, 1 triggers.
2023-12-19 16:59:21.886 +01:00 [INF] Adding job: DEFAULT.NBP
2023-12-19 16:59:21.989 +01:00 [INF] Now listening on: http://localhost:5238
2023-12-19 16:59:21.991 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-19 16:59:21.996 +01:00 [INF] Hosting environment: Development
2023-12-19 16:59:21.997 +01:00 [INF] Content root path: C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Api
2023-12-19 16:59:21.999 +01:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2023-12-19 16:59:22.200 +01:00 [INF] Start processing HTTP request GET http://api.nbp.pl/api/exchangerates/tables/c
2023-12-19 16:59:22.205 +01:00 [INF] Sending HTTP request GET http://api.nbp.pl/api/exchangerates/tables/c
2023-12-19 16:59:22.368 +01:00 [INF] Received HTTP response headers after 158.5584ms - 200
2023-12-19 16:59:22.374 +01:00 [INF] End processing HTTP request after 177.775ms - 200
2023-12-19 16:59:24.455 +01:00 [INF] Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 16:59:25.022 +01:00 [ERR] Job DEFAULT.NBP threw an unhandled Exception: 
System.NullReferenceException: Object reference not set to an instance of an object.
   at WalletApp.Application.Common.Currency.UpdateCurrency.UpdateCurrencyCommandHandler.Handle(UpdateCurrencyCommand request, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Common\Currency\UpdateCurrency\UpdateCurrencyCommandHandler.cs:line 27
   at WalletApp.Application.Behaviours.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Behaviours\ValidationBehaviour.cs:line 22
   at WalletApp.Infractructure.Quartz.CallToNbpApiJob.Execute(IJobExecutionContext context) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Infrastructure\Quartz\CallToNbpApiJob.cs:line 20
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
2023-12-19 16:59:25.031 +01:00 [ERR] Job DEFAULT.NBP threw an exception.
Quartz.SchedulerException: Job threw an unhandled exception.
 ---> System.NullReferenceException: Object reference not set to an instance of an object.
   at WalletApp.Application.Common.Currency.UpdateCurrency.UpdateCurrencyCommandHandler.Handle(UpdateCurrencyCommand request, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Common\Currency\UpdateCurrency\UpdateCurrencyCommandHandler.cs:line 27
   at WalletApp.Application.Behaviours.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Behaviours\ValidationBehaviour.cs:line 22
   at WalletApp.Infractructure.Quartz.CallToNbpApiJob.Execute(IJobExecutionContext context) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Infrastructure\Quartz\CallToNbpApiJob.cs:line 20
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)
   --- End of inner exception stack trace --- [See nested exception: System.NullReferenceException: Object reference not set to an instance of an object.
   at WalletApp.Application.Common.Currency.UpdateCurrency.UpdateCurrencyCommandHandler.Handle(UpdateCurrencyCommand request, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Common\Currency\UpdateCurrency\UpdateCurrencyCommandHandler.cs:line 27
   at WalletApp.Application.Behaviours.ValidationBehaviour`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Application\Behaviours\ValidationBehaviour.cs:line 22
   at WalletApp.Infractructure.Quartz.CallToNbpApiJob.Execute(IJobExecutionContext context) in C:\Users\maste\source\repos\wallet-app\wallet-app-backend\WalletApp.Infrastructure\Quartz\CallToNbpApiJob.cs:line 20
   at Quartz.Core.JobRunShell.Run(CancellationToken cancellationToken)]
2023-12-19 16:59:33.093 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/token/JJ7xZvgyAYZW31dr9BluQlm1z1kDjKZ8L7SX4h2wXaDUTyKUG+zQ6drz9yqmNgvKuXRb2dABB2GNuXzN2dvgQ== - -
2023-12-19 16:59:33.137 +01:00 [WRN] Failed to determine the https port for redirect.
2023-12-19 16:59:33.139 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:59:33.153 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/token/JJ7xZvgyAYZW31dr9BluQlm1z1kDjKZ8L7SX4h2wXaDUTyKUG+zQ6drz9yqmNgvKuXRb2dABB2GNuXzN2dvgQ== - - - 204 - - 61.9024ms
2023-12-19 16:59:33.156 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/JJ7xZvgyAYZW31dr9BluQlm1z1kDjKZ8L7SX4h2wXaDUTyKUG+zQ6drz9yqmNgvKuXRb2dABB2GNuXzN2dvgQ== - -
2023-12-19 16:59:33.163 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:59:33.390 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 16:59:33.403 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 16:59:33.565 +01:00 [INF] Executed DbCommand (30ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 16:59:33.636 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__get_Item_0
2023-12-19 16:59:33.825 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Tokens] SET [RefreshToken] = @p0, [RefreshTokenExpiryTime] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2023-12-19 16:59:33.868 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-12-19 16:59:33.893 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 16:59:33.922 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 513.601ms
2023-12-19 16:59:33.925 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 16:59:33.937 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/JJ7xZvgyAYZW31dr9BluQlm1z1kDjKZ8L7SX4h2wXaDUTyKUG+zQ6drz9yqmNgvKuXRb2dABB2GNuXzN2dvgQ== - - - 200 - application/json;+charset=utf-8 780.5085ms
2023-12-19 16:59:33.966 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-19 16:59:33.968 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:59:33.969 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 16:59:33.978 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:59:33.969 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 2.7032ms
2023-12-19 16:59:33.981 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 16:59:33.988 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 19.4207ms
2023-12-19 16:59:33.991 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 16:59:33.991 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:59:33.994 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:59:34.020 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 16:59:34.020 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 16:59:34.026 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-19 16:59:34.026 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 16:59:34.060 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 16:59:34.068 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 16:59:34.079 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 51.8665ms
2023-12-19 16:59:34.081 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 16:59:34.083 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 101.9134ms
2023-12-19 16:59:34.085 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 16:59:53.114 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 16:59:53.114 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-19 16:59:53.121 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:59:53.125 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:59:53.129 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 16:59:53.125 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 11.6932ms
2023-12-19 16:59:53.134 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:59:53.133 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 19.3679ms
2023-12-19 16:59:53.142 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 16:59:53.144 +01:00 [INF] CORS policy execution successful.
2023-12-19 16:59:53.147 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 16:59:53.147 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 16:59:53.148 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-19 16:59:53.149 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 16:59:53.155 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 16:59:53.159 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 16:59:53.161 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 16:59:54.869 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 1718.1677ms
2023-12-19 16:59:54.871 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 16:59:54.872 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 1729.4646ms
2023-12-19 16:59:54.889 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 16:59:54.889 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 16:59:56.726 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 16:59:56.726 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 16:59:58.793 +01:00 [INF] Executed DbCommand (728ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 16:59:59.323 +01:00 [INF] Executed DbCommand (530ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 16:59:59.326 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 16:59:59.982 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:00:00.764 +01:00 [INF] Executed DbCommand (363ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:00:00.766 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:00:00.767 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:00:00.769 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:00:00.779 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 7626.5149ms
2023-12-19 17:00:00.780 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:00:00.781 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 26752.0028ms
2023-12-19 17:00:00.781 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 7652.1056ms
2023-12-19 17:00:00.782 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:00:00.783 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 0 - application/json;+charset=utf-8 26792.8800ms
2023-12-19 17:00:05.731 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 17:00:05.731 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-19 17:00:05.732 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:00:05.732 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:00:05.734 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 2.7093ms
2023-12-19 17:00:05.735 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 3.7153ms
2023-12-19 17:00:05.735 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 17:00:05.735 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 17:00:05.736 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:00:05.737 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:00:05.738 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:00:05.738 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:00:05.741 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:00:05.742 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-19 17:00:05.747 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:00:05.750 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:00:08.913 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:00:08.914 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:00:08.915 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 3168.2444ms
2023-12-19 17:00:08.918 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:00:08.920 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 3184.3994ms
2023-12-19 17:00:09.657 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:00:10.306 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:00:10.799 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:00:11.350 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:00:11.352 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:00:11.354 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 5610.6368ms
2023-12-19 17:00:11.355 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:00:11.356 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 5620.9041ms
2023-12-19 17:00:58.022 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 17:00:58.032 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-19 17:00:58.032 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:00:58.040 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:00:58.041 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 18.7677ms
2023-12-19 17:00:58.042 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 11.3127ms
2023-12-19 17:00:58.046 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 17:00:58.049 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 17:00:58.055 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:00:58.055 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:00:58.057 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:00:58.057 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:00:58.057 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:00:58.058 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-19 17:00:58.063 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:00:58.066 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:01:01.938 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:01:01.939 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:01:01.939 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 3877.602ms
2023-12-19 17:01:01.942 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:01:01.943 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 3894.3799ms
2023-12-19 17:01:01.946 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:01:01.951 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:01:01.956 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:01:01.960 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:01:01.963 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:01:01.964 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 3904.6439ms
2023-12-19 17:01:01.965 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:01:01.966 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 3920.7105ms
2023-12-19 17:01:01.977 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-19 17:01:01.977 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 17:01:01.977 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 17:01:01.979 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 17:01:01.978 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:01.978 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:01.983 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:01.985 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:01.986 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:01:01.989 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-19 17:01:01.994 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:01:01.992 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:01:01.986 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 9.7829ms
2023-12-19 17:01:02.001 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:02.002 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-19 17:01:01.987 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 9.7278ms
2023-12-19 17:01:01.994 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 17:01:02.004 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:01:02.005 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 17:01:02.009 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:02.009 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:01:02.012 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 17:01:02.012 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:01:02.013 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-19 17:01:02.014 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:01:02.019 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 12.8274ms
2023-12-19 17:01:02.020 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:01:02.020 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:01:02.023 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:01:02.024 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 44.6616ms
2023-12-19 17:01:02.025 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:01:02.031 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:01:02.036 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:01:02.038 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:01:02.038 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:01:02.039 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:01:02.040 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:02.040 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:02.042 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 40.432ms
2023-12-19 17:01:02.043 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 4.6641ms
2023-12-19 17:01:02.044 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:01:02.046 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:01:02.043 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 5.1509ms
2023-12-19 17:01:02.053 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:02.056 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-19 17:01:02.045 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:01:02.053 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:02.057 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:01:02.059 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 82.3785ms
2023-12-19 17:01:02.061 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:01:02.064 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:01:02.067 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:01:02.092 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-19 17:01:02.098 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:01:02.120 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-19 17:01:02.125 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 107.8748ms
2023-12-19 17:01:02.127 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 17:01:02.128 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 138.8273ms
2023-12-19 17:01:02.153 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-19 17:01:02.153 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:01:02.161 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:01:02.163 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:01:02.168 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 101.9848ms
2023-12-19 17:01:02.170 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:01:02.171 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 126.7682ms
2023-12-19 17:01:02.180 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:01:02.183 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:01:02.186 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 160.9923ms
2023-12-19 17:01:02.187 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 118.5307ms
2023-12-19 17:01:02.189 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 17:01:02.192 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:01:02.193 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 199.1796ms
2023-12-19 17:01:02.195 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 149.0068ms
2023-12-19 17:01:35.910 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-19 17:01:35.921 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:35.927 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-19 17:01:35.933 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 23.2423ms
2023-12-19 17:01:35.938 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:35.921 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 17:01:35.930 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:01:35.955 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-19 17:01:35.958 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 33.0983ms
2023-12-19 17:01:35.958 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:35.969 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:35.965 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:35.940 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:01:35.959 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 17:01:35.972 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 17:01:35.973 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:01:35.971 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 50.3494ms
2023-12-19 17:01:35.972 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 42.4915ms
2023-12-19 17:01:35.973 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:35.980 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-19 17:01:35.981 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:35.974 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:35.986 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:01:35.983 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 42.8800ms
2023-12-19 17:01:35.986 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:01:35.986 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:01:35.984 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:01:35.972 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 17:01:35.989 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-19 17:01:35.991 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-19 17:01:35.992 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:35.993 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:35.999 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:01:35.998 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:01:36.003 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:01:36.004 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:01:36.004 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:01:36.004 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 20.1624ms
2023-12-19 17:01:36.006 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:01:36.007 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:01:36.009 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:01:36.010 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:01:36.011 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 17:01:36.013 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 22.215ms
2023-12-19 17:01:36.019 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 65.4526ms
2023-12-19 17:01:36.015 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 14.8543ms
2023-12-19 17:01:36.022 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:01:36.023 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:01:36.024 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 50.8534ms
2023-12-19 17:01:36.025 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 65.3870ms
2023-12-19 17:01:36.028 +01:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:01:36.028 +01:00 [INF] Executed DbCommand (12ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:01:36.033 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:01:36.033 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:01:36.034 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 19.9674ms
2023-12-19 17:01:36.037 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:01:36.039 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 54.7978ms
2023-12-19 17:01:36.041 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:01:36.069 +01:00 [INF] Executed DbCommand (23ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:01:36.075 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:01:36.082 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:01:36.096 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:01:36.098 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 79.2056ms
2023-12-19 17:01:36.099 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:01:36.100 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 128.5270ms
2023-12-19 17:01:36.105 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-19 17:01:36.105 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 17:01:36.105 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 17:01:36.106 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 17:01:36.106 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:36.107 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:36.108 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:36.108 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:36.110 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 17:01:36.110 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 5.1023ms
2023-12-19 17:01:36.113 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 17:01:36.113 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:01:36.115 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:01:36.115 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-19 17:01:36.118 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:36.119 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:01:36.120 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-19 17:01:36.128 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-19 17:01:36.131 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:01:36.124 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 17:01:36.135 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:01:36.135 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:01:36.138 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:01:36.140 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:01:36.141 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:01:36.142 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 19.8608ms
2023-12-19 17:01:36.150 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 18.4588ms
2023-12-19 17:01:36.150 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-19 17:01:36.153 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:01:36.151 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 17:01:36.156 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 50.3227ms
2023-12-19 17:01:36.156 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:01:36.159 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-19 17:01:36.159 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 53.9180ms
2023-12-19 17:01:36.165 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:01:36.169 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-19 17:01:36.172 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:01:36.172 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:01:36.173 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:01:36.173 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:01:36.173 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 29.5789ms
2023-12-19 17:01:36.177 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:36.178 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:01:36.179 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 17:01:36.179 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:01:36.185 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:01:36.181 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 68.7783ms
2023-12-19 17:01:36.181 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:01:36.180 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:01:36.187 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 60.2276ms
2023-12-19 17:01:36.188 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:01:36.189 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:01:36.191 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:01:36.198 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:01:36.198 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 93.0451ms
2023-12-19 17:01:36.202 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:01:36.202 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:01:36.206 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:01:36.207 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 14.8264ms
2023-12-19 17:01:36.209 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 14.1152ms
2023-12-19 17:01:36.210 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:01:36.211 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:01:36.212 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 39.2559ms
2023-12-19 17:01:36.213 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 40.5528ms
2023-12-19 17:05:17.652 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-19 17:05:17.654 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 17:05:17.670 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:17.681 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:17.685 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 33.0412ms
2023-12-19 17:05:17.692 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 39.4704ms
2023-12-19 17:05:17.701 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 17:05:17.666 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 17:05:17.674 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-19 17:05:17.681 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:05:17.689 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:05:17.701 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-19 17:05:17.704 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:17.705 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:17.706 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:17.707 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:17.707 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:17.710 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 36.3490ms
2023-12-19 17:05:17.711 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 17:05:17.709 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:05:17.726 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:17.709 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 44.5814ms
2023-12-19 17:05:17.726 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:05:17.711 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 29.8037ms
2023-12-19 17:05:17.716 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 27.4121ms
2023-12-19 17:05:17.708 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:17.733 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 17:05:17.732 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:05:17.734 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:17.713 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 17:05:17.720 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:05:17.737 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:05:17.739 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:05:17.737 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 17:05:17.739 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:17.741 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:17.741 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:05:17.743 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:05:17.746 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-19 17:05:17.750 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:05:17.753 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:05:17.755 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-19 17:05:17.757 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:05:17.744 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-19 17:05:17.745 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:05:17.746 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:05:17.762 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-19 17:05:17.760 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 11.2072ms
2023-12-19 17:05:17.763 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-19 17:05:17.759 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:05:17.767 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:05:17.768 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:05:17.774 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 31.4425ms
2023-12-19 17:05:17.766 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-19 17:05:17.766 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:05:17.773 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:05:17.775 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 49.3098ms
2023-12-19 17:05:17.776 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 17:05:17.780 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:05:17.784 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:05:17.776 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:05:17.785 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:05:17.786 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 74.7057ms
2023-12-19 17:05:17.787 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 25.1912ms
2023-12-19 17:05:17.789 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 18.9982ms
2023-12-19 17:05:17.795 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:05:17.795 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:05:17.798 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 17:05:17.800 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 19.8556ms
2023-12-19 17:05:17.799 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:05:17.805 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 103.8946ms
2023-12-19 17:05:17.806 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:05:17.806 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:05:17.807 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 94.5465ms
2023-12-19 17:05:17.809 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 88.8250ms
2023-12-19 17:05:17.812 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:05:17.815 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 76.7125ms
2023-12-19 17:05:17.817 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:05:17.818 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 117.2272ms
2023-12-19 17:05:17.824 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-19 17:05:17.824 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 17:05:17.825 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 17:05:17.825 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 17:05:17.825 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:17.826 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:17.826 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:17.827 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:17.828 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 17:05:17.828 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:05:17.830 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:05:17.830 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 17:05:17.831 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-19 17:05:17.831 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:05:17.832 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-19 17:05:17.837 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:05:17.840 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:05:17.841 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:17.837 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:05:17.845 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:05:17.843 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:05:17.838 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-19 17:05:17.833 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:05:17.845 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:17.846 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:05:17.846 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:05:17.852 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:05:17.848 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:05:17.857 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:05:17.850 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:05:17.854 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-19 17:05:17.860 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:05:17.872 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:05:17.860 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 20.5891ms
2023-12-19 17:05:17.863 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 28.0389ms
2023-12-19 17:05:17.860 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:05:17.878 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:05:17.880 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:05:17.881 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:05:17.882 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 17:05:17.885 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 29.8037ms
2023-12-19 17:05:17.886 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:05:17.887 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 25.1914ms
2023-12-19 17:05:17.898 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:05:17.905 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:05:17.904 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:05:17.909 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 72.2140ms
2023-12-19 17:05:17.887 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 62.4372ms
2023-12-19 17:05:17.888 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 64.1464ms
2023-12-19 17:05:17.909 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-19 17:05:17.913 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 75.7916ms
2023-12-19 17:05:17.914 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:05:17.915 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:05:17.915 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:05:17.926 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-19 17:05:17.928 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:05:17.928 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:17.929 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:17.931 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:05:17.932 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 95.7698ms
2023-12-19 17:05:17.934 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:05:17.934 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:05:17.935 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 83.9667ms
2023-12-19 17:05:17.936 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:05:17.937 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:05:17.938 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:05:17.939 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 17:05:17.940 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 115.3106ms
2023-12-19 17:05:17.945 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:05:17.946 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 120.5504ms
2023-12-19 17:05:17.949 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:05:17.950 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:05:17.953 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:05:17.954 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 12.7536ms
2023-12-19 17:05:17.955 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 12.4371ms
2023-12-19 17:05:17.957 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:05:17.958 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:05:17.959 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 44.3472ms
2023-12-19 17:05:17.960 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 44.2783ms
2023-12-19 17:05:41.812 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 17:05:41.813 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:41.817 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 4.8748ms
2023-12-19 17:05:41.824 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-19 17:05:41.824 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 17:05:41.837 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:41.865 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:41.870 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 45.5047ms
2023-12-19 17:05:41.897 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 72.7878ms
2023-12-19 17:05:41.917 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 17:05:41.851 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-19 17:05:41.879 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 17:05:41.895 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-19 17:05:41.897 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 17:05:41.908 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-19 17:05:41.931 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:41.927 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:41.927 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:41.928 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:41.929 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:41.929 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:41.932 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 24.3666ms
2023-12-19 17:05:41.917 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-19 17:05:41.936 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 17:05:41.943 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 92.7347ms
2023-12-19 17:05:41.945 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 53.6461ms
2023-12-19 17:05:41.946 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 49.3616ms
2023-12-19 17:05:41.947 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:41.948 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:41.953 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 17:05:41.953 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 17:05:41.953 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 17:05:41.953 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:41'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 17:05:41.957 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:41'.
2023-12-19 17:05:41.959 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:41'.
2023-12-19 17:05:41.961 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:41'.
2023-12-19 17:05:41.964 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:41'.
2023-12-19 17:05:41.966 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-19 17:05:41.966 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-19 17:05:41.967 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-19 17:05:41.968 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-19 17:05:42.030 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 401 - application/json 113.7387ms
2023-12-19 17:05:42.030 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 401 - application/json 112.9608ms
2023-12-19 17:05:42.030 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 401 - application/json 95.1807ms
2023-12-19 17:05:42.030 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 401 - application/json 154.7238ms
2023-12-19 17:05:42.032 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-19 17:05:42.032 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 17:05:42.032 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 17:05:42.033 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 17:05:42.033 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - -
2023-12-19 17:05:42.033 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:42.034 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:42.035 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - -
2023-12-19 17:05:42.035 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:42.036 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:42.038 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:42.035 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - -
2023-12-19 17:05:42.038 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 17:05:42.037 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 17:05:42.035 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:42.036 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - -
2023-12-19 17:05:42.040 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - - - 204 - - 5.5094ms
2023-12-19 17:05:42.040 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - -
2023-12-19 17:05:42.039 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 17:05:42.039 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - - - 204 - - 5.9873ms
2023-12-19 17:05:42.041 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:42.043 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
2023-12-19 17:05:42.045 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
2023-12-19 17:05:42.045 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 17:05:42.046 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:42.047 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:42.049 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
2023-12-19 17:05:42.050 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - - - 204 - - 15.1119ms
2023-12-19 17:05:42.052 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-19 17:05:42.053 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-19 17:05:42.056 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
2023-12-19 17:05:42.056 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - - - 204 - - 19.9730ms
2023-12-19 17:05:42.058 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 17:05:42.058 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-19 17:05:42.059 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 401 - application/json 27.7945ms
2023-12-19 17:05:42.060 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 401 - application/json 28.5387ms
2023-12-19 17:05:42.061 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-19 17:05:42.065 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
2023-12-19 17:05:42.066 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 401 - application/json 32.4270ms
2023-12-19 17:05:42.068 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 401 - application/json 36.2721ms
2023-12-19 17:05:42.069 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 17:05:42.071 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 17:05:42.078 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 17:05:42.084 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__get_Item_0
2023-12-19 17:05:42.102 +01:00 [INF] Executed DbCommand (15ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Tokens] SET [RefreshToken] = @p0, [RefreshTokenExpiryTime] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2023-12-19 17:05:42.109 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-12-19 17:05:42.112 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:05:42.113 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 40.4445ms
2023-12-19 17:05:42.114 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - -
2023-12-19 17:05:42.115 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 17:05:42.115 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:42.116 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - - - 200 - application/json;+charset=utf-8 76.0310ms
2023-12-19 17:05:42.118 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 17:05:42.119 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 17:05:42.121 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
2023-12-19 17:05:42.121 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:42.122 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 17:05:42.124 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:05:42.124 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 17:05:42.125 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-19 17:05:42.131 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 17:05:42.131 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:05:42.134 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:05:42.136 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:05:42.137 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 10.5333ms
2023-12-19 17:05:42.138 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - -
2023-12-19 17:05:42.138 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 10.2234ms
2023-12-19 17:05:42.139 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 17:05:42.140 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:42.141 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:05:42.142 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - - - 404 - application/json;+charset=utf-8 27.8127ms
2023-12-19 17:05:42.143 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 17:05:42.144 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 24.8926ms
2023-12-19 17:05:42.148 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
2023-12-19 17:05:42.149 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 17:05:42.150 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 17:05:42.156 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 17:05:42.159 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:05:42.160 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 8.1444ms
2023-12-19 17:05:42.161 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - -
2023-12-19 17:05:42.162 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 17:05:42.163 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:42.164 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - - - 404 - application/json;+charset=utf-8 26.2194ms
2023-12-19 17:05:42.165 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 17:05:42.168 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
2023-12-19 17:05:42.169 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 17:05:42.170 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 17:05:42.176 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 17:05:42.178 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:05:42.180 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 8.3404ms
2023-12-19 17:05:42.181 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - -
2023-12-19 17:05:42.181 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 17:05:42.182 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:42.183 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - - - 404 - application/json;+charset=utf-8 21.4424ms
2023-12-19 17:05:42.184 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 17:05:42.187 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
2023-12-19 17:05:42.188 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 17:05:42.189 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 17:05:42.195 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 17:05:42.197 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:05:42.198 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 6.6507ms
2023-12-19 17:05:42.199 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - -
2023-12-19 17:05:42.199 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 17:05:42.200 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:42.200 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - - - 404 - application/json;+charset=utf-8 19.7127ms
2023-12-19 17:05:42.201 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 17:05:42.204 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
2023-12-19 17:05:42.205 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 17:05:42.207 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 17:05:42.212 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 17:05:42.215 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:05:42.216 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 7.5065ms
2023-12-19 17:05:42.217 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - -
2023-12-19 17:05:42.218 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 17:05:42.219 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:42.220 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - - - 404 - application/json;+charset=utf-8 21.1012ms
2023-12-19 17:05:42.221 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 17:05:42.226 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
2023-12-19 17:05:42.227 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 17:05:42.228 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 17:05:42.234 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 17:05:42.237 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:05:42.238 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 8.0743ms
2023-12-19 17:05:42.239 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - -
2023-12-19 17:05:42.240 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 17:05:42.241 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:42.242 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - - - 404 - application/json;+charset=utf-8 24.5407ms
2023-12-19 17:05:42.243 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 17:05:42.247 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:00:33', Current time: '19.12.2023 16:05:42'.
2023-12-19 17:05:42.248 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 17:05:42.250 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 17:05:42.255 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 17:05:42.258 +01:00 [INF] Executing NotFoundObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:05:42.259 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 7.8777ms
2023-12-19 17:05:42.261 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 17:05:42.262 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/j9cIbk2i5IpguLvBuVFJW8A3a4hdQCLsseUgy7iuGxSTCL0A2FsgEDzx38gNvfDyn5MCv2lWabx2hJgySB9Q== - - - 404 - application/json;+charset=utf-8 22.7228ms
2023-12-19 17:05:50.378 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-19 17:05:50.379 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:50.380 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 2.0843ms
2023-12-19 17:05:50.381 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-19 17:05:50.382 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:50.383 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 17:05:50.383 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 17:05:50.384 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:50.385 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 17:05:50.385 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-19 17:05:50.385 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-19 17:05:50.386 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 2.6352ms
2023-12-19 17:05:50.386 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 17:05:50.389 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:50.386 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:50.391 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-19 17:05:50.391 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:50.392 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 7.1339ms
2023-12-19 17:05:50.393 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 8.1599ms
2023-12-19 17:05:50.393 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 17:05:50.394 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 17:05:50.395 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:05:50.396 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:05:50.397 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:50.398 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:50.399 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 10.5905ms
2023-12-19 17:05:50.400 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:05:50.401 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:05:50.401 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 17:05:50.402 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 17:05:50.404 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-19 17:05:50.406 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:05:50.406 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 25.3511ms
2023-12-19 17:05:50.406 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:05:50.410 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:05:50.413 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:05:50.414 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:05:50.415 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-19 17:05:50.416 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 8.8887ms
2023-12-19 17:05:50.419 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:05:50.420 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:05:50.421 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-19 17:05:50.421 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 27.7941ms
2023-12-19 17:05:50.425 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:05:50.428 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-19 17:05:50.434 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:05:50.435 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:05:50.435 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 23.2017ms
2023-12-19 17:05:50.439 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 17:05:50.440 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:05:50.440 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 46.0831ms
2023-12-19 17:05:50.442 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:05:50.444 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 40.7729ms
2023-12-19 17:05:50.445 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:05:50.446 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 59.0468ms
2023-12-19 17:05:50.483 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:05:50.483 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:05:50.484 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:50.485 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:50.485 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 2.1120ms
2023-12-19 17:05:50.486 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 2.5780ms
2023-12-19 17:05:50.486 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:05:50.487 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:05:50.488 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:50.489 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:05:50.490 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:05:50.490 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:05:50.490 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:05:50.491 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:05:50.497 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:05:50.500 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:05:50.501 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:05:50.502 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:05:50.503 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 10.1435ms
2023-12-19 17:05:50.504 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 9.5263ms
2023-12-19 17:05:50.506 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:05:50.507 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:05:50.508 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 21.4307ms
2023-12-19 17:05:50.509 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 21.8241ms
2023-12-19 17:10:21.528 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-19 17:10:21.529 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 17:10:21.535 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.539 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.547 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 18.5334ms
2023-12-19 17:10:21.551 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 21.2835ms
2023-12-19 17:10:21.528 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 17:10:21.536 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-19 17:10:21.543 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:10:21.551 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:10:21.576 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-19 17:10:21.579 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 17:10:21.581 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.582 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.583 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.583 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.585 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.588 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 17:10:21.586 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 57.4455ms
2023-12-19 17:10:21.606 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.587 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 50.5544ms
2023-12-19 17:10:21.592 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 49.0829ms
2023-12-19 17:10:21.595 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 44.7374ms
2023-12-19 17:10:21.584 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.588 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 17:10:21.602 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:10:21.602 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:10:21.609 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 17:10:21.609 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:10:21.611 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:10:21.611 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:10:21.613 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 17:10:21.613 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.614 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.620 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:10:21.616 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:10:21.616 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.617 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:10:21.618 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.619 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-19 17:10:21.626 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-19 17:10:21.624 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 14.1852ms
2023-12-19 17:10:21.626 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 15.0798ms
2023-12-19 17:10:21.631 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-19 17:10:21.621 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-19 17:10:21.621 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:10:21.615 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.634 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-19 17:10:21.636 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:10:21.638 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:10:21.628 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:10:21.643 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-19 17:10:21.655 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:10:21.642 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 13.9885ms
2023-12-19 17:10:21.639 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:10:21.640 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:10:21.658 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:10:21.660 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:10:21.661 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 17:10:21.663 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:10:21.664 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:10:21.665 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 42.6076ms
2023-12-19 17:10:21.667 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 23.003ms
2023-12-19 17:10:21.672 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 17:10:21.668 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 91.7628ms
2023-12-19 17:10:21.670 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 33.0747ms
2023-12-19 17:10:21.674 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:10:21.675 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 95.7845ms
2023-12-19 17:10:21.676 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-19 17:10:21.676 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:10:21.677 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 75.4643ms
2023-12-19 17:10:21.678 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.679 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 90.7733ms
2023-12-19 17:10:21.680 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 17:10:21.681 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-19 17:10:21.688 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 17:10:21.688 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 17:10:21.688 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:10:21.688 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.689 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.690 +01:00 [INF] Executed DbCommand (17ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:10:21.690 +01:00 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-19 17:10:21.691 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.692 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 17:10:21.692 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:10:21.694 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:10:21.699 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:10:21.699 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:10:21.700 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:10:21.705 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 22.5187ms
2023-12-19 17:10:21.700 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:10:21.701 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-19 17:10:21.702 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 30.6188ms
2023-12-19 17:10:21.707 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 17:10:21.708 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:10:21.711 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-19 17:10:21.712 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:10:21.713 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 36.9429ms
2023-12-19 17:10:21.717 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:10:21.711 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:10:21.719 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:10:21.719 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:10:21.720 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-19 17:10:21.706 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:10:21.722 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 120.0288ms
2023-12-19 17:10:21.723 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:10:21.723 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 13.1317ms
2023-12-19 17:10:21.723 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.727 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-19 17:10:21.729 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:10:21.731 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:10:21.732 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:10:21.732 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:10:21.733 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:10:21.735 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:10:21.735 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 47.6154ms
2023-12-19 17:10:21.737 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:10:21.737 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:10:21.738 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 29.8321ms
2023-12-19 17:10:21.739 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 12.4243ms
2023-12-19 17:10:21.740 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 115.3673ms
2023-12-19 17:10:21.746 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:10:21.743 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 17:10:21.744 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:10:21.741 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 17:10:21.746 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:10:21.748 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:10:21.749 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 61.4638ms
2023-12-19 17:10:21.750 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 62.2862ms
2023-12-19 17:10:21.751 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.752 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 164.6280ms
2023-12-19 17:10:21.753 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 11.3826ms
2023-12-19 17:10:21.756 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:10:21.757 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:10:21.758 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:10:21.759 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 39.5442ms
2023-12-19 17:10:21.764 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:10:21.769 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:10:21.776 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:10:21.780 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:10:21.788 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:10:21.788 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:10:21.788 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:10:21.789 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.793 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.794 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:10:21.794 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:10:21.795 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:10:21.796 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:10:21.798 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:10:21.799 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:10:21.800 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 39.6846ms
2023-12-19 17:10:21.806 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:10:21.806 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:10:21.809 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:10:21.810 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:10:21.810 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 69.2058ms
2023-12-19 17:10:21.813 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:10:21.814 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 12.4396ms
2023-12-19 17:10:21.817 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 12.9734ms
2023-12-19 17:10:21.818 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:10:21.819 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:10:21.820 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 32.2539ms
2023-12-19 17:10:21.821 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 33.0927ms
2023-12-19 17:10:21.836 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:10:21.837 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.838 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:10:21.840 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:10:21.840 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:10:21.841 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:21.844 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:10:21.861 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:10:21.861 +01:00 [INF] Executed DbCommand (17ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:10:21.866 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:10:21.866 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:10:21.868 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 25.6607ms
2023-12-19 17:10:21.870 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:10:21.871 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:10:21.872 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 9.7359ms
2023-12-19 17:10:21.873 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 37.3415ms
2023-12-19 17:10:21.874 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:10:21.876 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 36.8440ms
2023-12-19 17:10:25.101 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=331a4fd2-b4dc-43cd-8eed-6dd7f7192091 - -
2023-12-19 17:10:25.102 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:25.102 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=331a4fd2-b4dc-43cd-8eed-6dd7f7192091 - - - 204 - - 1.6537ms
2023-12-19 17:10:25.104 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=331a4fd2-b4dc-43cd-8eed-6dd7f7192091 - -
2023-12-19 17:10:25.105 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:25.106 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:10:25.107 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:10:25.113 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:10:25.115 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:10:25.116 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 7.0226ms
2023-12-19 17:10:25.117 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:10:25.118 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=331a4fd2-b4dc-43cd-8eed-6dd7f7192091 - - - 200 - application/json;+charset=utf-8 14.5076ms
2023-12-19 17:10:25.903 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:10:25.904 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:10:25.905 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:10:25.906 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:10:25.910 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:10:25.913 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:10:25.914 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 7.2219ms
2023-12-19 17:10:25.915 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:10:25.916 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 13.2642ms
2023-12-19 17:11:21.899 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - -
2023-12-19 17:11:21.907 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 17:11:21.936 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:11:21.948 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 17:11:21.953 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/currency - -
2023-12-19 17:11:21.979 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:11:21.980 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/account/data - - - 204 - - 81.9511ms
2023-12-19 17:11:21.981 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:11:21.982 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:11:21.983 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 204 - - 76.1010ms
2023-12-19 17:11:21.985 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:11:21.994 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/account/data - -
2023-12-19 17:11:22.011 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:11:22.022 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:11:22.032 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 47.5176ms
2023-12-19 17:11:22.040 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 17:11:21.990 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 204 - - 60.3254ms
2023-12-19 17:11:21.991 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/currency - - - 204 - - 38.0122ms
2023-12-19 17:11:21.996 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:11:22.018 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - -
2023-12-19 17:11:22.025 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - -
2023-12-19 17:11:22.033 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/currency - -
2023-12-19 17:11:22.051 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:11:22.056 +01:00 [INF] Route matched with {action = "GetAccountData", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto]]] GetAccountData(System.Threading.CancellationToken) on controller WalletApp.Controllers.AccountController (WalletApp.Api).
2023-12-19 17:11:22.071 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:11:22.072 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:11:22.073 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:11:22.077 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 204 - - 81.7712ms
2023-12-19 17:11:22.074 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:11:22.074 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:11:22.080 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:11:22.080 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:11:22.081 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Id], [a0].[ActualMoneyChf], [a0].[ActualMoneyEur], [a0].[ActualMoneyGbp], [a0].[ActualMoneyPln], [a0].[ActualMoneyUsd], [a0].[CratedBy], [a0].[CreatedTime], [a0].[DeletedBy], [a0].[DeletedTime], [a0].[IsDeleted], [a0].[ModifiedBy], [a0].[ModifiedTime], [a0].[UserIdentityId], [m].[Id], [m].[CratedBy], [m].[CreatedTime], [m].[DeletedBy], [m].[DeletedTime], [m].[GroupId], [m].[IsDeleted], [m].[ModifiedBy], [m].[ModifiedTime], [m].[UserIdentityId], [m].[UserRoleIdentityId]
FROM [AspNetUsers] AS [a]
LEFT JOIN [AccountData] AS [a0] ON [a].[Id] = [a0].[UserIdentityId]
LEFT JOIN [Members] AS [m] ON [a].[Id] = [m].[UserIdentityId]
WHERE [a].[Id] = @__userId_0
2023-12-19 17:11:22.081 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 17:11:22.082 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:11:22.083 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:11:22.083 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:11:22.084 +01:00 [INF] Route matched with {action = "GetSumTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto]]]]] GetSumTransactions(System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:11:22.087 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Account.GetAccountData.GetAccountDataResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:11:22.087 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:11:22.090 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:11:22.093 +01:00 [INF] Executed action WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api) in 15.4988ms
2023-12-19 17:11:22.088 +01:00 [INF] Route matched with {action = "GetCurrencies", controller = "Currency"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto]]]] GetCurrencies(System.Threading.CancellationToken) on controller WalletApp.Controllers.CurrencyController (WalletApp.Api).
2023-12-19 17:11:22.089 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:11:22.097 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:11:22.099 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.AccountController.GetAccountData (WalletApp.Api)'
2023-12-19 17:11:22.095 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:11:22.127 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/account/data - - - 200 - application/json;+charset=utf-8 132.6909ms
2023-12-19 17:11:22.103 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-19 17:11:22.127 +01:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate]
FROM [Currencies] AS [c]
2023-12-19 17:11:22.134 +01:00 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:11:22.143 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Currency.GetCurrencies.GetCurrenciesQueryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:11:22.145 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:11:22.146 +01:00 [INF] Executed action WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api) in 29.0767ms
2023-12-19 17:11:22.147 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 24.4598ms
2023-12-19 17:11:22.147 +01:00 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:11:22.149 +01:00 [INF] Executed DbCommand (9ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-19 17:11:22.150 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.CurrencyController.GetCurrencies (WalletApp.Api)'
2023-12-19 17:11:22.151 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:11:22.162 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-19 17:11:22.162 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/currency - - - 200 - application/json;+charset=utf-8 129.8704ms
2023-12-19 17:11:22.163 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 111.6749ms
2023-12-19 17:11:22.166 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:11:22.167 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:11:22.169 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 73.0873ms
2023-12-19 17:11:22.174 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:11:22.177 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 17:11:22.179 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:11:22.180 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:11:22.181 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=2 - - - 200 - application/json;+charset=utf-8 155.5740ms
2023-12-19 17:11:22.185 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 60.2711ms
2023-12-19 17:11:22.186 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:11:22.187 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:11:22.190 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 109.7418ms
2023-12-19 17:11:22.191 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1
ORDER BY [t].[Date] DESC
2023-12-19 17:11:22.194 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetSumTransactions.GetSumTransactionsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:11:22.196 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api) in 104.8707ms
2023-12-19 17:11:22.197 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetSumTransactions (WalletApp.Api)'
2023-12-19 17:11:22.199 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionsByCurrency - - - 200 - application/json;+charset=utf-8 183.0656ms
2023-12-19 17:11:22.219 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:11:22.219 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - -
2023-12-19 17:11:22.220 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:11:22.221 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:11:22.223 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:11:22.224 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:11:22.224 +01:00 [INF] Route matched with {action = "GetIncomeByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto]]]] GetIncomeByCategory(WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:11:22.225 +01:00 [INF] Route matched with {action = "GetCostByCategory", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[System.Collections.Generic.IEnumerable`1[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto]]]] GetCostByCategory(WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:11:22.234 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] > 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:11:22.237 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__currencyId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c0].[Name], COALESCE(SUM([t].[Price]), 0.0)
FROM [Transactions] AS [t]
INNER JOIN [Currencies] AS [c] ON [t].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t].[CategoryId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [c].[Id] = @__currencyId_1 AND [t].[Price] < 0.0
GROUP BY [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
2023-12-19 17:11:22.239 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetIncomeByCategory.GetIncomeByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:11:22.241 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[System.Collections.Generic.IEnumerable`1[[WalletApp.Application.Common.Transaction.GetCostByCategory.GetCostByCategoryResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-19 17:11:22.242 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api) in 13.5617ms
2023-12-19 17:11:22.243 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api) in 13.2306ms
2023-12-19 17:11:22.245 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetIncomeByCategory (WalletApp.Api)'
2023-12-19 17:11:22.246 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetCostByCategory (WalletApp.Api)'
2023-12-19 17:11:22.247 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getIncomeByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 27.7856ms
2023-12-19 17:11:22.248 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/getCostByCategory?currencyId=d18771fe-5a2a-4723-a8df-534b43acb5ef - - - 200 - application/json;+charset=utf-8 28.7905ms
2023-12-19 17:12:06.744 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - -
2023-12-19 17:12:06.745 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:12:06.745 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - - - 204 - - 1.6375ms
2023-12-19 17:12:06.747 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - -
2023-12-19 17:12:06.748 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:12:06.749 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:06:42', Current time: '19.12.2023 16:12:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 17:12:06.752 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:06:42', Current time: '19.12.2023 16:12:06'.
2023-12-19 17:12:06.753 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-19 17:12:06.754 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - - - 401 - application/json 7.3458ms
2023-12-19 17:12:06.757 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/token/GNcYER3lXDz9oUUZx+Iy+ARoJRC2xH2XvQd85cNwR163jpOllLAqnAaul4hI2PWN9Y4NyEAdkakTn5q0YWFrMA== - -
2023-12-19 17:12:06.758 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:12:06.759 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/token/GNcYER3lXDz9oUUZx+Iy+ARoJRC2xH2XvQd85cNwR163jpOllLAqnAaul4hI2PWN9Y4NyEAdkakTn5q0YWFrMA== - - - 204 - - 1.7739ms
2023-12-19 17:12:06.760 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/GNcYER3lXDz9oUUZx+Iy+ARoJRC2xH2XvQd85cNwR163jpOllLAqnAaul4hI2PWN9Y4NyEAdkakTn5q0YWFrMA== - -
2023-12-19 17:12:06.766 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:12:06.768 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:06:42', Current time: '19.12.2023 16:12:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 17:12:06.770 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:06:42', Current time: '19.12.2023 16:12:06'.
2023-12-19 17:12:06.771 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 17:12:06.772 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 17:12:06.776 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 17:12:06.781 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__get_Item_0
2023-12-19 17:12:06.790 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Tokens] SET [RefreshToken] = @p0, [RefreshTokenExpiryTime] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2023-12-19 17:12:06.793 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-12-19 17:12:06.795 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:12:06.796 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 23.2834ms
2023-12-19 17:12:06.797 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 17:12:06.798 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/GNcYER3lXDz9oUUZx+Iy+ARoJRC2xH2XvQd85cNwR163jpOllLAqnAaul4hI2PWN9Y4NyEAdkakTn5q0YWFrMA== - - - 200 - application/json;+charset=utf-8 38.6001ms
2023-12-19 17:12:06.801 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - -
2023-12-19 17:12:06.801 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:12:06.802 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 17:12:06.803 +01:00 [INF] Route matched with {action = "GetAllTransactions", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto]]] GetAllTransactions(WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:12:06.807 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Transactions] AS [t]
        WHERE [t].[UserIdentityId] = @__userId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-12-19 17:12:06.810 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[CategoryId], [t0].[CratedBy], [t0].[CreatedTime], [t0].[CurrencyId], [t0].[Date], [t0].[DefaultTransactionId], [t0].[DeletedBy], [t0].[DeletedTime], [t0].[Description], [t0].[GroupId], [t0].[IsDefault], [t0].[IsDeleted], [t0].[ModifiedBy], [t0].[ModifiedTime], [t0].[Price], [t0].[Title], [t0].[UserIdentityId], [c].[Id], [c].[Ask], [c].[Bid], [c].[Code], [c].[CratedBy], [c].[CreatedTime], [c].[CurrencyName], [c].[DeletedBy], [c].[DeletedTime], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[TradingDate], [c0].[Id], [c0].[CratedBy], [c0].[CreatedTime], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[GroupId], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[Name], [c0].[UserIdentityId]
FROM (
    SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
    FROM [Transactions] AS [t]
    WHERE [t].[UserIdentityId] = @__userId_0
    ORDER BY [t].[Date] DESC
    OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
) AS [t0]
INNER JOIN [Currencies] AS [c] ON [t0].[CurrencyId] = [c].[Id]
INNER JOIN [Categories] AS [c0] ON [t0].[CategoryId] = [c0].[Id]
ORDER BY [t0].[Date] DESC
2023-12-19 17:12:06.815 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Transactions] AS [t]
WHERE [t].[UserIdentityId] = @__userId_0
2023-12-19 17:12:06.816 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionList.GetTransactionListResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:12:06.817 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api) in 13.0893ms
2023-12-19 17:12:06.819 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetAllTransactions (WalletApp.Api)'
2023-12-19 17:12:06.820 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/transactionList?PaginationParamsDto.PageNumber=1&PaginationParamsDto.PageSize=5 - - - 200 - application/json;+charset=utf-8 18.9175ms
2023-12-19 17:12:10.834 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/details?transactionId=6e717ec8-1fe2-42b0-8eed-08dbfc974deb - -
2023-12-19 17:12:10.835 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:12:10.836 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/details?transactionId=6e717ec8-1fe2-42b0-8eed-08dbfc974deb - - - 204 - - 2.1089ms
2023-12-19 17:12:10.837 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/details?transactionId=6e717ec8-1fe2-42b0-8eed-08dbfc974deb - -
2023-12-19 17:12:10.838 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:12:10.839 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetTransactionDetails (WalletApp.Api)'
2023-12-19 17:12:10.843 +01:00 [INF] Route matched with {action = "GetTransactionDetails", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionDetails.GetTransactionDetailsResponseDto]]] GetTransactionDetails(WalletApp.Application.Common.Transaction.GetTransactionDetails.GetTransactionDetailsDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:12:10.870 +01:00 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__transactionId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[CratedBy], [c].[CreatedTime], [c].[DeletedBy], [c].[DeletedTime], [c].[GroupId], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[Name], [c].[UserIdentityId], [c0].[Id], [c0].[Ask], [c0].[Bid], [c0].[Code], [c0].[CratedBy], [c0].[CreatedTime], [c0].[CurrencyName], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[TradingDate]
FROM [Transactions] AS [t]
INNER JOIN [Categories] AS [c] ON [t].[CategoryId] = [c].[Id]
INNER JOIN [Currencies] AS [c0] ON [t].[CurrencyId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [t].[Id] = @__transactionId_1
2023-12-19 17:12:10.882 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userid_0='?' (DbType = Guid), @__categoryId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Categories] AS [c] ON [t].[CategoryId] = [c].[Id]
WHERE [t].[UserIdentityId] = @__userid_0 AND [c].[Id] = @__categoryId_1
2023-12-19 17:12:10.887 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionDetails.GetTransactionDetailsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:12:10.894 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetTransactionDetails (WalletApp.Api) in 48.8141ms
2023-12-19 17:12:10.895 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetTransactionDetails (WalletApp.Api)'
2023-12-19 17:12:10.896 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/details?transactionId=6e717ec8-1fe2-42b0-8eed-08dbfc974deb - - - 200 - application/json;+charset=utf-8 59.0380ms
2023-12-19 17:12:45.483 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/details?transactionId=6e717ec8-1fe2-42b0-8eed-08dbfc974deb - -
2023-12-19 17:12:45.490 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:12:45.491 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/details?transactionId=6e717ec8-1fe2-42b0-8eed-08dbfc974deb - - - 204 - - 8.0043ms
2023-12-19 17:12:45.492 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/details?transactionId=6e717ec8-1fe2-42b0-8eed-08dbfc974deb - -
2023-12-19 17:12:45.493 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:12:45.496 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetTransactionDetails (WalletApp.Api)'
2023-12-19 17:12:45.497 +01:00 [INF] Route matched with {action = "GetTransactionDetails", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionDetails.GetTransactionDetailsResponseDto]]] GetTransactionDetails(WalletApp.Application.Common.Transaction.GetTransactionDetails.GetTransactionDetailsDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:12:45.503 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__transactionId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[CratedBy], [c].[CreatedTime], [c].[DeletedBy], [c].[DeletedTime], [c].[GroupId], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[Name], [c].[UserIdentityId], [c0].[Id], [c0].[Ask], [c0].[Bid], [c0].[Code], [c0].[CratedBy], [c0].[CreatedTime], [c0].[CurrencyName], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[TradingDate]
FROM [Transactions] AS [t]
INNER JOIN [Categories] AS [c] ON [t].[CategoryId] = [c].[Id]
INNER JOIN [Currencies] AS [c0] ON [t].[CurrencyId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [t].[Id] = @__transactionId_1
2023-12-19 17:12:45.508 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userid_0='?' (DbType = Guid), @__categoryId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Categories] AS [c] ON [t].[CategoryId] = [c].[Id]
WHERE [t].[UserIdentityId] = @__userid_0 AND [c].[Id] = @__categoryId_1
2023-12-19 17:12:45.511 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionDetails.GetTransactionDetailsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:12:45.512 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetTransactionDetails (WalletApp.Api) in 13.1005ms
2023-12-19 17:12:45.513 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetTransactionDetails (WalletApp.Api)'
2023-12-19 17:12:45.514 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/details?transactionId=6e717ec8-1fe2-42b0-8eed-08dbfc974deb - - - 200 - application/json;+charset=utf-8 21.9139ms
2023-12-19 17:19:06.741 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/details?transactionId=6e717ec8-1fe2-42b0-8eed-08dbfc974deb - -
2023-12-19 17:19:06.746 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:19:06.747 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/transactionUser/details?transactionId=6e717ec8-1fe2-42b0-8eed-08dbfc974deb - - - 204 - - 7.9976ms
2023-12-19 17:19:06.750 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/details?transactionId=6e717ec8-1fe2-42b0-8eed-08dbfc974deb - -
2023-12-19 17:19:06.757 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:19:06.758 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:13:06', Current time: '19.12.2023 16:19:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 17:19:06.761 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:13:06', Current time: '19.12.2023 16:19:06'.
2023-12-19 17:19:06.763 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-19 17:19:06.764 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/details?transactionId=6e717ec8-1fe2-42b0-8eed-08dbfc974deb - - - 401 - application/json 13.2156ms
2023-12-19 17:19:06.768 +01:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5238/api/token/qKxR5M9bGDfNLsRV0XO2D8KWPGKN0H8TCKFAbiELvsZ2GiSSgrLHZCmhnK5otVar54pKDFDeuifAQvJmq+PnA== - -
2023-12-19 17:19:06.769 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:19:06.770 +01:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5238/api/token/qKxR5M9bGDfNLsRV0XO2D8KWPGKN0H8TCKFAbiELvsZ2GiSSgrLHZCmhnK5otVar54pKDFDeuifAQvJmq+PnA== - - - 204 - - 2.3492ms
2023-12-19 17:19:06.771 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/token/qKxR5M9bGDfNLsRV0XO2D8KWPGKN0H8TCKFAbiELvsZ2GiSSgrLHZCmhnK5otVar54pKDFDeuifAQvJmq+PnA== - -
2023-12-19 17:19:06.779 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:19:06.780 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:13:06', Current time: '19.12.2023 16:19:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-12-19 17:19:06.784 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19.12.2023 16:13:06', Current time: '19.12.2023 16:19:06'.
2023-12-19 17:19:06.785 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 17:19:06.786 +01:00 [INF] Route matched with {action = "GetTokens", controller = "Token"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto]]] GetTokens(System.String, System.Threading.CancellationToken) on controller WalletApp.Controllers.TokenController (WalletApp.Api).
2023-12-19 17:19:06.815 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[IpAddress], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[UserIdentityId]
FROM [Tokens] AS [t]
WHERE [t].[RefreshToken] = @__refreshToken_0
2023-12-19 17:19:06.820 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[IconType], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__get_Item_0
2023-12-19 17:19:06.828 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p2='?' (DbType = Guid), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Tokens] SET [RefreshToken] = @p0, [RefreshTokenExpiryTime] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2023-12-19 17:19:06.832 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-12-19 17:19:06.834 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Token.UpdateRefreshToken.RefreshTokenResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:19:06.835 +01:00 [INF] Executed action WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api) in 46.776ms
2023-12-19 17:19:06.837 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TokenController.GetTokens (WalletApp.Api)'
2023-12-19 17:19:06.838 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/token/qKxR5M9bGDfNLsRV0XO2D8KWPGKN0H8TCKFAbiELvsZ2GiSSgrLHZCmhnK5otVar54pKDFDeuifAQvJmq+PnA== - - - 200 - application/json;+charset=utf-8 66.7393ms
2023-12-19 17:19:06.841 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5238/api/transactionUser/details?transactionId=6e717ec8-1fe2-42b0-8eed-08dbfc974deb - -
2023-12-19 17:19:06.842 +01:00 [INF] CORS policy execution successful.
2023-12-19 17:19:06.843 +01:00 [INF] Executing endpoint 'WalletApp.Controllers.TransactionUserController.GetTransactionDetails (WalletApp.Api)'
2023-12-19 17:19:06.844 +01:00 [INF] Route matched with {action = "GetTransactionDetails", controller = "TransactionUser"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[WalletApp.Application.Common.ApiResult`1[WalletApp.Application.Common.Transaction.GetTransactionDetails.GetTransactionDetailsResponseDto]]] GetTransactionDetails(WalletApp.Application.Common.Transaction.GetTransactionDetails.GetTransactionDetailsDto, System.Threading.CancellationToken) on controller WalletApp.Controllers.TransactionUserController (WalletApp.Api).
2023-12-19 17:19:06.849 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (DbType = Guid), @__transactionId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId], [c].[Id], [c].[CratedBy], [c].[CreatedTime], [c].[DeletedBy], [c].[DeletedTime], [c].[GroupId], [c].[IsDeleted], [c].[ModifiedBy], [c].[ModifiedTime], [c].[Name], [c].[UserIdentityId], [c0].[Id], [c0].[Ask], [c0].[Bid], [c0].[Code], [c0].[CratedBy], [c0].[CreatedTime], [c0].[CurrencyName], [c0].[DeletedBy], [c0].[DeletedTime], [c0].[IsDeleted], [c0].[ModifiedBy], [c0].[ModifiedTime], [c0].[TradingDate]
FROM [Transactions] AS [t]
INNER JOIN [Categories] AS [c] ON [t].[CategoryId] = [c].[Id]
INNER JOIN [Currencies] AS [c0] ON [t].[CurrencyId] = [c0].[Id]
WHERE [t].[UserIdentityId] = @__userId_0 AND [t].[Id] = @__transactionId_1
2023-12-19 17:19:06.854 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userid_0='?' (DbType = Guid), @__categoryId_1='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoryId], [t].[CratedBy], [t].[CreatedTime], [t].[CurrencyId], [t].[Date], [t].[DefaultTransactionId], [t].[DeletedBy], [t].[DeletedTime], [t].[Description], [t].[GroupId], [t].[IsDefault], [t].[IsDeleted], [t].[ModifiedBy], [t].[ModifiedTime], [t].[Price], [t].[Title], [t].[UserIdentityId]
FROM [Transactions] AS [t]
INNER JOIN [Categories] AS [c] ON [t].[CategoryId] = [c].[Id]
WHERE [t].[UserIdentityId] = @__userid_0 AND [c].[Id] = @__categoryId_1
2023-12-19 17:19:06.857 +01:00 [INF] Executing OkObjectResult, writing value of type 'WalletApp.Application.Common.ApiResult`1[[WalletApp.Application.Common.Transaction.GetTransactionDetails.GetTransactionDetailsResponseDto, WalletApp.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-19 17:19:06.858 +01:00 [INF] Executed action WalletApp.Controllers.TransactionUserController.GetTransactionDetails (WalletApp.Api) in 12.8058ms
2023-12-19 17:19:06.860 +01:00 [INF] Executed endpoint 'WalletApp.Controllers.TransactionUserController.GetTransactionDetails (WalletApp.Api)'
2023-12-19 17:19:06.861 +01:00 [INF] Request finished HTTP/1.1 GET http://localhost:5238/api/transactionUser/details?transactionId=6e717ec8-1fe2-42b0-8eed-08dbfc974deb - - - 200 - application/json;+charset=utf-8 20.0865ms
